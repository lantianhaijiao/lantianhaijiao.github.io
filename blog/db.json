{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/flexblock/source/about.html","path":"about.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/icons-192.png","path":"icons-192.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/code.html","path":"code.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/flexblock/source/icons-512.png","path":"icons-512.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/promise.html","path":"promise.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/manifest.json","path":"manifest.json","modified":1,"renderable":1},{"_id":"themes/flexblock/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/flexblock/source/docs/favicon.ico","path":"docs/favicon.ico","modified":1,"renderable":1},{"_id":"themes/flexblock/source/docs/index.html","path":"docs/index.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/img/banner.jpg","path":"img/banner.jpg","modified":1,"renderable":1},{"_id":"themes/flexblock/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/js/util.js","path":"js/util.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/404.html","path":"press/404.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/api-examples.html","path":"press/api-examples.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/hashmap.json","path":"press/hashmap.json","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/index.html","path":"press/index.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/markdown-examples.html","path":"press/markdown-examples.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/pag.html","path":"press/pag.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/spine.html","path":"press/spine.html","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/vp-icons.css","path":"press/vp-icons.css","modified":1,"renderable":1},{"_id":"themes/flexblock/source/docs/assets/AboutView-dGjetRiY.js","path":"docs/assets/AboutView-dGjetRiY.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/docs/assets/AboutView-ug8e6cRs.css","path":"docs/assets/AboutView-ug8e6cRs.css","modified":1,"renderable":1},{"_id":"themes/flexblock/source/docs/assets/index-UmqpQW8u.js","path":"docs/assets/index-UmqpQW8u.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/js/highlight/default.min.css","path":"js/highlight/default.min.css","modified":1,"renderable":1},{"_id":"themes/flexblock/source/js/highlight/languages.go.min.js","path":"js/highlight/languages.go.min.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/js/highlight/highlight.min.js","path":"js/highlight/highlight.min.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/js/highlight/prism.js","path":"js/highlight/prism.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/docs/assets/index-zqfkXEwc.css","path":"docs/assets/index-zqfkXEwc.css","modified":1,"renderable":1},{"_id":"themes/flexblock/source/js/highlight/prism.css","path":"js/highlight/prism.css","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/api-examples.md.Bl7LuNsL.js","path":"press/assets/api-examples.md.Bl7LuNsL.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/app.Dp55DMz0.js","path":"press/assets/app.Dp55DMz0.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/api-examples.md.Bl7LuNsL.lean.js","path":"press/assets/api-examples.md.Bl7LuNsL.lean.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/image-1.BeknGolo.png","path":"press/assets/image-1.BeknGolo.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/image-2.eCOqUL2D.png","path":"press/assets/image-2.eCOqUL2D.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/image-3.DjnV5J-i.png","path":"press/assets/image-3.DjnV5J-i.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/image-1.Ca1Kpliw.png","path":"press/assets/image-1.Ca1Kpliw.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/image-4.DcKTtia5.png","path":"press/assets/image-4.DcKTtia5.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/image-5.DpbAAFh7.png","path":"press/assets/image-5.DpbAAFh7.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/image-6.5xPkExNN.png","path":"press/assets/image-6.5xPkExNN.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/image-7.CBxgmzCD.png","path":"press/assets/image-7.CBxgmzCD.png","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/index.md.BCNv9eZ5.js","path":"press/assets/index.md.BCNv9eZ5.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/index.md.BCNv9eZ5.lean.js","path":"press/assets/index.md.BCNv9eZ5.lean.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-italic-cyrillic-ext.r48I6akx.woff2","path":"press/assets/inter-italic-cyrillic-ext.r48I6akx.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-italic-cyrillic.By2_1cv3.woff2","path":"press/assets/inter-italic-cyrillic.By2_1cv3.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-italic-greek-ext.1u6EdAuj.woff2","path":"press/assets/inter-italic-greek-ext.1u6EdAuj.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-italic-greek.DJ8dCoTZ.woff2","path":"press/assets/inter-italic-greek.DJ8dCoTZ.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-italic-latin-ext.CN1xVJS-.woff2","path":"press/assets/inter-italic-latin-ext.CN1xVJS-.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-italic-latin.C2AdPX0b.woff2","path":"press/assets/inter-italic-latin.C2AdPX0b.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-italic-vietnamese.BSbpV94h.woff2","path":"press/assets/inter-italic-vietnamese.BSbpV94h.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-roman-cyrillic-ext.BBPuwvHQ.woff2","path":"press/assets/inter-roman-cyrillic-ext.BBPuwvHQ.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-roman-cyrillic.C5lxZ8CY.woff2","path":"press/assets/inter-roman-cyrillic.C5lxZ8CY.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-roman-greek-ext.CqjqNYQ-.woff2","path":"press/assets/inter-roman-greek-ext.CqjqNYQ-.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-roman-greek.BBVDIX6e.woff2","path":"press/assets/inter-roman-greek.BBVDIX6e.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-roman-latin-ext.4ZJIpNVo.woff2","path":"press/assets/inter-roman-latin-ext.4ZJIpNVo.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-roman-latin.Di8DUHzh.woff2","path":"press/assets/inter-roman-latin.Di8DUHzh.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/inter-roman-vietnamese.BjW4sHH5.woff2","path":"press/assets/inter-roman-vietnamese.BjW4sHH5.woff2","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/markdown-examples.md.CNhl67zZ.js","path":"press/assets/markdown-examples.md.CNhl67zZ.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/markdown-examples.md.CNhl67zZ.lean.js","path":"press/assets/markdown-examples.md.CNhl67zZ.lean.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/pag.md.D7B4gEbz.js","path":"press/assets/pag.md.D7B4gEbz.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/pag.md.D7B4gEbz.lean.js","path":"press/assets/pag.md.D7B4gEbz.lean.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/spine.md.yTL_iqEX.js","path":"press/assets/spine.md.yTL_iqEX.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/spine.md.yTL_iqEX.lean.js","path":"press/assets/spine.md.yTL_iqEX.lean.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/style.DUO3vzbg.css","path":"press/assets/style.DUO3vzbg.css","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/chunks/framework.CPIiAToz.js","path":"press/assets/chunks/framework.CPIiAToz.js","modified":1,"renderable":1},{"_id":"themes/flexblock/source/press/assets/chunks/theme.Dq6GLO1A.js","path":"press/assets/chunks/theme.Dq6GLO1A.js","modified":1,"renderable":1},{"_id":"source/img/common/t1.jpg","path":"img/common/t1.jpg","modified":1,"renderable":0},{"_id":"source/img/common/t10.png","path":"img/common/t10.png","modified":1,"renderable":0},{"_id":"source/img/common/t11.jpg","path":"img/common/t11.jpg","modified":1,"renderable":0},{"_id":"source/img/common/t13.jpeg","path":"img/common/t13.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t14.jpeg","path":"img/common/t14.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t15.jpeg","path":"img/common/t15.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t16.jpeg","path":"img/common/t16.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t17.jpeg","path":"img/common/t17.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t18.jpeg","path":"img/common/t18.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t19.jpeg","path":"img/common/t19.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t2.jpg","path":"img/common/t2.jpg","modified":1,"renderable":0},{"_id":"source/img/common/t20.jpeg","path":"img/common/t20.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t21.jpeg","path":"img/common/t21.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t22.jpeg","path":"img/common/t22.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t23.jpeg","path":"img/common/t23.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t24.jpeg","path":"img/common/t24.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t25.jpeg","path":"img/common/t25.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t26.jpeg","path":"img/common/t26.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t27.jpeg","path":"img/common/t27.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t28.jpeg","path":"img/common/t28.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t29.jpeg","path":"img/common/t29.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t3.jpg","path":"img/common/t3.jpg","modified":1,"renderable":0},{"_id":"source/img/common/t30.jpeg","path":"img/common/t30.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t31.jpeg","path":"img/common/t31.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t32.jpeg","path":"img/common/t32.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t33.jpeg","path":"img/common/t33.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t34.jpeg","path":"img/common/t34.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t4.jpeg","path":"img/common/t4.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t5.jpg","path":"img/common/t5.jpg","modified":1,"renderable":0},{"_id":"source/img/common/t6.jpeg","path":"img/common/t6.jpeg","modified":1,"renderable":0},{"_id":"source/img/common/t7.jpg","path":"img/common/t7.jpg","modified":1,"renderable":0},{"_id":"source/img/common/t8.jpg","path":"img/common/t8.jpg","modified":1,"renderable":0},{"_id":"source/img/common/t9.jpg","path":"img/common/t9.jpg","modified":1,"renderable":0},{"_id":"source/img/spine/image-1.png","path":"img/spine/image-1.png","modified":1,"renderable":0},{"_id":"source/img/pag/image-1.png","path":"img/pag/image-1.png","modified":1,"renderable":0},{"_id":"source/img/pag/image-2.png","path":"img/pag/image-2.png","modified":1,"renderable":0},{"_id":"source/img/pag/image-3.png","path":"img/pag/image-3.png","modified":1,"renderable":0},{"_id":"source/img/pag/image-4.png","path":"img/pag/image-4.png","modified":1,"renderable":0},{"_id":"source/img/pag/image-5.png","path":"img/pag/image-5.png","modified":1,"renderable":0},{"_id":"source/img/pag/image-6.png","path":"img/pag/image-6.png","modified":1,"renderable":0},{"_id":"source/img/pag/image-7.png","path":"img/pag/image-7.png","modified":1,"renderable":0},{"_id":"source/img/tidy/image-1.png","path":"img/tidy/image-1.png","modified":1,"renderable":0},{"_id":"source/img/tidy/image-2.png","path":"img/tidy/image-2.png","modified":1,"renderable":0},{"_id":"source/img/tidy/image-3.png","path":"img/tidy/image-3.png","modified":1,"renderable":0},{"_id":"source/img/tidy/image-4.png","path":"img/tidy/image-4.png","modified":1,"renderable":0},{"_id":"source/img/tidy/image-5.png","path":"img/tidy/image-5.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"af124137a0e4969324df29788d1f5cfffe1571dc","modified":1744594881711},{"_id":"source/_posts/js-common.md","hash":"2da31a664bcdd3cf87dea4f4cb8ef27da05ef676","modified":1744594881712},{"_id":"source/_posts/pag.md","hash":"317e1fe47780e745a2ee6bc1398392d4b9e9726b","modified":1744594881712},{"_id":"source/_posts/pitfall-diary.md","hash":"b5e3497e7ef3803e0cd5dbb454a0f8e74056cb91","modified":1744594881712},{"_id":"source/_posts/spine.md","hash":"c362dd839a2f0985f615297b215f623fb79d938e","modified":1744594881713},{"_id":"source/_posts/vite.md","hash":"20ff84fb23ec60be4e3a9d06a7b80b2dec798310","modified":1744594881713},{"_id":"source/_posts/test-my-site.md","hash":"b494051b0baf3d77124abd4115ee81cbb689e3b8","modified":1744594881713},{"_id":"source/img/.DS_Store","hash":"5e19a2f6150a382f19821695b35cd01e474782e3","modified":1735612717381},{"_id":"source/img/common/t2.jpg","hash":"bbda9b7aa53ffa37335e46146725763c306cd80d","modified":1744594881772},{"_id":"source/img/common/t3.jpg","hash":"3ba67788202af783c8bf103eb53d267755d6a00b","modified":1744594881925},{"_id":"source/img/spine/image-1.png","hash":"21ae2aab5270bf5d89e06af732faffe28b90a52f","modified":1744594882011},{"_id":"source/img/pag/image-2.png","hash":"96a4351581da2a3597cb4fcec347d7a08eacfa3c","modified":1744594882009},{"_id":"source/img/pag/image-1.png","hash":"ecb90802fbacb3ca525209d2e8b681ee81fc2438","modified":1744594882008},{"_id":"source/img/pag/image-3.png","hash":"5510eda3a51a3a6951d2fc2dbebc554edf05d21b","modified":1744594882010},{"_id":"source/img/pag/image-5.png","hash":"299f4443c5a40169e70c6c52cd76f24dd13a48b4","modified":1744594882010},{"_id":"source/img/pag/image-4.png","hash":"31e4b24b14fb4d97bf960a93775a7b34079d3206","modified":1744594882010},{"_id":"source/img/tidy/image-3.png","hash":"d87449f68e42fc37d4e9cb6365a72f91ad977db8","modified":1744594882014},{"_id":"source/img/tidy/image-4.png","hash":"ed24b881bdda61abba62da9f03fb2dd72f8ff961","modified":1744594882014},{"_id":"source/img/common/t1.jpg","hash":"db11f62c99d1fd61f1feabcf06a0c472bdb50dbe","modified":1744594881713},{"_id":"source/img/pag/image-6.png","hash":"ba8eda79c5071c8dd1c71314b252b40316c584e1","modified":1744594882011},{"_id":"source/img/pag/image-7.png","hash":"a3056867da0d55253094eb1e19dce4fba1366db2","modified":1744594882011},{"_id":"source/img/common/t11.jpg","hash":"6d078363307f45d3c935545e965bdaadbf186687","modified":1744594881714},{"_id":"source/img/common/t13.jpeg","hash":"e5d9b02c889d9b1436114dbd24b4326701a8a862","modified":1744594881714},{"_id":"source/img/common/t4.jpeg","hash":"fcf3277a76efe853dc55fe57c8be17638f9d80de","modified":1744594882006},{"_id":"source/img/common/t9.jpg","hash":"a2da8ff0abf07e3e8c321d864217ef456a72bbba","modified":1744594882008},{"_id":"source/img/tidy/image-1.png","hash":"4b326253978c0538e88c977c31bf191d8f6b077e","modified":1744594882012},{"_id":"source/img/tidy/image-2.png","hash":"09044e295bcb51be3879220097d1d34139c58791","modified":1744594882013},{"_id":"source/img/common/t8.jpg","hash":"5c7f0a6e01e6276853d5a6ddc4f2a5a75c6aafe8","modified":1744594882008},{"_id":"source/img/common/t6.jpeg","hash":"e0eec15eefdcce61f11904d7f3cfb2c1f875f35c","modified":1744594882007},{"_id":"source/img/tidy/image-5.png","hash":"4a01ff7f88aa18e0d382bde72ee07dad7289bcad","modified":1744594882015},{"_id":"source/img/common/t5.jpg","hash":"7f8ff32d8a464be13c099570048de263b96812be","modified":1744594882006},{"_id":"source/img/common/t7.jpg","hash":"997245da64594e851f05960a50a115010425a92b","modified":1744594882007},{"_id":"source/img/common/t18.jpeg","hash":"b99d07ca22e4ca7641c12d6f3f5f2c247bd0ea56","modified":1744594881763},{"_id":"themes/flexblock/.gitignore","hash":"a010af107642d751bda979583183f366cf05fd7f","modified":1744594882016},{"_id":"themes/flexblock/LICENSE","hash":"da85e2f093615e3c008f60a94f85bf3d45106c95","modified":1744594882016},{"_id":"themes/flexblock/README.md","hash":"96fb9162640f7ea355d66e09a9e8718d4c8816db","modified":1744594882016},{"_id":"themes/flexblock/.prettierrc.cjs","hash":"485d5a61c410ecebb2954e6762f7eb6f10f6b3e9","modified":1744594882016},{"_id":"themes/flexblock/package.json","hash":"4444cdfac3e5c95144962471050b073779475139","modified":1744594882022},{"_id":"themes/flexblock/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1710826585577},{"_id":"themes/flexblock/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1744594882017},{"_id":"themes/flexblock/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1744594882017},{"_id":"themes/flexblock/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1744594882017},{"_id":"themes/flexblock/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1744594882017},{"_id":"themes/flexblock/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1744594882017},{"_id":"themes/flexblock/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1744594882017},{"_id":"themes/flexblock/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1744594882017},{"_id":"themes/flexblock/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1744594882017},{"_id":"themes/flexblock/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1744594882017},{"_id":"themes/flexblock/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1744594882017},{"_id":"themes/flexblock/languages/zh-CN.yml","hash":"eb0ef000853ecc6d5db678dd5b71caf53e809d02","modified":1744594882017},{"_id":"themes/flexblock/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1744594882017},{"_id":"themes/flexblock/_config.yml","hash":"063b64b563c22d6b1c78c2e0845e983ae3af57dd","modified":1745976695329},{"_id":"themes/flexblock/scripts/index.js","hash":"67587a84ed857755433949f153e891ec72e36a1f","modified":1744594882030},{"_id":"themes/flexblock/layout/index.ejs","hash":"1170f7c070d40374753ac343783b9795349f6ec9","modified":1744594882021},{"_id":"themes/flexblock/layout/layout.ejs","hash":"c5224243301861957df9ef7c0454a8ce068e9ec1","modified":1744594882021},{"_id":"themes/flexblock/layout/page.ejs","hash":"1efd4bc229345efff68aa47ec4bf9a774ebee874","modified":1744594882021},{"_id":"themes/flexblock/layout/tag.ejs","hash":"5d7eaf2d7cee35d6ec957db5edbf81f38b450ed7","modified":1744594882022},{"_id":"themes/flexblock/layout/archive.ejs","hash":"691837b349f9c4c11651d3a45776130cbde3587e","modified":1744594882021},{"_id":"themes/flexblock/layout/category.ejs","hash":"c631331af04cbfb8eb4567262a369be74fdf4acb","modified":1744594882021},{"_id":"themes/flexblock/layout/post.ejs","hash":"e7afe45b5c524dcd7fc6115936dc4de8f6deaedc","modified":1744594882022},{"_id":"themes/flexblock/source/about.html","hash":"ae30f1f056084b132cce4bfa14cfa12b6f43e9c9","modified":1744594882030},{"_id":"themes/flexblock/source/code.html","hash":"1d77c0f2cf20bd50c24f3ff908018f7df372d773","modified":1744594882031},{"_id":"themes/flexblock/source/favicon.ico","hash":"d0f2ad8384dbc87e074ad78797137b47276c4ac8","modified":1744594882036},{"_id":"themes/flexblock/.github/workflows/npm-publish.yml","hash":"6bbe7bfe0ef521a5c8d317e645ea194bb921be73","modified":1744594882015},{"_id":"themes/flexblock/source/icons-192.png","hash":"d0f2ad8384dbc87e074ad78797137b47276c4ac8","modified":1744594882036},{"_id":"themes/flexblock/layout/_partial/article-list.ejs","hash":"e7d7858e52174cad048f7667083f87b2926f7a2e","modified":1744594882018},{"_id":"themes/flexblock/source/manifest.json","hash":"80bf2ee26845bb4393dfc9ce5af346fb49875e63","modified":1744594882039},{"_id":"themes/flexblock/layout/_partial/footer-script.ejs","hash":"1975bc07891e516c797de7d346db051745da7a63","modified":1744594882018},{"_id":"themes/flexblock/layout/_partial/content.ejs","hash":"abac1b4977a15d63535aad7e4566e998baafac37","modified":1744594882018},{"_id":"themes/flexblock/layout/_partial/footer.ejs","hash":"ec1b0fc3c90b768a9e5a7e17d12865661f6a6976","modified":1744594882018},{"_id":"themes/flexblock/layout/_partial/nav.ejs","hash":"83a7cee1144caae0be369ba4101207d5023a6609","modified":1744594882019},{"_id":"themes/flexblock/source/promise.html","hash":"1a734a5f9dbaf2ba3795fb9008eebdf42e3cedef","modified":1744594882039},{"_id":"themes/flexblock/layout/_partial/footer-other.ejs","hash":"9e93e20f3e3ded687abe00a6478e3c4dbfff479e","modified":1744594882018},{"_id":"themes/flexblock/layout/_partial/header.ejs","hash":"4a8d3ea2f21a189a60c7377ea70cb518dd53d032","modified":1744594882018},{"_id":"themes/flexblock/layout/plug-in/aplayer.ejs","hash":"081184379480e5e154a7d06e1e059a38e964f10c","modified":1744594882022},{"_id":"themes/flexblock/layout/plug-in/bilibili-emoji.ejs","hash":"55a1213ef83c32e59f9cc0a84502a87985da1db5","modified":1744594882022},{"_id":"themes/flexblock/layout/plug-in/clipboard.ejs","hash":"2b774c9bca4a7d38bd964276b316bf78a6d75f7f","modified":1744594882022},{"_id":"themes/flexblock/layout/plug-in/clipboard.min.js","hash":"f48e9bfeca83e5057cc751e8c44fc07e9d976c06","modified":1744594882022},{"_id":"themes/flexblock/layout/plug-in/dplayer.ejs","hash":"1ba83b2e10b840c6b5b72ece2f8448f4ec888347","modified":1744594882022},{"_id":"themes/flexblock/layout/_partial/page.ejs","hash":"9411826c3a045f389d23cbc809e2ef46e21ea1fd","modified":1744594882019},{"_id":"themes/flexblock/layout/_partial/pagination.ejs","hash":"51a0986190719eea34e8624c87b346b4a199e49c","modified":1744594882019},{"_id":"themes/flexblock/layout/_widget/date.ejs","hash":"5c275ec71f7ce628599683393ae71cf95196f71f","modified":1744594882020},{"_id":"themes/flexblock/layout/_widget/article-nav.ejs","hash":"8df3b527e6153323c8ded33768bd5e5267dfa422","modified":1744594882020},{"_id":"themes/flexblock/layout/_widget/tag.ejs","hash":"2a1642735fe62363cee1eeeb09a3d36c2e8ac00e","modified":1744594882020},{"_id":"themes/flexblock/layout/_widget/widget-author.ejs","hash":"aaf727b82b982fd336798d60d611387a9522dcb3","modified":1744594882021},{"_id":"themes/flexblock/layout/_widget/updated.ejs","hash":"7ce6c7f3d22f7c394cf43f4f4b893dabc9503e83","modified":1744594882021},{"_id":"themes/flexblock/layout/_widget/widget-categorys.ejs","hash":"588237737f87a0ff69d00605c868c1297054d573","modified":1744594882021},{"_id":"themes/flexblock/source/css/style.styl","hash":"f388a27e55579eb3ecd726c580c2253a48f68fc3","modified":1744594882032},{"_id":"themes/flexblock/layout/_widget/widget-notice.ejs","hash":"0a1ec45028b2abd123bb6a96017168fd55759971","modified":1744594882021},{"_id":"themes/flexblock/layout/_widget/comment.ejs","hash":"65eb6218afe3799205397a08a153738d7533a5e5","modified":1744594882020},{"_id":"themes/flexblock/layout/_svg/icon-article.svg","hash":"f89ab250586cf0bd8108b77e48a5288f1d0dd512","modified":1744594882019},{"_id":"themes/flexblock/layout/_widget/widget-tags.ejs","hash":"8c360bf72e85a4cf48c6064b44a64828d059285a","modified":1744594882021},{"_id":"themes/flexblock/layout/_svg/icon-notice.svg","hash":"0d2f705ca65673eda3d38420aa512d83fcbc1e72","modified":1744594882019},{"_id":"themes/flexblock/layout/_widget/category.ejs","hash":"488d6e93a6240d00d0c60c9f104f4304400415ba","modified":1744594882020},{"_id":"themes/flexblock/layout/_svg/icon-tags.svg","hash":"0d974ce6d089d08ef009ad56d1b5d66bf9c2c1e6","modified":1744594882019},{"_id":"themes/flexblock/layout/_svg/icon-toc.svg","hash":"05d2eecfb27deade461f25b2a396c230e18cd6b4","modified":1744594882019},{"_id":"themes/flexblock/layout/_svg/icon-categories.svg","hash":"cfe4012051132281255e211c28971e05726cdc43","modified":1744594882019},{"_id":"themes/flexblock/layout/_svg/social-github.svg","hash":"20c1b5fd5e06d10fb1e2cd83da0a18629dbe9c9d","modified":1744594882019},{"_id":"themes/flexblock/layout/_widget/widget-toc.ejs","hash":"0607e05641735d1fea7c74bc3c5b5f41f3bfb16f","modified":1744594882021},{"_id":"themes/flexblock/layout/_svg/social-ins.svg","hash":"fdcaac4ecfa35a05765a9aead8ed52c46634f4ed","modified":1744594882019},{"_id":"themes/flexblock/layout/_svg/social-weibo.svg","hash":"ec9dd4c6d4cd7e1c860054c84cef570c7bbd0f35","modified":1744594882020},{"_id":"themes/flexblock/source/docs/index.html","hash":"cfb290c9fc6aa22fb6ce125c07f98325dcc14515","modified":1744594882035},{"_id":"themes/flexblock/source/docs/favicon.ico","hash":"c0605efed936ee2600284e6480521d06fa64f872","modified":1744594882035},{"_id":"themes/flexblock/source/img/avatar.png","hash":"2133229dab28e609e0ab6882210b80676878460d","modified":1744594882036},{"_id":"themes/flexblock/layout/_svg/social-zhihu.svg","hash":"c7dfaa6791aea630f418821890ae97ac4153ef50","modified":1744594882020},{"_id":"themes/flexblock/layout/_svg/social-twitter.svg","hash":"b9bbd30600b9832ac7e37fc116d78b389c047e1a","modified":1744594882020},{"_id":"themes/flexblock/source/js/clipboard.min.js","hash":"f48e9bfeca83e5057cc751e8c44fc07e9d976c06","modified":1744594882037},{"_id":"themes/flexblock/source/press/api-examples.html","hash":"a6e2788c62640bbff42e95d5d4cde92b6e6552d0","modified":1745976518020},{"_id":"themes/flexblock/source/press/404.html","hash":"e51d5b37f0d1d2334a3fc47f2a7ad9b12fb41815","modified":1745976518019},{"_id":"themes/flexblock/source/press/hashmap.json","hash":"5c89abebe09fd9c70a6473238689259fda4b9aab","modified":1745976518020},{"_id":"themes/flexblock/source/press/markdown-examples.html","hash":"ef6c603849638f80af2edece064cb3b79299f582","modified":1745976518020},{"_id":"themes/flexblock/source/press/index.html","hash":"e1f8b2b1391a74ee02a8b0b95d359087420287d1","modified":1745976518019},{"_id":"themes/flexblock/source/js/script.js","hash":"8f0900b1b6bbd1fdc463fbc77f3deb5e598c9871","modified":1744594882039},{"_id":"themes/flexblock/source/js/util.js","hash":"df7d554776608cd1adc69d1124fa205ebe183908","modified":1744594882039},{"_id":"themes/flexblock/source/press/pag.html","hash":"1c3ba5794f480b41b6517e0f4dccc0267a6b40d1","modified":1745976518019},{"_id":"themes/flexblock/source/press/vp-icons.css","hash":"28cf4c589c03458423f978ee46f9d05bf5f0e5ff","modified":1745976518020},{"_id":"themes/flexblock/source/press/spine.html","hash":"5820631993a27ff821f63f7931b40659194f8a03","modified":1745976518019},{"_id":"themes/flexblock/source/css/_partial/content.styl","hash":"3d489acf1c6c4903c0a2e2bf47daee58a0a55445","modified":1744594882031},{"_id":"themes/flexblock/source/css/_partial/card.styl","hash":"440ce91610c0667372995b8b9c4523f8a01b56d1","modified":1744594882031},{"_id":"themes/flexblock/source/css/_partial/header.styl","hash":"b03c6ded160f3216b6a764ae2cc7232a8fe64ab5","modified":1744594882032},{"_id":"themes/flexblock/source/css/_partial/footer.styl","hash":"00796f433ed85bd9186be3b2d16deb90b682d1d1","modified":1744594882031},{"_id":"themes/flexblock/source/css/_partial/page.styl","hash":"097cee196eb622116a36412ff307ed69bfb1b234","modified":1744594882032},{"_id":"themes/flexblock/source/css/_util/mixins.styl","hash":"70cf83071cfa7823045ea6f355f47b0aa26d23f8","modified":1744594882032},{"_id":"themes/flexblock/source/css/_util/variables.styl","hash":"b184fe67edca77ae4cd2e1c23e624b6ef86354e4","modified":1744594882032},{"_id":"themes/flexblock/source/css/_partial/pagination.styl","hash":"bdd9fede0c8f23af3e9b0cbc4f356e3148721416","modified":1744594882032},{"_id":"themes/flexblock/source/css/_partial/nav.styl","hash":"8a90c260ee4ab99001fc414accd661e7fdb235d5","modified":1744594882032},{"_id":"themes/flexblock/source/css/_util/theme.styl","hash":"1d7c69498b68e85f2a048acfa6924df5070ddc48","modified":1744594882032},{"_id":"themes/flexblock/source/docs/assets/AboutView-dGjetRiY.js","hash":"d70b8930552b5cac4063663b9c4062db2a60c32d","modified":1744594882033},{"_id":"themes/flexblock/source/docs/assets/AboutView-ug8e6cRs.css","hash":"1d28377a6f2c075bd4d63341337601a2327ba280","modified":1744594882033},{"_id":"themes/flexblock/source/js/highlight/languages.go.min.js","hash":"dd49ca6a1755b461fe31609da7ae3628c6100623","modified":1744594882038},{"_id":"themes/flexblock/source/js/highlight/prism.js","hash":"eae7cfb555d36ce1714a0d95014f9b6fdd28d9af","modified":1744594882039},{"_id":"themes/flexblock/source/js/highlight/default.min.css","hash":"e36ea72cff5dcbe944159f8f0cdb0332ca99c916","modified":1744594882037},{"_id":"themes/flexblock/source/js/highlight/prism.css","hash":"cc2bc03f511c8c949a99dea6aeda2e4731ca673a","modified":1744594882039},{"_id":"themes/flexblock/source/press/assets/api-examples.md.Bl7LuNsL.js","hash":"c2370d7ec80622ed05c74b28a419f5c2e7446451","modified":1745976518020},{"_id":"themes/flexblock/source/docs/assets/index-zqfkXEwc.css","hash":"10e344e482fd8b6ffe172affcee183cc2d859b1b","modified":1744594882035},{"_id":"themes/flexblock/source/press/assets/app.Dp55DMz0.js","hash":"ff9e8a545185e55321f59d3242c854f0f5024646","modified":1745976518024},{"_id":"themes/flexblock/source/press/assets/image-3.DjnV5J-i.png","hash":"5510eda3a51a3a6951d2fc2dbebc554edf05d21b","modified":1745976518021},{"_id":"themes/flexblock/source/press/assets/image-1.BeknGolo.png","hash":"21ae2aab5270bf5d89e06af732faffe28b90a52f","modified":1745976518021},{"_id":"themes/flexblock/source/press/assets/api-examples.md.Bl7LuNsL.lean.js","hash":"18d5c60696202bbb2dd268bd87e3c732a9c4e5d2","modified":1745976518023},{"_id":"themes/flexblock/source/press/assets/image-7.CBxgmzCD.png","hash":"a3056867da0d55253094eb1e19dce4fba1366db2","modified":1745976518020},{"_id":"themes/flexblock/source/press/assets/image-2.eCOqUL2D.png","hash":"96a4351581da2a3597cb4fcec347d7a08eacfa3c","modified":1745976518021},{"_id":"themes/flexblock/source/press/assets/image-1.Ca1Kpliw.png","hash":"ecb90802fbacb3ca525209d2e8b681ee81fc2438","modified":1745976518023},{"_id":"themes/flexblock/source/press/assets/image-4.DcKTtia5.png","hash":"31e4b24b14fb4d97bf960a93775a7b34079d3206","modified":1745976518023},{"_id":"themes/flexblock/source/press/assets/image-6.5xPkExNN.png","hash":"ba8eda79c5071c8dd1c71314b252b40316c584e1","modified":1745976518021},{"_id":"themes/flexblock/source/press/assets/index.md.BCNv9eZ5.js","hash":"4f772a72aca3282ef92e242363fdf58e3c135126","modified":1745976518023},{"_id":"themes/flexblock/source/press/assets/inter-italic-cyrillic.By2_1cv3.woff2","hash":"d8942f6550ff92dee5a817279e27a82ef4ab37d7","modified":1745976518022},{"_id":"themes/flexblock/source/press/assets/image-5.DpbAAFh7.png","hash":"299f4443c5a40169e70c6c52cd76f24dd13a48b4","modified":1745976518022},{"_id":"themes/flexblock/source/press/assets/index.md.BCNv9eZ5.lean.js","hash":"4f772a72aca3282ef92e242363fdf58e3c135126","modified":1745976518020},{"_id":"themes/flexblock/source/press/assets/inter-italic-cyrillic-ext.r48I6akx.woff2","hash":"8d006818b955bb981f10232439b54ce6aa3c9cd2","modified":1745976518024},{"_id":"themes/flexblock/source/press/assets/inter-italic-greek-ext.1u6EdAuj.woff2","hash":"c8b69ba7a3ddc1dfc5fadef87aaa82963eb175c8","modified":1745976518024},{"_id":"themes/flexblock/source/press/assets/inter-roman-cyrillic.C5lxZ8CY.woff2","hash":"9b98c6dd8fb2ad1cbe3a01bc321723c0fcba0e0d","modified":1745976518021},{"_id":"themes/flexblock/source/press/assets/inter-italic-vietnamese.BSbpV94h.woff2","hash":"49851f6609b0c9f342cf2897d09daf31947aeb50","modified":1745976518023},{"_id":"themes/flexblock/source/press/assets/inter-italic-greek.DJ8dCoTZ.woff2","hash":"0e3f719ac151525b4f97652e4381487b145cc72d","modified":1745976518024},{"_id":"themes/flexblock/source/press/assets/inter-roman-greek-ext.CqjqNYQ-.woff2","hash":"90894d29656524afffd9780edcc6f6e9cd6639eb","modified":1745976518022},{"_id":"themes/flexblock/source/press/assets/markdown-examples.md.CNhl67zZ.js","hash":"1e0989a55b6680203f572095cef0946849d97506","modified":1745976518020},{"_id":"themes/flexblock/source/press/assets/inter-roman-cyrillic-ext.BBPuwvHQ.woff2","hash":"ebf0eee1d42e6968848d1900a9b5c51e9ee045e6","modified":1745976518023},{"_id":"themes/flexblock/source/press/assets/inter-roman-greek.BBVDIX6e.woff2","hash":"30676e2adcbe22ab0cb4ab5ac7a204515f15c071","modified":1745976518020},{"_id":"themes/flexblock/source/press/assets/inter-roman-vietnamese.BjW4sHH5.woff2","hash":"b2032bd3bc0549df0e19409d192d36289951afed","modified":1745976518023},{"_id":"themes/flexblock/source/press/assets/pag.md.D7B4gEbz.js","hash":"147d3b3a62fae7b09d0f6ed54d40f99f7c3fa002","modified":1745976518024},{"_id":"themes/flexblock/source/press/assets/markdown-examples.md.CNhl67zZ.lean.js","hash":"fe5f65fabd4b43e385cbc9c47445d976f94a4667","modified":1745976518021},{"_id":"themes/flexblock/source/press/assets/spine.md.yTL_iqEX.lean.js","hash":"c0f14d85cae85e2c291d5ee5670a426b2487d080","modified":1745976518023},{"_id":"themes/flexblock/source/press/assets/pag.md.D7B4gEbz.lean.js","hash":"e1619d354a686b43ac0c55006eedbad4933d6a60","modified":1745976518022},{"_id":"themes/flexblock/source/press/assets/spine.md.yTL_iqEX.js","hash":"58a884718ace9bfd18566a0d643a33a1cabb9f9b","modified":1745976518021},{"_id":"themes/flexblock/source/press/assets/chunks/theme.Dq6GLO1A.js","hash":"a9b76fd15eb3d8926a7b7b3bedac458e0ebf5dc9","modified":1745976518022},{"_id":"themes/flexblock/source/js/highlight/highlight.min.js","hash":"2621f3ec402fed78e9cdd82fa7600705f477c214","modified":1744594882038},{"_id":"themes/flexblock/source/press/assets/inter-italic-latin-ext.CN1xVJS-.woff2","hash":"13e862bc6fce33ab55d49c53be297df56c098954","modified":1745976518021},{"_id":"themes/flexblock/source/press/assets/inter-italic-latin.C2AdPX0b.woff2","hash":"0a1f4e518df840667f86caeceab58b4dd1f26c1b","modified":1745976518024},{"_id":"themes/flexblock/source/icons-512.png","hash":"7acb81a8530afbed37eca209718dd13f67d3420a","modified":1744594882036},{"_id":"themes/flexblock/source/press/assets/inter-roman-latin-ext.4ZJIpNVo.woff2","hash":"9bb5a679d25b9eea240222b78cb23cb9a80c0b7e","modified":1745976518021},{"_id":"themes/flexblock/source/press/assets/inter-roman-latin.Di8DUHzh.woff2","hash":"1b9b79d28b18c7dcc7a08d5a78053c43c7eacef2","modified":1745976518022},{"_id":"themes/flexblock/source/press/assets/style.DUO3vzbg.css","hash":"cd2697b28d74c5fe15d18a517dbfb714ee6156f3","modified":1745976518022},{"_id":"themes/flexblock/source/press/assets/chunks/framework.CPIiAToz.js","hash":"b9e5e4fd7c02cb64a38d0e2007ff51118db57ef1","modified":1745976518022},{"_id":"themes/flexblock/source/img/banner.jpg","hash":"0df8e7df39b863a0425819cf72ea71d2e1cfa28b","modified":1744594882037},{"_id":"themes/flexblock/screenshots/flex-block--home.jpeg","hash":"7f6c738298108020ab2e4918592007a2d4bcb9d8","modified":1744594882024},{"_id":"themes/flexblock/screenshots/flex-block--post.jpeg","hash":"bc607db875e42fe2c82ed5130c07d67cca5adc41","modified":1744594882026},{"_id":"themes/flexblock/source/docs/assets/index-UmqpQW8u.js","hash":"81c8b24aff2cb9ebeb265ec46e0e59060a3d286f","modified":1744594882035},{"_id":"source/img/common/t10.png","hash":"aeba1ffd7cb02cb54d14167346902abfe86e9b8b","modified":1744594881714},{"_id":"themes/flexblock/screenshots/flex-block.png","hash":"93a5456d4f3a51f5e9fd4a957b85584273083fe6","modified":1744594882030},{"_id":"source/img/common/t19.jpeg","hash":"d6f7990b98356064343e12e91ab519cec61101fe","modified":1744594881772},{"_id":"source/img/common/t16.jpeg","hash":"96f989a546276b09ea4812760404a1432e5919a2","modified":1744594881753},{"_id":"source/img/common/t25.jpeg","hash":"346ce0697fa44b87a8c8bb0e3ed0735e1d5548e9","modified":1744594881848},{"_id":"source/img/common/t31.jpeg","hash":"2ed0ca53436e17f989a8ad35ca9a5af038affb9a","modified":1744594881953},{"_id":"source/img/common/t24.jpeg","hash":"989ede84734f45c98d01ec9f0c04b94a45900234","modified":1744594881835},{"_id":"source/img/common/t17.jpeg","hash":"039a3835db05eddc68ef417cb48da82b9340fbbe","modified":1744594881761},{"_id":"source/img/common/t14.jpeg","hash":"6257fe52e8f52d6ef76c918c1f58483a08bea9d7","modified":1744594881729},{"_id":"source/img/common/t21.jpeg","hash":"d83dd78d9e2b87b078910cdd8880debee6dc608d","modified":1744594881802},{"_id":"source/img/common/t23.jpeg","hash":"daa2be3b8e7f96e88ad8c1a67a6bc2f50660988d","modified":1744594881827},{"_id":"source/img/common/t22.jpeg","hash":"dce2cd5705b5cbbce2dd9eb316518c977ffaf19f","modified":1744594881814},{"_id":"source/img/common/t20.jpeg","hash":"91f41119132ff9a59e1e4128d4ca8f313546067b","modified":1744594881786},{"_id":"source/img/common/t30.jpeg","hash":"1ce161ed6387a49416c468913a101b25891eee18","modified":1744594881937},{"_id":"source/img/common/t33.jpeg","hash":"e8226b60850228e54ffc67dfbdfb983a2e23ed0d","modified":1744594881989},{"_id":"source/img/common/t34.jpeg","hash":"5255cf80bfabbf6d5b6969f98e3c715722af31a1","modified":1744594882005},{"_id":"source/img/common/t29.jpeg","hash":"1fe3f16188e636b6eee5ade9881107ca889edcc7","modified":1744594881925},{"_id":"source/img/common/t32.jpeg","hash":"04e306a354b7829aa406aadcba2dff1808a52fa0","modified":1744594881976},{"_id":"source/img/common/t15.jpeg","hash":"5ebf913be9f04149d365f2d565f1c9af0a2d4f4a","modified":1744594881741},{"_id":"source/img/common/t27.jpeg","hash":"eb893015cf7e3e30f20fffa5cfbe1497b196cd99","modified":1744594881894},{"_id":"source/img/common/t28.jpeg","hash":"72f1b7d9e050c13d33cea2efdbf43cc920ddc707","modified":1744594881910},{"_id":"source/img/common/t26.jpeg","hash":"257a3ac5529c3b9f1c44d69c4071d6b6da0fffcb","modified":1744594881871},{"_id":"public/2025/04/14/hello-world/index.html","hash":"c048a4062fa16d41259426537a8e5460bbff17f8","modified":1745976712995},{"_id":"public/2025/04/03/spine/index.html","hash":"6da4e9d6e996875498ee814454b5ddc3a9f69fcf","modified":1745976712995},{"_id":"public/2024/12/31/pag/index.html","hash":"c5db5e98c4542950c8d479bced54ba611e8dc792","modified":1745976712995},{"_id":"public/2024/03/22/js-common/index.html","hash":"aef759621bd294e8d068a81551498dc9d377fb12","modified":1745976712995},{"_id":"public/2024/03/14/pitfall-diary/index.html","hash":"ba2c9b72d736d608c01a5e880594d62ddb832e32","modified":1745976712995},{"_id":"public/2024/02/23/vite/index.html","hash":"f5448a1201bfc29e84c3ae16e207b63c3a3c2fd0","modified":1745976712995},{"_id":"public/2018/09/29/test-my-site/index.html","hash":"41390d46635be2c870aff5d584dbf545fc5f5c57","modified":1745976712995},{"_id":"public/archives/index.html","hash":"3ac8aca02cd5dfd7c64e7b8ffd515c4730ba5fb0","modified":1745976712995},{"_id":"public/archives/2018/index.html","hash":"415dac73186ff4aff96308ec2fdd56120f285db9","modified":1745976712995},{"_id":"public/archives/2018/09/index.html","hash":"415dac73186ff4aff96308ec2fdd56120f285db9","modified":1745976712995},{"_id":"public/archives/2024/index.html","hash":"db1b679bb9b90e84e2b66d49862a66638c67b1b3","modified":1745976712995},{"_id":"public/archives/2024/02/index.html","hash":"ab6d2398774489aa21cb8716ab02f6bbc8169f9b","modified":1745976712995},{"_id":"public/archives/2024/03/index.html","hash":"ca6aabb4df07457032eab61abdb4c91c24b05be4","modified":1745976712995},{"_id":"public/archives/2024/12/index.html","hash":"e9a1108f7e370bcb423115369f1b7e46a41c4e0a","modified":1745976712995},{"_id":"public/archives/2025/index.html","hash":"e3becb2ad80a18f0457d0ceeffc0d6e3821b1c82","modified":1745976712995},{"_id":"public/archives/2025/04/index.html","hash":"e3becb2ad80a18f0457d0ceeffc0d6e3821b1c82","modified":1745976712995},{"_id":"public/categories/Vs-Code/index.html","hash":"81eda0597c240ff2fbf7569f1c18f948116d0ba9","modified":1745976712995},{"_id":"public/categories/脚手架/index.html","hash":"0d5b6d54d3ff396e80e3faa9f312b408d5dfbf43","modified":1745976712995},{"_id":"public/categories/js/index.html","hash":"52eb90fb46f4327387e83f4cfa917cea809dfa69","modified":1745976712995},{"_id":"public/index.html","hash":"8bf31c42e5065cad6edd9e4b05f063d1821656e9","modified":1745976712995},{"_id":"public/icons-192.png","hash":"d0f2ad8384dbc87e074ad78797137b47276c4ac8","modified":1745976712995},{"_id":"public/favicon.ico","hash":"d0f2ad8384dbc87e074ad78797137b47276c4ac8","modified":1745976712995},{"_id":"public/docs/favicon.ico","hash":"c0605efed936ee2600284e6480521d06fa64f872","modified":1745976712995},{"_id":"public/press/assets/image-3.DjnV5J-i.png","hash":"5510eda3a51a3a6951d2fc2dbebc554edf05d21b","modified":1745976712995},{"_id":"public/press/assets/image-2.eCOqUL2D.png","hash":"96a4351581da2a3597cb4fcec347d7a08eacfa3c","modified":1745976712995},{"_id":"public/press/assets/image-4.DcKTtia5.png","hash":"31e4b24b14fb4d97bf960a93775a7b34079d3206","modified":1745976712995},{"_id":"public/press/assets/image-5.DpbAAFh7.png","hash":"299f4443c5a40169e70c6c52cd76f24dd13a48b4","modified":1745976712995},{"_id":"public/press/assets/image-1.Ca1Kpliw.png","hash":"ecb90802fbacb3ca525209d2e8b681ee81fc2438","modified":1745976712995},{"_id":"public/press/assets/image-6.5xPkExNN.png","hash":"ba8eda79c5071c8dd1c71314b252b40316c584e1","modified":1745976712995},{"_id":"public/img/avatar.png","hash":"2133229dab28e609e0ab6882210b80676878460d","modified":1745976712995},{"_id":"public/press/assets/image-7.CBxgmzCD.png","hash":"a3056867da0d55253094eb1e19dce4fba1366db2","modified":1745976712995},{"_id":"public/press/assets/image-1.BeknGolo.png","hash":"21ae2aab5270bf5d89e06af732faffe28b90a52f","modified":1745976712995},{"_id":"public/press/assets/inter-italic-greek.DJ8dCoTZ.woff2","hash":"0e3f719ac151525b4f97652e4381487b145cc72d","modified":1745976712995},{"_id":"public/press/assets/inter-italic-cyrillic-ext.r48I6akx.woff2","hash":"8d006818b955bb981f10232439b54ce6aa3c9cd2","modified":1745976712995},{"_id":"public/press/assets/inter-italic-cyrillic.By2_1cv3.woff2","hash":"d8942f6550ff92dee5a817279e27a82ef4ab37d7","modified":1745976712995},{"_id":"public/press/assets/inter-italic-greek-ext.1u6EdAuj.woff2","hash":"c8b69ba7a3ddc1dfc5fadef87aaa82963eb175c8","modified":1745976712995},{"_id":"public/press/assets/inter-italic-vietnamese.BSbpV94h.woff2","hash":"49851f6609b0c9f342cf2897d09daf31947aeb50","modified":1745976712995},{"_id":"public/press/assets/inter-roman-cyrillic.C5lxZ8CY.woff2","hash":"9b98c6dd8fb2ad1cbe3a01bc321723c0fcba0e0d","modified":1745976712995},{"_id":"public/press/assets/inter-roman-greek-ext.CqjqNYQ-.woff2","hash":"90894d29656524afffd9780edcc6f6e9cd6639eb","modified":1745976712995},{"_id":"public/press/assets/inter-roman-cyrillic-ext.BBPuwvHQ.woff2","hash":"ebf0eee1d42e6968848d1900a9b5c51e9ee045e6","modified":1745976712995},{"_id":"public/press/assets/inter-roman-greek.BBVDIX6e.woff2","hash":"30676e2adcbe22ab0cb4ab5ac7a204515f15c071","modified":1745976712995},{"_id":"public/press/assets/inter-roman-vietnamese.BjW4sHH5.woff2","hash":"b2032bd3bc0549df0e19409d192d36289951afed","modified":1745976712995},{"_id":"public/img/common/t2.jpg","hash":"bbda9b7aa53ffa37335e46146725763c306cd80d","modified":1745976712995},{"_id":"public/img/common/t3.jpg","hash":"3ba67788202af783c8bf103eb53d267755d6a00b","modified":1745976712995},{"_id":"public/img/pag/image-2.png","hash":"96a4351581da2a3597cb4fcec347d7a08eacfa3c","modified":1745976712995},{"_id":"public/img/spine/image-1.png","hash":"21ae2aab5270bf5d89e06af732faffe28b90a52f","modified":1745976712995},{"_id":"public/img/pag/image-5.png","hash":"299f4443c5a40169e70c6c52cd76f24dd13a48b4","modified":1745976712995},{"_id":"public/img/pag/image-3.png","hash":"5510eda3a51a3a6951d2fc2dbebc554edf05d21b","modified":1745976712995},{"_id":"public/img/pag/image-1.png","hash":"ecb90802fbacb3ca525209d2e8b681ee81fc2438","modified":1745976712995},{"_id":"public/img/pag/image-4.png","hash":"31e4b24b14fb4d97bf960a93775a7b34079d3206","modified":1745976712995},{"_id":"public/img/pag/image-6.png","hash":"ba8eda79c5071c8dd1c71314b252b40316c584e1","modified":1745976712995},{"_id":"public/img/pag/image-7.png","hash":"a3056867da0d55253094eb1e19dce4fba1366db2","modified":1745976712995},{"_id":"public/img/tidy/image-4.png","hash":"ed24b881bdda61abba62da9f03fb2dd72f8ff961","modified":1745976712995},{"_id":"public/img/tidy/image-3.png","hash":"d87449f68e42fc37d4e9cb6365a72f91ad977db8","modified":1745976712995},{"_id":"public/icons-512.png","hash":"7acb81a8530afbed37eca209718dd13f67d3420a","modified":1745976712995},{"_id":"public/press/assets/inter-italic-latin.C2AdPX0b.woff2","hash":"0a1f4e518df840667f86caeceab58b4dd1f26c1b","modified":1745976712995},{"_id":"public/code.html","hash":"1d77c0f2cf20bd50c24f3ff908018f7df372d773","modified":1745976712995},{"_id":"public/about.html","hash":"ae30f1f056084b132cce4bfa14cfa12b6f43e9c9","modified":1745976712995},{"_id":"public/manifest.json","hash":"add5893f45ecf8678903a52094d86389168f9d8f","modified":1745976712995},{"_id":"public/promise.html","hash":"1a734a5f9dbaf2ba3795fb9008eebdf42e3cedef","modified":1745976712995},{"_id":"public/css/style.css","hash":"2d1bc738f6d9e0c4a7423fdd7118551396bd3faf","modified":1745976712995},{"_id":"public/docs/index.html","hash":"cfb290c9fc6aa22fb6ce125c07f98325dcc14515","modified":1745976712995},{"_id":"public/js/clipboard.min.js","hash":"f48e9bfeca83e5057cc751e8c44fc07e9d976c06","modified":1745976712995},{"_id":"public/press/404.html","hash":"e51d5b37f0d1d2334a3fc47f2a7ad9b12fb41815","modified":1745976712995},{"_id":"public/js/script.js","hash":"8f0900b1b6bbd1fdc463fbc77f3deb5e598c9871","modified":1745976712995},{"_id":"public/press/api-examples.html","hash":"a6e2788c62640bbff42e95d5d4cde92b6e6552d0","modified":1745976712995},{"_id":"public/press/hashmap.json","hash":"73d7ae3b4d2bfdf72045941cc952c704bfa1600f","modified":1745976712995},{"_id":"public/press/markdown-examples.html","hash":"ef6c603849638f80af2edece064cb3b79299f582","modified":1745976712995},{"_id":"public/press/index.html","hash":"e1f8b2b1391a74ee02a8b0b95d359087420287d1","modified":1745976712995},{"_id":"public/press/pag.html","hash":"1c3ba5794f480b41b6517e0f4dccc0267a6b40d1","modified":1745976712995},{"_id":"public/js/util.js","hash":"df7d554776608cd1adc69d1124fa205ebe183908","modified":1745976712995},{"_id":"public/press/vp-icons.css","hash":"28cf4c589c03458423f978ee46f9d05bf5f0e5ff","modified":1745976712995},{"_id":"public/press/spine.html","hash":"5820631993a27ff821f63f7931b40659194f8a03","modified":1745976712995},{"_id":"public/docs/assets/AboutView-dGjetRiY.js","hash":"d70b8930552b5cac4063663b9c4062db2a60c32d","modified":1745976712995},{"_id":"public/docs/assets/AboutView-ug8e6cRs.css","hash":"1d28377a6f2c075bd4d63341337601a2327ba280","modified":1745976712995},{"_id":"public/js/highlight/default.min.css","hash":"e36ea72cff5dcbe944159f8f0cdb0332ca99c916","modified":1745976712995},{"_id":"public/js/highlight/languages.go.min.js","hash":"dd49ca6a1755b461fe31609da7ae3628c6100623","modified":1745976712995},{"_id":"public/js/highlight/prism.css","hash":"cc2bc03f511c8c949a99dea6aeda2e4731ca673a","modified":1745976712995},{"_id":"public/press/assets/api-examples.md.Bl7LuNsL.js","hash":"c2370d7ec80622ed05c74b28a419f5c2e7446451","modified":1745976712995},{"_id":"public/press/assets/app.Dp55DMz0.js","hash":"ff9e8a545185e55321f59d3242c854f0f5024646","modified":1745976712995},{"_id":"public/press/assets/api-examples.md.Bl7LuNsL.lean.js","hash":"18d5c60696202bbb2dd268bd87e3c732a9c4e5d2","modified":1745976712995},{"_id":"public/press/assets/index.md.BCNv9eZ5.js","hash":"4f772a72aca3282ef92e242363fdf58e3c135126","modified":1745976712995},{"_id":"public/press/assets/index.md.BCNv9eZ5.lean.js","hash":"4f772a72aca3282ef92e242363fdf58e3c135126","modified":1745976712995},{"_id":"public/js/highlight/prism.js","hash":"eae7cfb555d36ce1714a0d95014f9b6fdd28d9af","modified":1745976712995},{"_id":"public/press/assets/markdown-examples.md.CNhl67zZ.js","hash":"1e0989a55b6680203f572095cef0946849d97506","modified":1745976712995},{"_id":"public/press/assets/markdown-examples.md.CNhl67zZ.lean.js","hash":"fe5f65fabd4b43e385cbc9c47445d976f94a4667","modified":1745976712995},{"_id":"public/docs/assets/index-zqfkXEwc.css","hash":"10e344e482fd8b6ffe172affcee183cc2d859b1b","modified":1745976712995},{"_id":"public/press/assets/pag.md.D7B4gEbz.lean.js","hash":"e1619d354a686b43ac0c55006eedbad4933d6a60","modified":1745976712995},{"_id":"public/press/assets/spine.md.yTL_iqEX.lean.js","hash":"c0f14d85cae85e2c291d5ee5670a426b2487d080","modified":1745976712995},{"_id":"public/docs/assets/index-UmqpQW8u.js","hash":"81c8b24aff2cb9ebeb265ec46e0e59060a3d286f","modified":1745976712995},{"_id":"public/press/assets/pag.md.D7B4gEbz.js","hash":"147d3b3a62fae7b09d0f6ed54d40f99f7c3fa002","modified":1745976712995},{"_id":"public/press/assets/style.DUO3vzbg.css","hash":"cd2697b28d74c5fe15d18a517dbfb714ee6156f3","modified":1745976712995},{"_id":"public/press/assets/chunks/theme.Dq6GLO1A.js","hash":"a9b76fd15eb3d8926a7b7b3bedac458e0ebf5dc9","modified":1745976712995},{"_id":"public/press/assets/chunks/framework.CPIiAToz.js","hash":"b9e5e4fd7c02cb64a38d0e2007ff51118db57ef1","modified":1745976712995},{"_id":"public/press/assets/spine.md.yTL_iqEX.js","hash":"58a884718ace9bfd18566a0d643a33a1cabb9f9b","modified":1745976712995},{"_id":"public/js/highlight/highlight.min.js","hash":"2621f3ec402fed78e9cdd82fa7600705f477c214","modified":1745976712995},{"_id":"public/press/assets/inter-italic-latin-ext.CN1xVJS-.woff2","hash":"13e862bc6fce33ab55d49c53be297df56c098954","modified":1745976712995},{"_id":"public/press/assets/inter-roman-latin-ext.4ZJIpNVo.woff2","hash":"9bb5a679d25b9eea240222b78cb23cb9a80c0b7e","modified":1745976712995},{"_id":"public/img/common/t1.jpg","hash":"db11f62c99d1fd61f1feabcf06a0c472bdb50dbe","modified":1745976712995},{"_id":"public/img/common/t13.jpeg","hash":"e5d9b02c889d9b1436114dbd24b4326701a8a862","modified":1745976712995},{"_id":"public/img/common/t11.jpg","hash":"6d078363307f45d3c935545e965bdaadbf186687","modified":1745976712995},{"_id":"public/press/assets/inter-roman-latin.Di8DUHzh.woff2","hash":"1b9b79d28b18c7dcc7a08d5a78053c43c7eacef2","modified":1745976712995},{"_id":"public/img/common/t4.jpeg","hash":"fcf3277a76efe853dc55fe57c8be17638f9d80de","modified":1745976712995},{"_id":"public/img/common/t8.jpg","hash":"5c7f0a6e01e6276853d5a6ddc4f2a5a75c6aafe8","modified":1745976712995},{"_id":"public/img/common/t9.jpg","hash":"a2da8ff0abf07e3e8c321d864217ef456a72bbba","modified":1745976712995},{"_id":"public/img/common/t6.jpeg","hash":"e0eec15eefdcce61f11904d7f3cfb2c1f875f35c","modified":1745976712995},{"_id":"public/img/tidy/image-1.png","hash":"4b326253978c0538e88c977c31bf191d8f6b077e","modified":1745976712995},{"_id":"public/img/tidy/image-5.png","hash":"4a01ff7f88aa18e0d382bde72ee07dad7289bcad","modified":1745976712995},{"_id":"public/img/tidy/image-2.png","hash":"09044e295bcb51be3879220097d1d34139c58791","modified":1745976712995},{"_id":"public/img/banner.jpg","hash":"0df8e7df39b863a0425819cf72ea71d2e1cfa28b","modified":1745976712995},{"_id":"public/img/common/t5.jpg","hash":"7f8ff32d8a464be13c099570048de263b96812be","modified":1745976712995},{"_id":"public/img/common/t7.jpg","hash":"997245da64594e851f05960a50a115010425a92b","modified":1745976712995},{"_id":"public/img/common/t18.jpeg","hash":"b99d07ca22e4ca7641c12d6f3f5f2c247bd0ea56","modified":1745976712995},{"_id":"public/img/common/t10.png","hash":"aeba1ffd7cb02cb54d14167346902abfe86e9b8b","modified":1745976712995},{"_id":"public/img/common/t19.jpeg","hash":"d6f7990b98356064343e12e91ab519cec61101fe","modified":1745976712995},{"_id":"public/img/common/t16.jpeg","hash":"96f989a546276b09ea4812760404a1432e5919a2","modified":1745976712995},{"_id":"public/img/common/t25.jpeg","hash":"346ce0697fa44b87a8c8bb0e3ed0735e1d5548e9","modified":1745976712995},{"_id":"public/img/common/t31.jpeg","hash":"2ed0ca53436e17f989a8ad35ca9a5af038affb9a","modified":1745976712995},{"_id":"public/img/common/t24.jpeg","hash":"989ede84734f45c98d01ec9f0c04b94a45900234","modified":1745976712995},{"_id":"public/img/common/t17.jpeg","hash":"039a3835db05eddc68ef417cb48da82b9340fbbe","modified":1745976712995},{"_id":"public/img/common/t14.jpeg","hash":"6257fe52e8f52d6ef76c918c1f58483a08bea9d7","modified":1745976712995},{"_id":"public/img/common/t21.jpeg","hash":"d83dd78d9e2b87b078910cdd8880debee6dc608d","modified":1745976712995},{"_id":"public/img/common/t23.jpeg","hash":"daa2be3b8e7f96e88ad8c1a67a6bc2f50660988d","modified":1745976712995},{"_id":"public/img/common/t30.jpeg","hash":"1ce161ed6387a49416c468913a101b25891eee18","modified":1745976712995},{"_id":"public/img/common/t33.jpeg","hash":"e8226b60850228e54ffc67dfbdfb983a2e23ed0d","modified":1745976712995},{"_id":"public/img/common/t22.jpeg","hash":"dce2cd5705b5cbbce2dd9eb316518c977ffaf19f","modified":1745976712995},{"_id":"public/img/common/t20.jpeg","hash":"91f41119132ff9a59e1e4128d4ca8f313546067b","modified":1745976712995},{"_id":"public/img/common/t34.jpeg","hash":"5255cf80bfabbf6d5b6969f98e3c715722af31a1","modified":1745976712995},{"_id":"public/img/common/t32.jpeg","hash":"04e306a354b7829aa406aadcba2dff1808a52fa0","modified":1745976712995},{"_id":"public/img/common/t29.jpeg","hash":"1fe3f16188e636b6eee5ade9881107ca889edcc7","modified":1745976712995},{"_id":"public/img/common/t15.jpeg","hash":"5ebf913be9f04149d365f2d565f1c9af0a2d4f4a","modified":1745976712995},{"_id":"public/img/common/t27.jpeg","hash":"eb893015cf7e3e30f20fffa5cfbe1497b196cd99","modified":1745976712995},{"_id":"public/img/common/t28.jpeg","hash":"72f1b7d9e050c13d33cea2efdbf43cc920ddc707","modified":1745976712995},{"_id":"public/img/common/t26.jpeg","hash":"257a3ac5529c3b9f1c44d69c4071d6b6da0fffcb","modified":1745976712995}],"Category":[{"name":"Vs Code","_id":"cma39gdzq00048rdn8oni93lo"},{"name":"脚手架","_id":"cma39gdzs000b8rdn6gxjcgfw"},{"name":"js","_id":"cma39gdzs000c8rdn917ahx42"}],"Data":[],"Page":[],"Post":[{"title":"js常用","date":"2024-03-22T11:16:11.000Z","cover":"/img/common/t5.jpg","_content":"## 根据key相同合并对象\n```\n/**\n * 合并奖励\n * @param {Array[object]}\n * @param {key} 根据key相同合并\n * @returns {Array[object]} frequency为数量\n*/\nexport const mergeRewards = (rewards, key = 'position') => {\n  return rewards.reduce((obj, item) => {\n    let newItem = {\n      ...item,\n      frequency: 1\n    };\n    const find = obj.find(k => k[key] === item[key]);\n    if (find) {\n      find.frequency++;\n    } else {\n      obj.push(newItem)\n    }\n    return obj;\n  }, []);\n};\n```\n## object/Map/WeakMap\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n- Map和WeakMap 可以用dom作为key, weakmap是弱引用，比Map更适合保存dom节点\n- Map的件\n\nObjectMapWeakMap键值类型字符串任意类型对象(除了null)同名处理覆盖新开内存，{}会开辟新的内存作为键新开内存，{}会开辟新的内存作为键长度需要Object.values().length.size特殊处理有序性无序有序有序\n\n--------------------------------------------------------------------------------\njs镜像下getBoundingClientRect获取的值","source":"_posts/js-common.md","raw":"---\ntitle: js常用\ndate: 2024-03-22 19:16:11\ntags:\ncover: /img/common/t5.jpg\n---\n## 根据key相同合并对象\n```\n/**\n * 合并奖励\n * @param {Array[object]}\n * @param {key} 根据key相同合并\n * @returns {Array[object]} frequency为数量\n*/\nexport const mergeRewards = (rewards, key = 'position') => {\n  return rewards.reduce((obj, item) => {\n    let newItem = {\n      ...item,\n      frequency: 1\n    };\n    const find = obj.find(k => k[key] === item[key]);\n    if (find) {\n      find.frequency++;\n    } else {\n      obj.push(newItem)\n    }\n    return obj;\n  }, []);\n};\n```\n## object/Map/WeakMap\n|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n- Map和WeakMap 可以用dom作为key, weakmap是弱引用，比Map更适合保存dom节点\n- Map的件\n\nObjectMapWeakMap键值类型字符串任意类型对象(除了null)同名处理覆盖新开内存，{}会开辟新的内存作为键新开内存，{}会开辟新的内存作为键长度需要Object.values().length.size特殊处理有序性无序有序有序\n\n--------------------------------------------------------------------------------\njs镜像下getBoundingClientRect获取的值","slug":"js-common","published":1,"updated":"2025-04-14T01:41:21.712Z","comments":1,"layout":"post","photos":[],"_id":"cma39gdzm00008rdn3etjasxa","content":"<h2 id=\"根据key相同合并对象\"><a href=\"#根据key相同合并对象\" class=\"headerlink\" title=\"根据key相同合并对象\"></a>根据key相同合并对象</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 合并奖励</span><br><span class=\"line\"> * @param &#123;Array[object]&#125;</span><br><span class=\"line\"> * @param &#123;key&#125; 根据key相同合并</span><br><span class=\"line\"> * @returns &#123;Array[object]&#125; frequency为数量</span><br><span class=\"line\">*/</span><br><span class=\"line\">export const mergeRewards = (rewards, key = &#x27;position&#x27;) =&gt; &#123;</span><br><span class=\"line\">  return rewards.reduce((obj, item) =&gt; &#123;</span><br><span class=\"line\">    let newItem = &#123;</span><br><span class=\"line\">      ...item,</span><br><span class=\"line\">      frequency: 1</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    const find = obj.find(k =&gt; k[key] === item[key]);</span><br><span class=\"line\">    if (find) &#123;</span><br><span class=\"line\">      find.frequency++;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      obj.push(newItem)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return obj;</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"object-Map-WeakMap\"><a href=\"#object-Map-WeakMap\" class=\"headerlink\" title=\"object&#x2F;Map&#x2F;WeakMap\"></a>object&#x2F;Map&#x2F;WeakMap</h2><table>\n<thead>\n<tr>\n<th>表头</th>\n<th>表头</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n<tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n</tbody></table>\n<ul>\n<li>Map和WeakMap 可以用dom作为key, weakmap是弱引用，比Map更适合保存dom节点</li>\n<li>Map的件</li>\n</ul>\n<p>ObjectMapWeakMap键值类型字符串任意类型对象(除了null)同名处理覆盖新开内存，{}会开辟新的内存作为键新开内存，{}会开辟新的内存作为键长度需要Object.values().length.size特殊处理有序性无序有序有序</p>\n<hr>\n<p>js镜像下getBoundingClientRect获取的值</p>\n","excerpt":"","more":"<h2 id=\"根据key相同合并对象\"><a href=\"#根据key相同合并对象\" class=\"headerlink\" title=\"根据key相同合并对象\"></a>根据key相同合并对象</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 合并奖励</span><br><span class=\"line\"> * @param &#123;Array[object]&#125;</span><br><span class=\"line\"> * @param &#123;key&#125; 根据key相同合并</span><br><span class=\"line\"> * @returns &#123;Array[object]&#125; frequency为数量</span><br><span class=\"line\">*/</span><br><span class=\"line\">export const mergeRewards = (rewards, key = &#x27;position&#x27;) =&gt; &#123;</span><br><span class=\"line\">  return rewards.reduce((obj, item) =&gt; &#123;</span><br><span class=\"line\">    let newItem = &#123;</span><br><span class=\"line\">      ...item,</span><br><span class=\"line\">      frequency: 1</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    const find = obj.find(k =&gt; k[key] === item[key]);</span><br><span class=\"line\">    if (find) &#123;</span><br><span class=\"line\">      find.frequency++;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      obj.push(newItem)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return obj;</span><br><span class=\"line\">  &#125;, []);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"object-Map-WeakMap\"><a href=\"#object-Map-WeakMap\" class=\"headerlink\" title=\"object&#x2F;Map&#x2F;WeakMap\"></a>object&#x2F;Map&#x2F;WeakMap</h2><table>\n<thead>\n<tr>\n<th>表头</th>\n<th>表头</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n<tr>\n<td>单元格</td>\n<td>单元格</td>\n</tr>\n</tbody></table>\n<ul>\n<li>Map和WeakMap 可以用dom作为key, weakmap是弱引用，比Map更适合保存dom节点</li>\n<li>Map的件</li>\n</ul>\n<p>ObjectMapWeakMap键值类型字符串任意类型对象(除了null)同名处理覆盖新开内存，{}会开辟新的内存作为键新开内存，{}会开辟新的内存作为键长度需要Object.values().length.size特殊处理有序性无序有序有序</p>\n<hr>\n<p>js镜像下getBoundingClientRect获取的值</p>\n"},{"title":"Hello Hexo","toc":"前端","cover":"/img/common/t2.jpg","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello Hexo\ntoc: 前端\ncover: /img/common/t2.jpg\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2025-04-14T01:41:21.711Z","updated":"2025-04-14T01:41:21.711Z","comments":1,"layout":"post","photos":[],"_id":"cma39gdzo00018rdnaz7b4n45","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Vs Code之-pag预览拓展","date":"2024-12-31T02:16:42.000Z","cover":"/img/common/t7.jpg","_content":"# 开发流程\n## vscode拓展是什么？都能够做什么？\nvscode拓展是可以拓展VS Code编辑器功能、丰富编辑器用途的插件，能够提供编程效率，提升代码阅读体验，增强文本编辑功能\n比如copilot、prettier、image preview、Git History、Code Runner等等\n## 拓展如何下载/使用？\n1. 通过Vs Code插件商店下载安装\n> https://marketplace.visualstudio.com\n2. 本地导入.vsix文件安装\n![alt text](/img/pag/image-1.png)\n\n## .pag动画文件预览商店地址\n>https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.pag-preview&ssr=false#review-details\n\n## 下面进行详细的开发流程介绍，流程大致分为如下几个步骤\n- 配置开发环境\n- 调试\n- package.json配置说明\n- 快捷键配置\n- 打包/发布\n### 配置开发环境\n- 安装脚手架yeoman\n>https://code.visualstudio.com/api/get-started/your-first-extension\n\n```\nnpm install -g yo\nnpm install -g generator-code\n// 初始化项目\nyo code\n// yo模块全局安装后就安装了Yeoman，Yeoman是通用型项目脚手架工具，可以根据一套模板，生成一个对应的项目结构\n// generator-code模块是VS Code扩展生成器，与yo配合使用才能构建项目。\n提示如下\n```\n\n![alt text](/img/pag/image-2.png)\n官方工具初始化完成后，直接调试，理论上就能看到效果了\n### 调试\n先编译\n```\nnpm run compile\n```\n编译完新的窗口需要 reload\n调试的时候用这个甲壳虫，不要右键run code\n![alt text](/img/pag/image-3.png)\n会弹出一个新的窗口，新窗口直接执行 cmd+shift+p选择命令(自己注册的命令)就会出现效果\n或者使用注册的快捷键\n### package.json配置说明\n```\nname: 项目名 \ndisplayName: 插件名 \ndescription: 插件描述 \nversion: 版本号 \nkeywords\npublisher: 发布者id \nauthor: 作者 \nengines>vscode: vscode版本 \ncategories: 类别 \nactivationEvents: 扩展的激活事件 \nmain: 主入口 \ncontributes>commands: 配置命令 \ncontributes>keybindings: 配置快捷键\ncontributes>commands: 配置命令\ncontributes>menus: 菜单配置\ncontributes>customEditors: 创建和注册自定义编辑器\nkeywords: 配置关键词--这个也挺重要，搜索的时候要用\n```\n### 快捷键配置\n![alt text](/img/pag/image-4.png)\n接受的密钥\n![alt text](/img/pag/image-5.png)\n### 打包/发布\n- 安装vsce\nnpm i vsce -g\n- 打包成vsix文件\nvsce package\n- 发布/审核页面\nvsce login  xxx\nvsce publish\n发布分两种，一种是本地直接发布，另一种是商店网站发布\nhttps://marketplace.visualstudio.com/\n发布后，在商店页面会显示审核/结果状态\n![alt text](/img/pag/image-6.png)\n## pag文件预览\n实现方案因人而异，本拓展在制作中想到了拓展+webview方式来实现，使用webview一来相对熟悉，二来自由度比较高\n目录结构\n![alt text](/img/pag/image-7.png)\n- PAG-PREVIEW\n    - dist                打包后的目录\n    - src                 开发目录\n        - plugins         插件目录\n        - wbeview         webview相关(自定义)\n        - extension.ts    主入口\n    - gitignore\n1. 识别打开的是.pag结尾的文件格式\n2. 处理文件，输出给webview可访问的文件路径/buffer\n3. 使用webview对文件处理，使用libpag库来解析pag进行播放\n### 识别vscode打开了.pag结尾的文件\n在extension.ts文件中导入\n```\nimport PagPreview from './plugins/pag-preview';\nexport function activate(context: vscode.ExtensionContext) {\n  fileSizeStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 100);\n  context.subscriptions.push(PagPreview(context));\n  context.subscriptions.push(FileSize(context, fileSizeStatusBarItem));\n}\n```\n### 处理文件，输出给webview\n在plugins目录下创建pag-preview.ts处理具体逻辑\n```\nimport * as vscode from \"vscode\";\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nclass PagCustomDocument implements vscode.CustomDocument {\n  uri: vscode.Uri;\n\n  constructor(uri: vscode.Uri) {\n    this.uri = uri;\n  }\n\n  dispose(): void {\n    // 如果需要清理资源，可以在这里实现\n  }\n}\n\nclass PagCustomEditorProvider\n  implements vscode.CustomReadonlyEditorProvider<PagCustomDocument>\n{\n  public static readonly viewType = \"pagViewer.editor\";\n\n  constructor(private readonly context: vscode.ExtensionContext) {}\n\n  /**\n   * openCustomDocument 方法，用于打开自定义文档\n   */\n  public openCustomDocument(\n    uri: vscode.Uri,\n    _openContext: vscode.CustomDocumentOpenContext,\n    _token: vscode.CancellationToken\n  ): vscode.CustomDocument | Thenable<vscode.CustomDocument> {\n    // 创建并返回自定义文档实例\n    return new PagCustomDocument(uri);\n  }\n\n  /**\n   * resolveCustomEditor 方法，在文件被打开时触发\n   */\n  public async resolveCustomEditor(\n    document: PagCustomDocument,\n    webviewPanel: vscode.WebviewPanel,\n    _token: vscode.CancellationToken\n  ): Promise<void> {\n    console.log(`Opening file: ${document.uri.fsPath}`);\n    // vscode指令通信\n    vscode.commands.executeCommand(\"pagViewer.fileDetail\", document.uri);\n    // 设置 Webview 选项\n    webviewPanel.webview.options = {\n      enableScripts: true,\n      // localResourceRoots作用：防止 WebView 意外访问到插件不该访问的本地文件系统区域。只有处在 localResourceRoots 所列出的目录中的资源，才可以被 WebView 加载，这有助于保障用户系统的安全，避免恶意代码利用 WebView 越界访问敏感文件\n      localResourceRoots: [\n        vscode.Uri.file(path.join(this.context.extensionPath, \"dist\")),\n        vscode.Uri.file(path.dirname(document.uri.fsPath)),\n      ],\n    };\n\n    // 关键：将文件 URI 转为 Webview 可访问的路径\n    const fileUri = webviewPanel.webview.asWebviewUri(document.uri);\n    // console.log(\"uri--\", fileUri.toString()); https://file%2B.vscode-resource.vscode-cdn.net/Users/xxx/vscode/pag-preview/dist/webview/pag.min.js\n    const htmlPath = path.join(\n      this.context.extensionPath,\n      \"dist/webview/pag.html\"\n    );\n    // console.log(\"htmlPath\", htmlPath);\n    // 解析html内容\n    const htmlContent = fs.readFileSync(htmlPath, \"utf-8\");\n    const fastDiffUri = webviewPanel.webview.asWebviewUri(\n      vscode.Uri.file(\n        path.join(this.context.extensionPath, \"dist/webview/pag.min.js\")\n      )\n    );\n    const updatedHtmlContent = htmlContent.replace(\"./pag.min.js\", fastDiffUri);\n    // 设置 Webview 内容\n    webviewPanel.webview.html = updatedHtmlContent;\n    // 将文件内容发送到 Webview\n    webviewPanel.webview.postMessage({\n      type: \"loadFile\",\n      fileUri: fileUri.toString(),\n    });\n\n    // 监听来自 Webview 的消息\n    webviewPanel.webview.onDidReceiveMessage((message) => {\n      if (message.command === \"alert\") {\n        vscode.window.showInformationMessage(message.text);\n      }\n    });\n    // 处理自定义编辑器生命周期\n    webviewPanel.onDidDispose(() => {\n      console.log('pag文件关闭');\n      vscode.commands.executeCommand(\"pagViewer.fileDetail\");\n    });\n  }\n}\nexport default (context: vscode.ExtensionContext) => {\n  console.log(\"PAG Custom Editor Activated!\");\n\n  let disposable = vscode.window.registerCustomEditorProvider(\n    PagCustomEditorProvider.viewType,\n    new PagCustomEditorProvider(context),\n    {\n      webviewOptions: {\n        retainContextWhenHidden: false, // 切换标签时保留上下文\n      },\n    }\n  );\n  return disposable;\n};\n```\n### 使用webview对文件处理进行播放\n```\n<div class=\"pag-player\">\n  <button onclick=\"playToggle()\" class=\"pag-play\">pause</button>\n  <canvas class=\"pag-canvas\"></canvas>\n</div>\n\n// 监听来自扩展的消息\n  window.addEventListener('message', (event) => {\n    const message = event.data;\n    if (message.type === 'loadFile') {\n      initPag(message.fileUri).catch((err) => {\n        console.log('onError', err)\n      })\n    }\n  });\n  // 这一步根据需要进行解析,这里使用了libpag.min.js，自执行模式\n  const PAGView = libpag.PAGView;\n  const types = libpag.types;\n  const pagCanvasEl = document.querySelector('.pag-canvas');\n  let pagView = null;\n  const renderingMode = types.RenderingMode.WebGL;\n  const loadPag = async (url) => {\n    let arrayBuffer;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      arrayBuffer = await response.arrayBuffer();\n    } catch (error) {\n      console.error(\"Failed to fetch resource as ArrayBuffer:\", error);\n    }\n    return Promise.resolve(arrayBuffer)\n  }\n  const initPag = async (src) => {\n    const pagBuffer = await loadPag(src).catch(err => console.warn(err))\n    if (!pagBuffer) {\n      console.log('onError')\n      return\n    }\n    pagView = PAGView.init(pagBuffer, pagCanvasEl, {\n      renderingMode: renderingMode == 'webgl' ? types.RenderingMode.WebGL : types.RenderingMode.Canvas2D,\n      useScale: true\n    });\n    pagView.setRepeatCount(0);\n    await pagView.play();\n  }\n  function play (){ pagView.play()};\n  function pause (){ pagView.pause()};\n  const pagPlayer = document.querySelector('.pag-player');\n  const colors = {\n    1: '#000',\n    2: '#FFF',\n    3: '#00bcd3'\n  };\n  let playStatus = true;\n  const playRef = document.querySelector('.pag-play');\n  function playToggle () {\n    if (playStatus) {\n      pause();\n      playRef.innerText = 'play';\n    } else {\n      play();\n      playRef.innerText = 'pause';\n    }\n    playStatus = !playStatus;\n  }\n  function changeBg (type) {\n    pagPlayer.style.backgroundColor = colors[type];\n  }\n  ```\n\n# 总结\n VS Code 扩展具备多重实用功能：一方面，它显著提升编程效率，例如借助智能补全、代码片段等特性，让代码编写更为流畅迅速，更加专注在编辑器内部\n另一方面，VS Code 拓展各个功能模块界限清晰，相互协作又互不干扰。在 Vue 3 开发里，同样强调组件化，将页面拆分成一个个独立的组件，每个组件管理自己的状态、逻辑与视图，就像拓展中的一个个独立功能模块。这样做便于代码复用，开发某个功能组件时，能快速定位、修改，无需在大量代码中 “大海捞针”，提升开发效率与可维护性","source":"_posts/pag.md","raw":"---\ntitle: Vs Code之-pag预览拓展\ndate: 2024-12-31 10:16:42\ntags:\ncover: /img/common/t7.jpg\ncategories: Vs Code\n---\n# 开发流程\n## vscode拓展是什么？都能够做什么？\nvscode拓展是可以拓展VS Code编辑器功能、丰富编辑器用途的插件，能够提供编程效率，提升代码阅读体验，增强文本编辑功能\n比如copilot、prettier、image preview、Git History、Code Runner等等\n## 拓展如何下载/使用？\n1. 通过Vs Code插件商店下载安装\n> https://marketplace.visualstudio.com\n2. 本地导入.vsix文件安装\n![alt text](/img/pag/image-1.png)\n\n## .pag动画文件预览商店地址\n>https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.pag-preview&ssr=false#review-details\n\n## 下面进行详细的开发流程介绍，流程大致分为如下几个步骤\n- 配置开发环境\n- 调试\n- package.json配置说明\n- 快捷键配置\n- 打包/发布\n### 配置开发环境\n- 安装脚手架yeoman\n>https://code.visualstudio.com/api/get-started/your-first-extension\n\n```\nnpm install -g yo\nnpm install -g generator-code\n// 初始化项目\nyo code\n// yo模块全局安装后就安装了Yeoman，Yeoman是通用型项目脚手架工具，可以根据一套模板，生成一个对应的项目结构\n// generator-code模块是VS Code扩展生成器，与yo配合使用才能构建项目。\n提示如下\n```\n\n![alt text](/img/pag/image-2.png)\n官方工具初始化完成后，直接调试，理论上就能看到效果了\n### 调试\n先编译\n```\nnpm run compile\n```\n编译完新的窗口需要 reload\n调试的时候用这个甲壳虫，不要右键run code\n![alt text](/img/pag/image-3.png)\n会弹出一个新的窗口，新窗口直接执行 cmd+shift+p选择命令(自己注册的命令)就会出现效果\n或者使用注册的快捷键\n### package.json配置说明\n```\nname: 项目名 \ndisplayName: 插件名 \ndescription: 插件描述 \nversion: 版本号 \nkeywords\npublisher: 发布者id \nauthor: 作者 \nengines>vscode: vscode版本 \ncategories: 类别 \nactivationEvents: 扩展的激活事件 \nmain: 主入口 \ncontributes>commands: 配置命令 \ncontributes>keybindings: 配置快捷键\ncontributes>commands: 配置命令\ncontributes>menus: 菜单配置\ncontributes>customEditors: 创建和注册自定义编辑器\nkeywords: 配置关键词--这个也挺重要，搜索的时候要用\n```\n### 快捷键配置\n![alt text](/img/pag/image-4.png)\n接受的密钥\n![alt text](/img/pag/image-5.png)\n### 打包/发布\n- 安装vsce\nnpm i vsce -g\n- 打包成vsix文件\nvsce package\n- 发布/审核页面\nvsce login  xxx\nvsce publish\n发布分两种，一种是本地直接发布，另一种是商店网站发布\nhttps://marketplace.visualstudio.com/\n发布后，在商店页面会显示审核/结果状态\n![alt text](/img/pag/image-6.png)\n## pag文件预览\n实现方案因人而异，本拓展在制作中想到了拓展+webview方式来实现，使用webview一来相对熟悉，二来自由度比较高\n目录结构\n![alt text](/img/pag/image-7.png)\n- PAG-PREVIEW\n    - dist                打包后的目录\n    - src                 开发目录\n        - plugins         插件目录\n        - wbeview         webview相关(自定义)\n        - extension.ts    主入口\n    - gitignore\n1. 识别打开的是.pag结尾的文件格式\n2. 处理文件，输出给webview可访问的文件路径/buffer\n3. 使用webview对文件处理，使用libpag库来解析pag进行播放\n### 识别vscode打开了.pag结尾的文件\n在extension.ts文件中导入\n```\nimport PagPreview from './plugins/pag-preview';\nexport function activate(context: vscode.ExtensionContext) {\n  fileSizeStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 100);\n  context.subscriptions.push(PagPreview(context));\n  context.subscriptions.push(FileSize(context, fileSizeStatusBarItem));\n}\n```\n### 处理文件，输出给webview\n在plugins目录下创建pag-preview.ts处理具体逻辑\n```\nimport * as vscode from \"vscode\";\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nclass PagCustomDocument implements vscode.CustomDocument {\n  uri: vscode.Uri;\n\n  constructor(uri: vscode.Uri) {\n    this.uri = uri;\n  }\n\n  dispose(): void {\n    // 如果需要清理资源，可以在这里实现\n  }\n}\n\nclass PagCustomEditorProvider\n  implements vscode.CustomReadonlyEditorProvider<PagCustomDocument>\n{\n  public static readonly viewType = \"pagViewer.editor\";\n\n  constructor(private readonly context: vscode.ExtensionContext) {}\n\n  /**\n   * openCustomDocument 方法，用于打开自定义文档\n   */\n  public openCustomDocument(\n    uri: vscode.Uri,\n    _openContext: vscode.CustomDocumentOpenContext,\n    _token: vscode.CancellationToken\n  ): vscode.CustomDocument | Thenable<vscode.CustomDocument> {\n    // 创建并返回自定义文档实例\n    return new PagCustomDocument(uri);\n  }\n\n  /**\n   * resolveCustomEditor 方法，在文件被打开时触发\n   */\n  public async resolveCustomEditor(\n    document: PagCustomDocument,\n    webviewPanel: vscode.WebviewPanel,\n    _token: vscode.CancellationToken\n  ): Promise<void> {\n    console.log(`Opening file: ${document.uri.fsPath}`);\n    // vscode指令通信\n    vscode.commands.executeCommand(\"pagViewer.fileDetail\", document.uri);\n    // 设置 Webview 选项\n    webviewPanel.webview.options = {\n      enableScripts: true,\n      // localResourceRoots作用：防止 WebView 意外访问到插件不该访问的本地文件系统区域。只有处在 localResourceRoots 所列出的目录中的资源，才可以被 WebView 加载，这有助于保障用户系统的安全，避免恶意代码利用 WebView 越界访问敏感文件\n      localResourceRoots: [\n        vscode.Uri.file(path.join(this.context.extensionPath, \"dist\")),\n        vscode.Uri.file(path.dirname(document.uri.fsPath)),\n      ],\n    };\n\n    // 关键：将文件 URI 转为 Webview 可访问的路径\n    const fileUri = webviewPanel.webview.asWebviewUri(document.uri);\n    // console.log(\"uri--\", fileUri.toString()); https://file%2B.vscode-resource.vscode-cdn.net/Users/xxx/vscode/pag-preview/dist/webview/pag.min.js\n    const htmlPath = path.join(\n      this.context.extensionPath,\n      \"dist/webview/pag.html\"\n    );\n    // console.log(\"htmlPath\", htmlPath);\n    // 解析html内容\n    const htmlContent = fs.readFileSync(htmlPath, \"utf-8\");\n    const fastDiffUri = webviewPanel.webview.asWebviewUri(\n      vscode.Uri.file(\n        path.join(this.context.extensionPath, \"dist/webview/pag.min.js\")\n      )\n    );\n    const updatedHtmlContent = htmlContent.replace(\"./pag.min.js\", fastDiffUri);\n    // 设置 Webview 内容\n    webviewPanel.webview.html = updatedHtmlContent;\n    // 将文件内容发送到 Webview\n    webviewPanel.webview.postMessage({\n      type: \"loadFile\",\n      fileUri: fileUri.toString(),\n    });\n\n    // 监听来自 Webview 的消息\n    webviewPanel.webview.onDidReceiveMessage((message) => {\n      if (message.command === \"alert\") {\n        vscode.window.showInformationMessage(message.text);\n      }\n    });\n    // 处理自定义编辑器生命周期\n    webviewPanel.onDidDispose(() => {\n      console.log('pag文件关闭');\n      vscode.commands.executeCommand(\"pagViewer.fileDetail\");\n    });\n  }\n}\nexport default (context: vscode.ExtensionContext) => {\n  console.log(\"PAG Custom Editor Activated!\");\n\n  let disposable = vscode.window.registerCustomEditorProvider(\n    PagCustomEditorProvider.viewType,\n    new PagCustomEditorProvider(context),\n    {\n      webviewOptions: {\n        retainContextWhenHidden: false, // 切换标签时保留上下文\n      },\n    }\n  );\n  return disposable;\n};\n```\n### 使用webview对文件处理进行播放\n```\n<div class=\"pag-player\">\n  <button onclick=\"playToggle()\" class=\"pag-play\">pause</button>\n  <canvas class=\"pag-canvas\"></canvas>\n</div>\n\n// 监听来自扩展的消息\n  window.addEventListener('message', (event) => {\n    const message = event.data;\n    if (message.type === 'loadFile') {\n      initPag(message.fileUri).catch((err) => {\n        console.log('onError', err)\n      })\n    }\n  });\n  // 这一步根据需要进行解析,这里使用了libpag.min.js，自执行模式\n  const PAGView = libpag.PAGView;\n  const types = libpag.types;\n  const pagCanvasEl = document.querySelector('.pag-canvas');\n  let pagView = null;\n  const renderingMode = types.RenderingMode.WebGL;\n  const loadPag = async (url) => {\n    let arrayBuffer;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      arrayBuffer = await response.arrayBuffer();\n    } catch (error) {\n      console.error(\"Failed to fetch resource as ArrayBuffer:\", error);\n    }\n    return Promise.resolve(arrayBuffer)\n  }\n  const initPag = async (src) => {\n    const pagBuffer = await loadPag(src).catch(err => console.warn(err))\n    if (!pagBuffer) {\n      console.log('onError')\n      return\n    }\n    pagView = PAGView.init(pagBuffer, pagCanvasEl, {\n      renderingMode: renderingMode == 'webgl' ? types.RenderingMode.WebGL : types.RenderingMode.Canvas2D,\n      useScale: true\n    });\n    pagView.setRepeatCount(0);\n    await pagView.play();\n  }\n  function play (){ pagView.play()};\n  function pause (){ pagView.pause()};\n  const pagPlayer = document.querySelector('.pag-player');\n  const colors = {\n    1: '#000',\n    2: '#FFF',\n    3: '#00bcd3'\n  };\n  let playStatus = true;\n  const playRef = document.querySelector('.pag-play');\n  function playToggle () {\n    if (playStatus) {\n      pause();\n      playRef.innerText = 'play';\n    } else {\n      play();\n      playRef.innerText = 'pause';\n    }\n    playStatus = !playStatus;\n  }\n  function changeBg (type) {\n    pagPlayer.style.backgroundColor = colors[type];\n  }\n  ```\n\n# 总结\n VS Code 扩展具备多重实用功能：一方面，它显著提升编程效率，例如借助智能补全、代码片段等特性，让代码编写更为流畅迅速，更加专注在编辑器内部\n另一方面，VS Code 拓展各个功能模块界限清晰，相互协作又互不干扰。在 Vue 3 开发里，同样强调组件化，将页面拆分成一个个独立的组件，每个组件管理自己的状态、逻辑与视图，就像拓展中的一个个独立功能模块。这样做便于代码复用，开发某个功能组件时，能快速定位、修改，无需在大量代码中 “大海捞针”，提升开发效率与可维护性","slug":"pag","published":1,"updated":"2025-04-14T01:41:21.712Z","comments":1,"layout":"post","photos":[],"_id":"cma39gdzp00028rdn0m6x8tax","content":"<h1 id=\"开发流程\"><a href=\"#开发流程\" class=\"headerlink\" title=\"开发流程\"></a>开发流程</h1><h2 id=\"vscode拓展是什么？都能够做什么？\"><a href=\"#vscode拓展是什么？都能够做什么？\" class=\"headerlink\" title=\"vscode拓展是什么？都能够做什么？\"></a>vscode拓展是什么？都能够做什么？</h2><p>vscode拓展是可以拓展VS Code编辑器功能、丰富编辑器用途的插件，能够提供编程效率，提升代码阅读体验，增强文本编辑功能<br>比如copilot、prettier、image preview、Git History、Code Runner等等</p>\n<h2 id=\"拓展如何下载-使用？\"><a href=\"#拓展如何下载-使用？\" class=\"headerlink\" title=\"拓展如何下载&#x2F;使用？\"></a>拓展如何下载&#x2F;使用？</h2><ol>\n<li>通过Vs Code插件商店下载安装<blockquote>\n<p><a href=\"https://marketplace.visualstudio.com/\">https://marketplace.visualstudio.com</a></p>\n</blockquote>\n</li>\n<li>本地导入.vsix文件安装<br><img src=\"/img/pag/image-1.png\" alt=\"alt text\"></li>\n</ol>\n<h2 id=\"pag动画文件预览商店地址\"><a href=\"#pag动画文件预览商店地址\" class=\"headerlink\" title=\".pag动画文件预览商店地址\"></a>.pag动画文件预览商店地址</h2><blockquote>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.pag-preview&ssr=false#review-details\">https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.pag-preview&amp;ssr=false#review-details</a></p>\n</blockquote>\n<h2 id=\"下面进行详细的开发流程介绍，流程大致分为如下几个步骤\"><a href=\"#下面进行详细的开发流程介绍，流程大致分为如下几个步骤\" class=\"headerlink\" title=\"下面进行详细的开发流程介绍，流程大致分为如下几个步骤\"></a>下面进行详细的开发流程介绍，流程大致分为如下几个步骤</h2><ul>\n<li>配置开发环境</li>\n<li>调试</li>\n<li>package.json配置说明</li>\n<li>快捷键配置</li>\n<li>打包&#x2F;发布</li>\n</ul>\n<h3 id=\"配置开发环境\"><a href=\"#配置开发环境\" class=\"headerlink\" title=\"配置开发环境\"></a>配置开发环境</h3><ul>\n<li>安装脚手架yeoman<blockquote>\n<p><a href=\"https://code.visualstudio.com/api/get-started/your-first-extension\">https://code.visualstudio.com/api/get-started/your-first-extension</a></p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g yo</span><br><span class=\"line\">npm install -g generator-code</span><br><span class=\"line\">// 初始化项目</span><br><span class=\"line\">yo code</span><br><span class=\"line\">// yo模块全局安装后就安装了Yeoman，Yeoman是通用型项目脚手架工具，可以根据一套模板，生成一个对应的项目结构</span><br><span class=\"line\">// generator-code模块是VS Code扩展生成器，与yo配合使用才能构建项目。</span><br><span class=\"line\">提示如下</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/pag/image-2.png\" alt=\"alt text\"><br>官方工具初始化完成后，直接调试，理论上就能看到效果了</p>\n<h3 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h3><p>先编译</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run compile</span><br></pre></td></tr></table></figure>\n<p>编译完新的窗口需要 reload<br>调试的时候用这个甲壳虫，不要右键run code<br><img src=\"/img/pag/image-3.png\" alt=\"alt text\"><br>会弹出一个新的窗口，新窗口直接执行 cmd+shift+p选择命令(自己注册的命令)就会出现效果<br>或者使用注册的快捷键</p>\n<h3 id=\"package-json配置说明\"><a href=\"#package-json配置说明\" class=\"headerlink\" title=\"package.json配置说明\"></a>package.json配置说明</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: 项目名 </span><br><span class=\"line\">displayName: 插件名 </span><br><span class=\"line\">description: 插件描述 </span><br><span class=\"line\">version: 版本号 </span><br><span class=\"line\">keywords</span><br><span class=\"line\">publisher: 发布者id </span><br><span class=\"line\">author: 作者 </span><br><span class=\"line\">engines&gt;vscode: vscode版本 </span><br><span class=\"line\">categories: 类别 </span><br><span class=\"line\">activationEvents: 扩展的激活事件 </span><br><span class=\"line\">main: 主入口 </span><br><span class=\"line\">contributes&gt;commands: 配置命令 </span><br><span class=\"line\">contributes&gt;keybindings: 配置快捷键</span><br><span class=\"line\">contributes&gt;commands: 配置命令</span><br><span class=\"line\">contributes&gt;menus: 菜单配置</span><br><span class=\"line\">contributes&gt;customEditors: 创建和注册自定义编辑器</span><br><span class=\"line\">keywords: 配置关键词--这个也挺重要，搜索的时候要用</span><br></pre></td></tr></table></figure>\n<h3 id=\"快捷键配置\"><a href=\"#快捷键配置\" class=\"headerlink\" title=\"快捷键配置\"></a>快捷键配置</h3><p><img src=\"/img/pag/image-4.png\" alt=\"alt text\"><br>接受的密钥<br><img src=\"/img/pag/image-5.png\" alt=\"alt text\"></p>\n<h3 id=\"打包-发布\"><a href=\"#打包-发布\" class=\"headerlink\" title=\"打包&#x2F;发布\"></a>打包&#x2F;发布</h3><ul>\n<li>安装vsce<br>npm i vsce -g</li>\n<li>打包成vsix文件<br>vsce package</li>\n<li>发布&#x2F;审核页面<br>vsce login  xxx<br>vsce publish<br>发布分两种，一种是本地直接发布，另一种是商店网站发布<br><a href=\"https://marketplace.visualstudio.com/\">https://marketplace.visualstudio.com/</a><br>发布后，在商店页面会显示审核&#x2F;结果状态<br><img src=\"/img/pag/image-6.png\" alt=\"alt text\"></li>\n</ul>\n<h2 id=\"pag文件预览\"><a href=\"#pag文件预览\" class=\"headerlink\" title=\"pag文件预览\"></a>pag文件预览</h2><p>实现方案因人而异，本拓展在制作中想到了拓展+webview方式来实现，使用webview一来相对熟悉，二来自由度比较高<br>目录结构<br><img src=\"/img/pag/image-7.png\" alt=\"alt text\"></p>\n<ul>\n<li>PAG-PREVIEW<ul>\n<li>dist                打包后的目录</li>\n<li>src                 开发目录<ul>\n<li>plugins         插件目录</li>\n<li>wbeview         webview相关(自定义)</li>\n<li>extension.ts    主入口</li>\n</ul>\n</li>\n<li>gitignore</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>识别打开的是.pag结尾的文件格式</li>\n<li>处理文件，输出给webview可访问的文件路径&#x2F;buffer</li>\n<li>使用webview对文件处理，使用libpag库来解析pag进行播放</li>\n</ol>\n<h3 id=\"识别vscode打开了-pag结尾的文件\"><a href=\"#识别vscode打开了-pag结尾的文件\" class=\"headerlink\" title=\"识别vscode打开了.pag结尾的文件\"></a>识别vscode打开了.pag结尾的文件</h3><p>在extension.ts文件中导入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import PagPreview from &#x27;./plugins/pag-preview&#x27;;</span><br><span class=\"line\">export function activate(context: vscode.ExtensionContext) &#123;</span><br><span class=\"line\">  fileSizeStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 100);</span><br><span class=\"line\">  context.subscriptions.push(PagPreview(context));</span><br><span class=\"line\">  context.subscriptions.push(FileSize(context, fileSizeStatusBarItem));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理文件，输出给webview\"><a href=\"#处理文件，输出给webview\" class=\"headerlink\" title=\"处理文件，输出给webview\"></a>处理文件，输出给webview</h3><p>在plugins目录下创建pag-preview.ts处理具体逻辑</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import * as vscode from &quot;vscode&quot;;</span><br><span class=\"line\">const path = require(&quot;path&quot;);</span><br><span class=\"line\">const fs = require(&quot;fs&quot;);</span><br><span class=\"line\">class PagCustomDocument implements vscode.CustomDocument &#123;</span><br><span class=\"line\">  uri: vscode.Uri;</span><br><span class=\"line\"></span><br><span class=\"line\">  constructor(uri: vscode.Uri) &#123;</span><br><span class=\"line\">    this.uri = uri;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  dispose(): void &#123;</span><br><span class=\"line\">    // 如果需要清理资源，可以在这里实现</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class PagCustomEditorProvider</span><br><span class=\"line\">  implements vscode.CustomReadonlyEditorProvider&lt;PagCustomDocument&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  public static readonly viewType = &quot;pagViewer.editor&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">  constructor(private readonly context: vscode.ExtensionContext) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  /**</span><br><span class=\"line\">   * openCustomDocument 方法，用于打开自定义文档</span><br><span class=\"line\">   */</span><br><span class=\"line\">  public openCustomDocument(</span><br><span class=\"line\">    uri: vscode.Uri,</span><br><span class=\"line\">    _openContext: vscode.CustomDocumentOpenContext,</span><br><span class=\"line\">    _token: vscode.CancellationToken</span><br><span class=\"line\">  ): vscode.CustomDocument | Thenable&lt;vscode.CustomDocument&gt; &#123;</span><br><span class=\"line\">    // 创建并返回自定义文档实例</span><br><span class=\"line\">    return new PagCustomDocument(uri);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  /**</span><br><span class=\"line\">   * resolveCustomEditor 方法，在文件被打开时触发</span><br><span class=\"line\">   */</span><br><span class=\"line\">  public async resolveCustomEditor(</span><br><span class=\"line\">    document: PagCustomDocument,</span><br><span class=\"line\">    webviewPanel: vscode.WebviewPanel,</span><br><span class=\"line\">    _token: vscode.CancellationToken</span><br><span class=\"line\">  ): Promise&lt;void&gt; &#123;</span><br><span class=\"line\">    console.log(`Opening file: $&#123;document.uri.fsPath&#125;`);</span><br><span class=\"line\">    // vscode指令通信</span><br><span class=\"line\">    vscode.commands.executeCommand(&quot;pagViewer.fileDetail&quot;, document.uri);</span><br><span class=\"line\">    // 设置 Webview 选项</span><br><span class=\"line\">    webviewPanel.webview.options = &#123;</span><br><span class=\"line\">      enableScripts: true,</span><br><span class=\"line\">      // localResourceRoots作用：防止 WebView 意外访问到插件不该访问的本地文件系统区域。只有处在 localResourceRoots 所列出的目录中的资源，才可以被 WebView 加载，这有助于保障用户系统的安全，避免恶意代码利用 WebView 越界访问敏感文件</span><br><span class=\"line\">      localResourceRoots: [</span><br><span class=\"line\">        vscode.Uri.file(path.join(this.context.extensionPath, &quot;dist&quot;)),</span><br><span class=\"line\">        vscode.Uri.file(path.dirname(document.uri.fsPath)),</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    // 关键：将文件 URI 转为 Webview 可访问的路径</span><br><span class=\"line\">    const fileUri = webviewPanel.webview.asWebviewUri(document.uri);</span><br><span class=\"line\">    // console.log(&quot;uri--&quot;, fileUri.toString()); https://file%2B.vscode-resource.vscode-cdn.net/Users/xxx/vscode/pag-preview/dist/webview/pag.min.js</span><br><span class=\"line\">    const htmlPath = path.join(</span><br><span class=\"line\">      this.context.extensionPath,</span><br><span class=\"line\">      &quot;dist/webview/pag.html&quot;</span><br><span class=\"line\">    );</span><br><span class=\"line\">    // console.log(&quot;htmlPath&quot;, htmlPath);</span><br><span class=\"line\">    // 解析html内容</span><br><span class=\"line\">    const htmlContent = fs.readFileSync(htmlPath, &quot;utf-8&quot;);</span><br><span class=\"line\">    const fastDiffUri = webviewPanel.webview.asWebviewUri(</span><br><span class=\"line\">      vscode.Uri.file(</span><br><span class=\"line\">        path.join(this.context.extensionPath, &quot;dist/webview/pag.min.js&quot;)</span><br><span class=\"line\">      )</span><br><span class=\"line\">    );</span><br><span class=\"line\">    const updatedHtmlContent = htmlContent.replace(&quot;./pag.min.js&quot;, fastDiffUri);</span><br><span class=\"line\">    // 设置 Webview 内容</span><br><span class=\"line\">    webviewPanel.webview.html = updatedHtmlContent;</span><br><span class=\"line\">    // 将文件内容发送到 Webview</span><br><span class=\"line\">    webviewPanel.webview.postMessage(&#123;</span><br><span class=\"line\">      type: &quot;loadFile&quot;,</span><br><span class=\"line\">      fileUri: fileUri.toString(),</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    // 监听来自 Webview 的消息</span><br><span class=\"line\">    webviewPanel.webview.onDidReceiveMessage((message) =&gt; &#123;</span><br><span class=\"line\">      if (message.command === &quot;alert&quot;) &#123;</span><br><span class=\"line\">        vscode.window.showInformationMessage(message.text);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    // 处理自定义编辑器生命周期</span><br><span class=\"line\">    webviewPanel.onDidDispose(() =&gt; &#123;</span><br><span class=\"line\">      console.log(&#x27;pag文件关闭&#x27;);</span><br><span class=\"line\">      vscode.commands.executeCommand(&quot;pagViewer.fileDetail&quot;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">export default (context: vscode.ExtensionContext) =&gt; &#123;</span><br><span class=\"line\">  console.log(&quot;PAG Custom Editor Activated!&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  let disposable = vscode.window.registerCustomEditorProvider(</span><br><span class=\"line\">    PagCustomEditorProvider.viewType,</span><br><span class=\"line\">    new PagCustomEditorProvider(context),</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      webviewOptions: &#123;</span><br><span class=\"line\">        retainContextWhenHidden: false, // 切换标签时保留上下文</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  );</span><br><span class=\"line\">  return disposable;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用webview对文件处理进行播放\"><a href=\"#使用webview对文件处理进行播放\" class=\"headerlink\" title=\"使用webview对文件处理进行播放\"></a>使用webview对文件处理进行播放</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;pag-player&quot;&gt;</span><br><span class=\"line\">  &lt;button onclick=&quot;playToggle()&quot; class=&quot;pag-play&quot;&gt;pause&lt;/button&gt;</span><br><span class=\"line\">  &lt;canvas class=&quot;pag-canvas&quot;&gt;&lt;/canvas&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// 监听来自扩展的消息</span><br><span class=\"line\">  window.addEventListener(&#x27;message&#x27;, (event) =&gt; &#123;</span><br><span class=\"line\">    const message = event.data;</span><br><span class=\"line\">    if (message.type === &#x27;loadFile&#x27;) &#123;</span><br><span class=\"line\">      initPag(message.fileUri).catch((err) =&gt; &#123;</span><br><span class=\"line\">        console.log(&#x27;onError&#x27;, err)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  // 这一步根据需要进行解析,这里使用了libpag.min.js，自执行模式</span><br><span class=\"line\">  const PAGView = libpag.PAGView;</span><br><span class=\"line\">  const types = libpag.types;</span><br><span class=\"line\">  const pagCanvasEl = document.querySelector(&#x27;.pag-canvas&#x27;);</span><br><span class=\"line\">  let pagView = null;</span><br><span class=\"line\">  const renderingMode = types.RenderingMode.WebGL;</span><br><span class=\"line\">  const loadPag = async (url) =&gt; &#123;</span><br><span class=\"line\">    let arrayBuffer;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">      const response = await fetch(url);</span><br><span class=\"line\">      if (!response.ok) &#123;</span><br><span class=\"line\">        throw new Error(`HTTP error! Status: $&#123;response.status&#125;`);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      arrayBuffer = await response.arrayBuffer();</span><br><span class=\"line\">    &#125; catch (error) &#123;</span><br><span class=\"line\">      console.error(&quot;Failed to fetch resource as ArrayBuffer:&quot;, error);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return Promise.resolve(arrayBuffer)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  const initPag = async (src) =&gt; &#123;</span><br><span class=\"line\">    const pagBuffer = await loadPag(src).catch(err =&gt; console.warn(err))</span><br><span class=\"line\">    if (!pagBuffer) &#123;</span><br><span class=\"line\">      console.log(&#x27;onError&#x27;)</span><br><span class=\"line\">      return</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    pagView = PAGView.init(pagBuffer, pagCanvasEl, &#123;</span><br><span class=\"line\">      renderingMode: renderingMode == &#x27;webgl&#x27; ? types.RenderingMode.WebGL : types.RenderingMode.Canvas2D,</span><br><span class=\"line\">      useScale: true</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    pagView.setRepeatCount(0);</span><br><span class=\"line\">    await pagView.play();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function play ()&#123; pagView.play()&#125;;</span><br><span class=\"line\">  function pause ()&#123; pagView.pause()&#125;;</span><br><span class=\"line\">  const pagPlayer = document.querySelector(&#x27;.pag-player&#x27;);</span><br><span class=\"line\">  const colors = &#123;</span><br><span class=\"line\">    1: &#x27;#000&#x27;,</span><br><span class=\"line\">    2: &#x27;#FFF&#x27;,</span><br><span class=\"line\">    3: &#x27;#00bcd3&#x27;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  let playStatus = true;</span><br><span class=\"line\">  const playRef = document.querySelector(&#x27;.pag-play&#x27;);</span><br><span class=\"line\">  function playToggle () &#123;</span><br><span class=\"line\">    if (playStatus) &#123;</span><br><span class=\"line\">      pause();</span><br><span class=\"line\">      playRef.innerText = &#x27;play&#x27;;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      play();</span><br><span class=\"line\">      playRef.innerText = &#x27;pause&#x27;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    playStatus = !playStatus;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeBg (type) &#123;</span><br><span class=\"line\">    pagPlayer.style.backgroundColor = colors[type];</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p> VS Code 扩展具备多重实用功能：一方面，它显著提升编程效率，例如借助智能补全、代码片段等特性，让代码编写更为流畅迅速，更加专注在编辑器内部<br>另一方面，VS Code 拓展各个功能模块界限清晰，相互协作又互不干扰。在 Vue 3 开发里，同样强调组件化，将页面拆分成一个个独立的组件，每个组件管理自己的状态、逻辑与视图，就像拓展中的一个个独立功能模块。这样做便于代码复用，开发某个功能组件时，能快速定位、修改，无需在大量代码中 “大海捞针”，提升开发效率与可维护性</p>\n","excerpt":"","more":"<h1 id=\"开发流程\"><a href=\"#开发流程\" class=\"headerlink\" title=\"开发流程\"></a>开发流程</h1><h2 id=\"vscode拓展是什么？都能够做什么？\"><a href=\"#vscode拓展是什么？都能够做什么？\" class=\"headerlink\" title=\"vscode拓展是什么？都能够做什么？\"></a>vscode拓展是什么？都能够做什么？</h2><p>vscode拓展是可以拓展VS Code编辑器功能、丰富编辑器用途的插件，能够提供编程效率，提升代码阅读体验，增强文本编辑功能<br>比如copilot、prettier、image preview、Git History、Code Runner等等</p>\n<h2 id=\"拓展如何下载-使用？\"><a href=\"#拓展如何下载-使用？\" class=\"headerlink\" title=\"拓展如何下载&#x2F;使用？\"></a>拓展如何下载&#x2F;使用？</h2><ol>\n<li>通过Vs Code插件商店下载安装<blockquote>\n<p><a href=\"https://marketplace.visualstudio.com/\">https://marketplace.visualstudio.com</a></p>\n</blockquote>\n</li>\n<li>本地导入.vsix文件安装<br><img src=\"/img/pag/image-1.png\" alt=\"alt text\"></li>\n</ol>\n<h2 id=\"pag动画文件预览商店地址\"><a href=\"#pag动画文件预览商店地址\" class=\"headerlink\" title=\".pag动画文件预览商店地址\"></a>.pag动画文件预览商店地址</h2><blockquote>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.pag-preview&ssr=false#review-details\">https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.pag-preview&amp;ssr=false#review-details</a></p>\n</blockquote>\n<h2 id=\"下面进行详细的开发流程介绍，流程大致分为如下几个步骤\"><a href=\"#下面进行详细的开发流程介绍，流程大致分为如下几个步骤\" class=\"headerlink\" title=\"下面进行详细的开发流程介绍，流程大致分为如下几个步骤\"></a>下面进行详细的开发流程介绍，流程大致分为如下几个步骤</h2><ul>\n<li>配置开发环境</li>\n<li>调试</li>\n<li>package.json配置说明</li>\n<li>快捷键配置</li>\n<li>打包&#x2F;发布</li>\n</ul>\n<h3 id=\"配置开发环境\"><a href=\"#配置开发环境\" class=\"headerlink\" title=\"配置开发环境\"></a>配置开发环境</h3><ul>\n<li>安装脚手架yeoman<blockquote>\n<p><a href=\"https://code.visualstudio.com/api/get-started/your-first-extension\">https://code.visualstudio.com/api/get-started/your-first-extension</a></p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g yo</span><br><span class=\"line\">npm install -g generator-code</span><br><span class=\"line\">// 初始化项目</span><br><span class=\"line\">yo code</span><br><span class=\"line\">// yo模块全局安装后就安装了Yeoman，Yeoman是通用型项目脚手架工具，可以根据一套模板，生成一个对应的项目结构</span><br><span class=\"line\">// generator-code模块是VS Code扩展生成器，与yo配合使用才能构建项目。</span><br><span class=\"line\">提示如下</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/img/pag/image-2.png\" alt=\"alt text\"><br>官方工具初始化完成后，直接调试，理论上就能看到效果了</p>\n<h3 id=\"调试\"><a href=\"#调试\" class=\"headerlink\" title=\"调试\"></a>调试</h3><p>先编译</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run compile</span><br></pre></td></tr></table></figure>\n<p>编译完新的窗口需要 reload<br>调试的时候用这个甲壳虫，不要右键run code<br><img src=\"/img/pag/image-3.png\" alt=\"alt text\"><br>会弹出一个新的窗口，新窗口直接执行 cmd+shift+p选择命令(自己注册的命令)就会出现效果<br>或者使用注册的快捷键</p>\n<h3 id=\"package-json配置说明\"><a href=\"#package-json配置说明\" class=\"headerlink\" title=\"package.json配置说明\"></a>package.json配置说明</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name: 项目名 </span><br><span class=\"line\">displayName: 插件名 </span><br><span class=\"line\">description: 插件描述 </span><br><span class=\"line\">version: 版本号 </span><br><span class=\"line\">keywords</span><br><span class=\"line\">publisher: 发布者id </span><br><span class=\"line\">author: 作者 </span><br><span class=\"line\">engines&gt;vscode: vscode版本 </span><br><span class=\"line\">categories: 类别 </span><br><span class=\"line\">activationEvents: 扩展的激活事件 </span><br><span class=\"line\">main: 主入口 </span><br><span class=\"line\">contributes&gt;commands: 配置命令 </span><br><span class=\"line\">contributes&gt;keybindings: 配置快捷键</span><br><span class=\"line\">contributes&gt;commands: 配置命令</span><br><span class=\"line\">contributes&gt;menus: 菜单配置</span><br><span class=\"line\">contributes&gt;customEditors: 创建和注册自定义编辑器</span><br><span class=\"line\">keywords: 配置关键词--这个也挺重要，搜索的时候要用</span><br></pre></td></tr></table></figure>\n<h3 id=\"快捷键配置\"><a href=\"#快捷键配置\" class=\"headerlink\" title=\"快捷键配置\"></a>快捷键配置</h3><p><img src=\"/img/pag/image-4.png\" alt=\"alt text\"><br>接受的密钥<br><img src=\"/img/pag/image-5.png\" alt=\"alt text\"></p>\n<h3 id=\"打包-发布\"><a href=\"#打包-发布\" class=\"headerlink\" title=\"打包&#x2F;发布\"></a>打包&#x2F;发布</h3><ul>\n<li>安装vsce<br>npm i vsce -g</li>\n<li>打包成vsix文件<br>vsce package</li>\n<li>发布&#x2F;审核页面<br>vsce login  xxx<br>vsce publish<br>发布分两种，一种是本地直接发布，另一种是商店网站发布<br><a href=\"https://marketplace.visualstudio.com/\">https://marketplace.visualstudio.com/</a><br>发布后，在商店页面会显示审核&#x2F;结果状态<br><img src=\"/img/pag/image-6.png\" alt=\"alt text\"></li>\n</ul>\n<h2 id=\"pag文件预览\"><a href=\"#pag文件预览\" class=\"headerlink\" title=\"pag文件预览\"></a>pag文件预览</h2><p>实现方案因人而异，本拓展在制作中想到了拓展+webview方式来实现，使用webview一来相对熟悉，二来自由度比较高<br>目录结构<br><img src=\"/img/pag/image-7.png\" alt=\"alt text\"></p>\n<ul>\n<li>PAG-PREVIEW<ul>\n<li>dist                打包后的目录</li>\n<li>src                 开发目录<ul>\n<li>plugins         插件目录</li>\n<li>wbeview         webview相关(自定义)</li>\n<li>extension.ts    主入口</li>\n</ul>\n</li>\n<li>gitignore</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>识别打开的是.pag结尾的文件格式</li>\n<li>处理文件，输出给webview可访问的文件路径&#x2F;buffer</li>\n<li>使用webview对文件处理，使用libpag库来解析pag进行播放</li>\n</ol>\n<h3 id=\"识别vscode打开了-pag结尾的文件\"><a href=\"#识别vscode打开了-pag结尾的文件\" class=\"headerlink\" title=\"识别vscode打开了.pag结尾的文件\"></a>识别vscode打开了.pag结尾的文件</h3><p>在extension.ts文件中导入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import PagPreview from &#x27;./plugins/pag-preview&#x27;;</span><br><span class=\"line\">export function activate(context: vscode.ExtensionContext) &#123;</span><br><span class=\"line\">  fileSizeStatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Right, 100);</span><br><span class=\"line\">  context.subscriptions.push(PagPreview(context));</span><br><span class=\"line\">  context.subscriptions.push(FileSize(context, fileSizeStatusBarItem));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理文件，输出给webview\"><a href=\"#处理文件，输出给webview\" class=\"headerlink\" title=\"处理文件，输出给webview\"></a>处理文件，输出给webview</h3><p>在plugins目录下创建pag-preview.ts处理具体逻辑</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import * as vscode from &quot;vscode&quot;;</span><br><span class=\"line\">const path = require(&quot;path&quot;);</span><br><span class=\"line\">const fs = require(&quot;fs&quot;);</span><br><span class=\"line\">class PagCustomDocument implements vscode.CustomDocument &#123;</span><br><span class=\"line\">  uri: vscode.Uri;</span><br><span class=\"line\"></span><br><span class=\"line\">  constructor(uri: vscode.Uri) &#123;</span><br><span class=\"line\">    this.uri = uri;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  dispose(): void &#123;</span><br><span class=\"line\">    // 如果需要清理资源，可以在这里实现</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class PagCustomEditorProvider</span><br><span class=\"line\">  implements vscode.CustomReadonlyEditorProvider&lt;PagCustomDocument&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  public static readonly viewType = &quot;pagViewer.editor&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">  constructor(private readonly context: vscode.ExtensionContext) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  /**</span><br><span class=\"line\">   * openCustomDocument 方法，用于打开自定义文档</span><br><span class=\"line\">   */</span><br><span class=\"line\">  public openCustomDocument(</span><br><span class=\"line\">    uri: vscode.Uri,</span><br><span class=\"line\">    _openContext: vscode.CustomDocumentOpenContext,</span><br><span class=\"line\">    _token: vscode.CancellationToken</span><br><span class=\"line\">  ): vscode.CustomDocument | Thenable&lt;vscode.CustomDocument&gt; &#123;</span><br><span class=\"line\">    // 创建并返回自定义文档实例</span><br><span class=\"line\">    return new PagCustomDocument(uri);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  /**</span><br><span class=\"line\">   * resolveCustomEditor 方法，在文件被打开时触发</span><br><span class=\"line\">   */</span><br><span class=\"line\">  public async resolveCustomEditor(</span><br><span class=\"line\">    document: PagCustomDocument,</span><br><span class=\"line\">    webviewPanel: vscode.WebviewPanel,</span><br><span class=\"line\">    _token: vscode.CancellationToken</span><br><span class=\"line\">  ): Promise&lt;void&gt; &#123;</span><br><span class=\"line\">    console.log(`Opening file: $&#123;document.uri.fsPath&#125;`);</span><br><span class=\"line\">    // vscode指令通信</span><br><span class=\"line\">    vscode.commands.executeCommand(&quot;pagViewer.fileDetail&quot;, document.uri);</span><br><span class=\"line\">    // 设置 Webview 选项</span><br><span class=\"line\">    webviewPanel.webview.options = &#123;</span><br><span class=\"line\">      enableScripts: true,</span><br><span class=\"line\">      // localResourceRoots作用：防止 WebView 意外访问到插件不该访问的本地文件系统区域。只有处在 localResourceRoots 所列出的目录中的资源，才可以被 WebView 加载，这有助于保障用户系统的安全，避免恶意代码利用 WebView 越界访问敏感文件</span><br><span class=\"line\">      localResourceRoots: [</span><br><span class=\"line\">        vscode.Uri.file(path.join(this.context.extensionPath, &quot;dist&quot;)),</span><br><span class=\"line\">        vscode.Uri.file(path.dirname(document.uri.fsPath)),</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    // 关键：将文件 URI 转为 Webview 可访问的路径</span><br><span class=\"line\">    const fileUri = webviewPanel.webview.asWebviewUri(document.uri);</span><br><span class=\"line\">    // console.log(&quot;uri--&quot;, fileUri.toString()); https://file%2B.vscode-resource.vscode-cdn.net/Users/xxx/vscode/pag-preview/dist/webview/pag.min.js</span><br><span class=\"line\">    const htmlPath = path.join(</span><br><span class=\"line\">      this.context.extensionPath,</span><br><span class=\"line\">      &quot;dist/webview/pag.html&quot;</span><br><span class=\"line\">    );</span><br><span class=\"line\">    // console.log(&quot;htmlPath&quot;, htmlPath);</span><br><span class=\"line\">    // 解析html内容</span><br><span class=\"line\">    const htmlContent = fs.readFileSync(htmlPath, &quot;utf-8&quot;);</span><br><span class=\"line\">    const fastDiffUri = webviewPanel.webview.asWebviewUri(</span><br><span class=\"line\">      vscode.Uri.file(</span><br><span class=\"line\">        path.join(this.context.extensionPath, &quot;dist/webview/pag.min.js&quot;)</span><br><span class=\"line\">      )</span><br><span class=\"line\">    );</span><br><span class=\"line\">    const updatedHtmlContent = htmlContent.replace(&quot;./pag.min.js&quot;, fastDiffUri);</span><br><span class=\"line\">    // 设置 Webview 内容</span><br><span class=\"line\">    webviewPanel.webview.html = updatedHtmlContent;</span><br><span class=\"line\">    // 将文件内容发送到 Webview</span><br><span class=\"line\">    webviewPanel.webview.postMessage(&#123;</span><br><span class=\"line\">      type: &quot;loadFile&quot;,</span><br><span class=\"line\">      fileUri: fileUri.toString(),</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    // 监听来自 Webview 的消息</span><br><span class=\"line\">    webviewPanel.webview.onDidReceiveMessage((message) =&gt; &#123;</span><br><span class=\"line\">      if (message.command === &quot;alert&quot;) &#123;</span><br><span class=\"line\">        vscode.window.showInformationMessage(message.text);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    // 处理自定义编辑器生命周期</span><br><span class=\"line\">    webviewPanel.onDidDispose(() =&gt; &#123;</span><br><span class=\"line\">      console.log(&#x27;pag文件关闭&#x27;);</span><br><span class=\"line\">      vscode.commands.executeCommand(&quot;pagViewer.fileDetail&quot;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">export default (context: vscode.ExtensionContext) =&gt; &#123;</span><br><span class=\"line\">  console.log(&quot;PAG Custom Editor Activated!&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  let disposable = vscode.window.registerCustomEditorProvider(</span><br><span class=\"line\">    PagCustomEditorProvider.viewType,</span><br><span class=\"line\">    new PagCustomEditorProvider(context),</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      webviewOptions: &#123;</span><br><span class=\"line\">        retainContextWhenHidden: false, // 切换标签时保留上下文</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  );</span><br><span class=\"line\">  return disposable;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用webview对文件处理进行播放\"><a href=\"#使用webview对文件处理进行播放\" class=\"headerlink\" title=\"使用webview对文件处理进行播放\"></a>使用webview对文件处理进行播放</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;pag-player&quot;&gt;</span><br><span class=\"line\">  &lt;button onclick=&quot;playToggle()&quot; class=&quot;pag-play&quot;&gt;pause&lt;/button&gt;</span><br><span class=\"line\">  &lt;canvas class=&quot;pag-canvas&quot;&gt;&lt;/canvas&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// 监听来自扩展的消息</span><br><span class=\"line\">  window.addEventListener(&#x27;message&#x27;, (event) =&gt; &#123;</span><br><span class=\"line\">    const message = event.data;</span><br><span class=\"line\">    if (message.type === &#x27;loadFile&#x27;) &#123;</span><br><span class=\"line\">      initPag(message.fileUri).catch((err) =&gt; &#123;</span><br><span class=\"line\">        console.log(&#x27;onError&#x27;, err)</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  // 这一步根据需要进行解析,这里使用了libpag.min.js，自执行模式</span><br><span class=\"line\">  const PAGView = libpag.PAGView;</span><br><span class=\"line\">  const types = libpag.types;</span><br><span class=\"line\">  const pagCanvasEl = document.querySelector(&#x27;.pag-canvas&#x27;);</span><br><span class=\"line\">  let pagView = null;</span><br><span class=\"line\">  const renderingMode = types.RenderingMode.WebGL;</span><br><span class=\"line\">  const loadPag = async (url) =&gt; &#123;</span><br><span class=\"line\">    let arrayBuffer;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">      const response = await fetch(url);</span><br><span class=\"line\">      if (!response.ok) &#123;</span><br><span class=\"line\">        throw new Error(`HTTP error! Status: $&#123;response.status&#125;`);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      arrayBuffer = await response.arrayBuffer();</span><br><span class=\"line\">    &#125; catch (error) &#123;</span><br><span class=\"line\">      console.error(&quot;Failed to fetch resource as ArrayBuffer:&quot;, error);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return Promise.resolve(arrayBuffer)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  const initPag = async (src) =&gt; &#123;</span><br><span class=\"line\">    const pagBuffer = await loadPag(src).catch(err =&gt; console.warn(err))</span><br><span class=\"line\">    if (!pagBuffer) &#123;</span><br><span class=\"line\">      console.log(&#x27;onError&#x27;)</span><br><span class=\"line\">      return</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    pagView = PAGView.init(pagBuffer, pagCanvasEl, &#123;</span><br><span class=\"line\">      renderingMode: renderingMode == &#x27;webgl&#x27; ? types.RenderingMode.WebGL : types.RenderingMode.Canvas2D,</span><br><span class=\"line\">      useScale: true</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    pagView.setRepeatCount(0);</span><br><span class=\"line\">    await pagView.play();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function play ()&#123; pagView.play()&#125;;</span><br><span class=\"line\">  function pause ()&#123; pagView.pause()&#125;;</span><br><span class=\"line\">  const pagPlayer = document.querySelector(&#x27;.pag-player&#x27;);</span><br><span class=\"line\">  const colors = &#123;</span><br><span class=\"line\">    1: &#x27;#000&#x27;,</span><br><span class=\"line\">    2: &#x27;#FFF&#x27;,</span><br><span class=\"line\">    3: &#x27;#00bcd3&#x27;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  let playStatus = true;</span><br><span class=\"line\">  const playRef = document.querySelector(&#x27;.pag-play&#x27;);</span><br><span class=\"line\">  function playToggle () &#123;</span><br><span class=\"line\">    if (playStatus) &#123;</span><br><span class=\"line\">      pause();</span><br><span class=\"line\">      playRef.innerText = &#x27;play&#x27;;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      play();</span><br><span class=\"line\">      playRef.innerText = &#x27;pause&#x27;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    playStatus = !playStatus;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  function changeBg (type) &#123;</span><br><span class=\"line\">    pagPlayer.style.backgroundColor = colors[type];</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p> VS Code 扩展具备多重实用功能：一方面，它显著提升编程效率，例如借助智能补全、代码片段等特性，让代码编写更为流畅迅速，更加专注在编辑器内部<br>另一方面，VS Code 拓展各个功能模块界限清晰，相互协作又互不干扰。在 Vue 3 开发里，同样强调组件化，将页面拆分成一个个独立的组件，每个组件管理自己的状态、逻辑与视图，就像拓展中的一个个独立功能模块。这样做便于代码复用，开发某个功能组件时，能快速定位、修改，无需在大量代码中 “大海捞针”，提升开发效率与可维护性</p>\n"},{"title":"Vs Code之-spine预览拓展","date":"2025-04-03T01:39:29.000Z","cover":"/img/common/t19.jpeg","_content":"\n---\n> 在前一篇关于VS Code拓展开发的文章中，我们已详细探讨了拓展开发的完整流程。那么，此次我们将直接切入重点——Spine动画预览功能的实现。\n\n如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi.js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。\n---\n\n## Spine动画文件预览商店地址\n> https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.spine-preview\n\n## 下面进行功能实现流程介绍，流程大致分为如下几个步骤\n- 方案拟定：spine有三个文件,一般为.json,.atlas(或者.atlas.txt),.png，那么选中哪个文件进行预览呢?\n- 拓展+webview方式实现\n- Vs Code读取文件，把路径传递给Webview处理\n\n## 方案拟定\n- 无论打开哪个文件结尾，都有个问题，可能误判，因为这几个文件在其他业务中也有存在，所以更好的方案是右键文件夹，让用户手动指定来预览\n- 在package.json中指定：右键文件夹的时候开启指令，显示【播放spine】\n![alt text](/img/spine/image-1.png)\n```\n\"explorer/context\": [\n  {\n    \"command\": \"spine.preview\",\n    \"group\": \"navigation\",\n    \"when\": \"explorerResourceIsFolder\"\n  }\n]\n```\n## 拓展+webview方式实现\n\n| 步骤 | 操作内容 |\n| ---- | ---- |\n| 1 | 方案确定 |\n| 2 | 读取右键目录<br> - 要求目录同时包含 `.json`、`.atlas`、`.png` 文件<br> - 读取这三个文件 |\n| 3 | 传递文件给webview处理 |\n\n- ### 读取文件\n```\n // 获取文件的基本信息\nconst filePath = uri.fsPath;\nconst jsonFiles: string[] = [];\nconst atlasFiles: string[] = [];\n\n// 遍历文件夹，找出 JSON 和 ATLAS 文件\nfunction traverseDir(dir: string) {\n  const files = fs.readdirSync(dir);\n  files.forEach((file: any) => {\n    const filePath = path.join(dir, file);\n    const stats = fs.statSync(filePath);\n    if (stats.isDirectory()) {\n      traverseDir(filePath);\n    } else {\n      const ext = path.extname(file);\n      if (ext === \".json\") {\n        jsonFiles.push(filePath);\n      } else if (ext === \".atlas\") {\n        atlasFiles.push(filePath);\n      }\n    }\n  });\n}\ntraverseDir(filePath);\n// 简单选择第一个匹配的 JSON 和 ATLAS 文件（实际可优化为用户选择）\nconst jsonPath = jsonFiles[0];\nconst atlasPath = atlasFiles.find(\n  (atlas) =>\n    path.basename(atlas, \".atlas\") === path.basename(jsonPath, \".json\")\n);\n```\n##### 如果没有匹配到文件，提示错误\n```\nif (jsonPath && atlasPath){\n  // 正常处理\n} else {\n  vscode.window.showErrorMessage(\n    \"在文件夹中未找到匹配的 Spine JSON 和 ATLAS 文件。\"\n  );\n}\n```\n- ### webview拿到文件后，使用pixi.js+pixi-spine来处理播放功能\n\n| 步骤 | 操作内容 |\n| ---- | ---- |\n| 1 | 监听消息，拿到json和atlas，其实pixi-spine只需要json就好，还有其他版本的spine-pixi-v7需要atlas |\n| 2 | 初始化pixi和spine，读取所有动画，默认给播放第一个动画 |\n| 3 | 读取动画信息，方便直接查看 |\n\n- 监听来自扩展的消息\n```\n// 监听来自扩展的消息\nwindow.addEventListener(\"message\", (event) => {\n  const message = event.data;\n  // console.log('message--', event.data);\n  if (message.type === \"loadFile\") {\n    init(message.json, message.atlas).catch((err) => {\n      console.log(\"onError\", err);\n    });\n  }\n});\n```\n- 初始化pixi和spine\n```\nasync function init(json, atlas) {\n  // app = new window.PIXI.Application();\n  // console.log(\"app\", app, window.spine);\n  // await app.init({\n  //   // backgroundColor: 0x1099bb,\n  //   backgroundAlpha: 0,\n  //   resizeTo: window,\n  //   antialias: true,\n  //   autoDensity: true,\n  // });\n  app = new window.PIXI.Application({\n    backgroundAlpha: 0,\n    resizeTo: window,\n    antialias: true,\n    autoDensity: true,\n  });\n  document.getElementById(\"animation-player\").appendChild(this.app.view);\n  playSpine(json, atlas);\n}\n```\n- 播放spine，获取动画信息\n```\nasync function playSpine(json, atlas) {\n  // // pixi8 加载 Spine 资源\n  // PIXI.Assets.add({\n  //   alias: \"spineData\",\n  //   src: json,\n  // });\n  // PIXI.Assets.add({\n  //   alias: \"spineAtlas\",\n  //   src: atlas,\n  // });\n  // await PIXI.Assets.load([\"spineData\", \"spineAtlas\"]);\n\n  // const spineBody = window.spine.Spine.from({\n  //   atlas: \"spineAtlas\",\n  //   skeleton: \"spineData\",\n  //   scale: 0.5,\n  // });\n  const res = await PIXI.Assets.load(json);\n  const spineBody = new PIXI.spine.Spine(res.spineData);\n  spineBody.state.data.defaultMix = 0.2;\n  spineBody.x = window.innerWidth / 2;\n  app.stage.addChild(spineBody);\n  // 获取 Spine 动画的宽高\n  setTimeout(() => {\n    const spineInfo = spineBody.getBounds();\n    spineBody.y = window.innerHeight / 2 + +spineInfo.height / 2;\n    const width = spineInfo.width;\n    const height = spineInfo.height;\n    console.log(\"spineInfo\", spineBody.getBounds(), spineBody);\n    console.table({\n      width: spineBody.width,\n      height: spineBody.height,\n      x: spineBody.x,\n      y: spineBody.y,\n    });\n    // 获取 Spine 要求的版本\n    const spineVersion = spineBody.stateData.skeletonData.version;\n    console.log(\"Spine 要求的版本:\", spineVersion);\n    console.log(\"所有动画\", spineBody.skeleton.data.animations);\n    // 更新spine信息\n    const infoDiv = document.getElementById(\"normal-info\");\n    infoDiv.innerHTML = `\n      <div class='item'><span>width: </span>${width}</div>\n      <div class='item'><span>height: </span>${height}</div>\n      <div class='item'><span>x: </span>${spineInfo.x}</div>\n      <div class='item'><span>y: </span>${spineInfo.y}</div>\n      <div class='item'><span>version: </span>${spineVersion}</div>\n    `;\n  }, 0);\n  getAllAnimations(spineBody);\n}\n```\n- 获取所有动画，添加到选择框，方便用户选择任意动画播放\n```\nasync function getAllAnimations(spineBody) {\n  // 获取所有动画名称\n  const duration = document.querySelector(\".duration\");\n  const animations = spineBody.skeleton.data.animations;\n  const animationNames = [];\n  animations.forEach((animation) => {\n    animationNames.push(animation.name);\n  });\n\n  // 创建 select 选择框\n  const selector = document.getElementById(\"animationSelector\");\n  animationNames.forEach((name) => {\n    const option = document.createElement(\"option\");\n    option.value = name;\n    option.textContent = name;\n    selector.appendChild(option);\n  });\n  // 播放第一个动画\n  if (animationNames.length > 0) {\n    spineBody.state.setAnimation(0, animationNames[0], true);\n    duration.innerHTML = `<span>duration: </span>${animations[0].duration}`;\n  }\n  // 监听选择事件\n  selector.addEventListener(\"change\", (event) => {\n    const selectedAnimation = event.target.value;\n    spineBody.state.setAnimation(0, selectedAnimation, true);\n    const r = animations.find((k) => k.name == selectedAnimation);\n    duration.innerHTML = `<span>duration: </span>${r.duration}`;\n  });\n  setSpineY(spineBody);\n  setScale(spineBody);\n}\n```\n\n### 源码开放，期待共探\n👉 [spine - preview源码](https://github.com/lantianhaijiao/spine-preview) 👈","source":"_posts/spine.md","raw":"---\ntitle: Vs Code之-spine预览拓展\ndate: 2025-04-03 09:39:29\ntags:\ncover: /img/common/t19.jpeg\ncategories: Vs Code\n---\n\n---\n> 在前一篇关于VS Code拓展开发的文章中，我们已详细探讨了拓展开发的完整流程。那么，此次我们将直接切入重点——Spine动画预览功能的实现。\n\n如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi.js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。\n---\n\n## Spine动画文件预览商店地址\n> https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.spine-preview\n\n## 下面进行功能实现流程介绍，流程大致分为如下几个步骤\n- 方案拟定：spine有三个文件,一般为.json,.atlas(或者.atlas.txt),.png，那么选中哪个文件进行预览呢?\n- 拓展+webview方式实现\n- Vs Code读取文件，把路径传递给Webview处理\n\n## 方案拟定\n- 无论打开哪个文件结尾，都有个问题，可能误判，因为这几个文件在其他业务中也有存在，所以更好的方案是右键文件夹，让用户手动指定来预览\n- 在package.json中指定：右键文件夹的时候开启指令，显示【播放spine】\n![alt text](/img/spine/image-1.png)\n```\n\"explorer/context\": [\n  {\n    \"command\": \"spine.preview\",\n    \"group\": \"navigation\",\n    \"when\": \"explorerResourceIsFolder\"\n  }\n]\n```\n## 拓展+webview方式实现\n\n| 步骤 | 操作内容 |\n| ---- | ---- |\n| 1 | 方案确定 |\n| 2 | 读取右键目录<br> - 要求目录同时包含 `.json`、`.atlas`、`.png` 文件<br> - 读取这三个文件 |\n| 3 | 传递文件给webview处理 |\n\n- ### 读取文件\n```\n // 获取文件的基本信息\nconst filePath = uri.fsPath;\nconst jsonFiles: string[] = [];\nconst atlasFiles: string[] = [];\n\n// 遍历文件夹，找出 JSON 和 ATLAS 文件\nfunction traverseDir(dir: string) {\n  const files = fs.readdirSync(dir);\n  files.forEach((file: any) => {\n    const filePath = path.join(dir, file);\n    const stats = fs.statSync(filePath);\n    if (stats.isDirectory()) {\n      traverseDir(filePath);\n    } else {\n      const ext = path.extname(file);\n      if (ext === \".json\") {\n        jsonFiles.push(filePath);\n      } else if (ext === \".atlas\") {\n        atlasFiles.push(filePath);\n      }\n    }\n  });\n}\ntraverseDir(filePath);\n// 简单选择第一个匹配的 JSON 和 ATLAS 文件（实际可优化为用户选择）\nconst jsonPath = jsonFiles[0];\nconst atlasPath = atlasFiles.find(\n  (atlas) =>\n    path.basename(atlas, \".atlas\") === path.basename(jsonPath, \".json\")\n);\n```\n##### 如果没有匹配到文件，提示错误\n```\nif (jsonPath && atlasPath){\n  // 正常处理\n} else {\n  vscode.window.showErrorMessage(\n    \"在文件夹中未找到匹配的 Spine JSON 和 ATLAS 文件。\"\n  );\n}\n```\n- ### webview拿到文件后，使用pixi.js+pixi-spine来处理播放功能\n\n| 步骤 | 操作内容 |\n| ---- | ---- |\n| 1 | 监听消息，拿到json和atlas，其实pixi-spine只需要json就好，还有其他版本的spine-pixi-v7需要atlas |\n| 2 | 初始化pixi和spine，读取所有动画，默认给播放第一个动画 |\n| 3 | 读取动画信息，方便直接查看 |\n\n- 监听来自扩展的消息\n```\n// 监听来自扩展的消息\nwindow.addEventListener(\"message\", (event) => {\n  const message = event.data;\n  // console.log('message--', event.data);\n  if (message.type === \"loadFile\") {\n    init(message.json, message.atlas).catch((err) => {\n      console.log(\"onError\", err);\n    });\n  }\n});\n```\n- 初始化pixi和spine\n```\nasync function init(json, atlas) {\n  // app = new window.PIXI.Application();\n  // console.log(\"app\", app, window.spine);\n  // await app.init({\n  //   // backgroundColor: 0x1099bb,\n  //   backgroundAlpha: 0,\n  //   resizeTo: window,\n  //   antialias: true,\n  //   autoDensity: true,\n  // });\n  app = new window.PIXI.Application({\n    backgroundAlpha: 0,\n    resizeTo: window,\n    antialias: true,\n    autoDensity: true,\n  });\n  document.getElementById(\"animation-player\").appendChild(this.app.view);\n  playSpine(json, atlas);\n}\n```\n- 播放spine，获取动画信息\n```\nasync function playSpine(json, atlas) {\n  // // pixi8 加载 Spine 资源\n  // PIXI.Assets.add({\n  //   alias: \"spineData\",\n  //   src: json,\n  // });\n  // PIXI.Assets.add({\n  //   alias: \"spineAtlas\",\n  //   src: atlas,\n  // });\n  // await PIXI.Assets.load([\"spineData\", \"spineAtlas\"]);\n\n  // const spineBody = window.spine.Spine.from({\n  //   atlas: \"spineAtlas\",\n  //   skeleton: \"spineData\",\n  //   scale: 0.5,\n  // });\n  const res = await PIXI.Assets.load(json);\n  const spineBody = new PIXI.spine.Spine(res.spineData);\n  spineBody.state.data.defaultMix = 0.2;\n  spineBody.x = window.innerWidth / 2;\n  app.stage.addChild(spineBody);\n  // 获取 Spine 动画的宽高\n  setTimeout(() => {\n    const spineInfo = spineBody.getBounds();\n    spineBody.y = window.innerHeight / 2 + +spineInfo.height / 2;\n    const width = spineInfo.width;\n    const height = spineInfo.height;\n    console.log(\"spineInfo\", spineBody.getBounds(), spineBody);\n    console.table({\n      width: spineBody.width,\n      height: spineBody.height,\n      x: spineBody.x,\n      y: spineBody.y,\n    });\n    // 获取 Spine 要求的版本\n    const spineVersion = spineBody.stateData.skeletonData.version;\n    console.log(\"Spine 要求的版本:\", spineVersion);\n    console.log(\"所有动画\", spineBody.skeleton.data.animations);\n    // 更新spine信息\n    const infoDiv = document.getElementById(\"normal-info\");\n    infoDiv.innerHTML = `\n      <div class='item'><span>width: </span>${width}</div>\n      <div class='item'><span>height: </span>${height}</div>\n      <div class='item'><span>x: </span>${spineInfo.x}</div>\n      <div class='item'><span>y: </span>${spineInfo.y}</div>\n      <div class='item'><span>version: </span>${spineVersion}</div>\n    `;\n  }, 0);\n  getAllAnimations(spineBody);\n}\n```\n- 获取所有动画，添加到选择框，方便用户选择任意动画播放\n```\nasync function getAllAnimations(spineBody) {\n  // 获取所有动画名称\n  const duration = document.querySelector(\".duration\");\n  const animations = spineBody.skeleton.data.animations;\n  const animationNames = [];\n  animations.forEach((animation) => {\n    animationNames.push(animation.name);\n  });\n\n  // 创建 select 选择框\n  const selector = document.getElementById(\"animationSelector\");\n  animationNames.forEach((name) => {\n    const option = document.createElement(\"option\");\n    option.value = name;\n    option.textContent = name;\n    selector.appendChild(option);\n  });\n  // 播放第一个动画\n  if (animationNames.length > 0) {\n    spineBody.state.setAnimation(0, animationNames[0], true);\n    duration.innerHTML = `<span>duration: </span>${animations[0].duration}`;\n  }\n  // 监听选择事件\n  selector.addEventListener(\"change\", (event) => {\n    const selectedAnimation = event.target.value;\n    spineBody.state.setAnimation(0, selectedAnimation, true);\n    const r = animations.find((k) => k.name == selectedAnimation);\n    duration.innerHTML = `<span>duration: </span>${r.duration}`;\n  });\n  setSpineY(spineBody);\n  setScale(spineBody);\n}\n```\n\n### 源码开放，期待共探\n👉 [spine - preview源码](https://github.com/lantianhaijiao/spine-preview) 👈","slug":"spine","published":1,"updated":"2025-04-14T01:41:21.713Z","comments":1,"layout":"post","photos":[],"_id":"cma39gdzp00038rdnd3ci6boi","content":"<hr>\n<blockquote>\n<p>在前一篇关于VS Code拓展开发的文章中，我们已详细探讨了拓展开发的完整流程。那么，此次我们将直接切入重点——Spine动画预览功能的实现。</p>\n</blockquote>\n<h2 id=\"如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi-js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。\"><a href=\"#如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi-js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。\" class=\"headerlink\" title=\"如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi.js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。\"></a>如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi.js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。</h2><h2 id=\"Spine动画文件预览商店地址\"><a href=\"#Spine动画文件预览商店地址\" class=\"headerlink\" title=\"Spine动画文件预览商店地址\"></a>Spine动画文件预览商店地址</h2><blockquote>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.spine-preview\">https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.spine-preview</a></p>\n</blockquote>\n<h2 id=\"下面进行功能实现流程介绍，流程大致分为如下几个步骤\"><a href=\"#下面进行功能实现流程介绍，流程大致分为如下几个步骤\" class=\"headerlink\" title=\"下面进行功能实现流程介绍，流程大致分为如下几个步骤\"></a>下面进行功能实现流程介绍，流程大致分为如下几个步骤</h2><ul>\n<li>方案拟定：spine有三个文件,一般为.json,.atlas(或者.atlas.txt),.png，那么选中哪个文件进行预览呢?</li>\n<li>拓展+webview方式实现</li>\n<li>Vs Code读取文件，把路径传递给Webview处理</li>\n</ul>\n<h2 id=\"方案拟定\"><a href=\"#方案拟定\" class=\"headerlink\" title=\"方案拟定\"></a>方案拟定</h2><ul>\n<li>无论打开哪个文件结尾，都有个问题，可能误判，因为这几个文件在其他业务中也有存在，所以更好的方案是右键文件夹，让用户手动指定来预览</li>\n<li>在package.json中指定：右键文件夹的时候开启指令，显示【播放spine】<br><img src=\"/img/spine/image-1.png\" alt=\"alt text\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;explorer/context&quot;: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;command&quot;: &quot;spine.preview&quot;,</span><br><span class=\"line\">    &quot;group&quot;: &quot;navigation&quot;,</span><br><span class=\"line\">    &quot;when&quot;: &quot;explorerResourceIsFolder&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"拓展-webview方式实现\"><a href=\"#拓展-webview方式实现\" class=\"headerlink\" title=\"拓展+webview方式实现\"></a>拓展+webview方式实现</h2><table>\n<thead>\n<tr>\n<th>步骤</th>\n<th>操作内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>方案确定</td>\n</tr>\n<tr>\n<td>2</td>\n<td>读取右键目录<br> - 要求目录同时包含 <code>.json</code>、<code>.atlas</code>、<code>.png</code> 文件<br> - 读取这三个文件</td>\n</tr>\n<tr>\n<td>3</td>\n<td>传递文件给webview处理</td>\n</tr>\n</tbody></table>\n<ul>\n<li><h3 id=\"读取文件\"><a href=\"#读取文件\" class=\"headerlink\" title=\"读取文件\"></a>读取文件</h3></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> // 获取文件的基本信息</span><br><span class=\"line\">const filePath = uri.fsPath;</span><br><span class=\"line\">const jsonFiles: string[] = [];</span><br><span class=\"line\">const atlasFiles: string[] = [];</span><br><span class=\"line\"></span><br><span class=\"line\">// 遍历文件夹，找出 JSON 和 ATLAS 文件</span><br><span class=\"line\">function traverseDir(dir: string) &#123;</span><br><span class=\"line\">  const files = fs.readdirSync(dir);</span><br><span class=\"line\">  files.forEach((file: any) =&gt; &#123;</span><br><span class=\"line\">    const filePath = path.join(dir, file);</span><br><span class=\"line\">    const stats = fs.statSync(filePath);</span><br><span class=\"line\">    if (stats.isDirectory()) &#123;</span><br><span class=\"line\">      traverseDir(filePath);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      const ext = path.extname(file);</span><br><span class=\"line\">      if (ext === &quot;.json&quot;) &#123;</span><br><span class=\"line\">        jsonFiles.push(filePath);</span><br><span class=\"line\">      &#125; else if (ext === &quot;.atlas&quot;) &#123;</span><br><span class=\"line\">        atlasFiles.push(filePath);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">traverseDir(filePath);</span><br><span class=\"line\">// 简单选择第一个匹配的 JSON 和 ATLAS 文件（实际可优化为用户选择）</span><br><span class=\"line\">const jsonPath = jsonFiles[0];</span><br><span class=\"line\">const atlasPath = atlasFiles.find(</span><br><span class=\"line\">  (atlas) =&gt;</span><br><span class=\"line\">    path.basename(atlas, &quot;.atlas&quot;) === path.basename(jsonPath, &quot;.json&quot;)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h5 id=\"如果没有匹配到文件，提示错误\"><a href=\"#如果没有匹配到文件，提示错误\" class=\"headerlink\" title=\"如果没有匹配到文件，提示错误\"></a>如果没有匹配到文件，提示错误</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (jsonPath &amp;&amp; atlasPath)&#123;</span><br><span class=\"line\">  // 正常处理</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">  vscode.window.showErrorMessage(</span><br><span class=\"line\">    &quot;在文件夹中未找到匹配的 Spine JSON 和 ATLAS 文件。&quot;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"webview拿到文件后，使用pixi-js-pixi-spine来处理播放功能\"><a href=\"#webview拿到文件后，使用pixi-js-pixi-spine来处理播放功能\" class=\"headerlink\" title=\"webview拿到文件后，使用pixi.js+pixi-spine来处理播放功能\"></a>webview拿到文件后，使用pixi.js+pixi-spine来处理播放功能</h3></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>步骤</th>\n<th>操作内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>监听消息，拿到json和atlas，其实pixi-spine只需要json就好，还有其他版本的spine-pixi-v7需要atlas</td>\n</tr>\n<tr>\n<td>2</td>\n<td>初始化pixi和spine，读取所有动画，默认给播放第一个动画</td>\n</tr>\n<tr>\n<td>3</td>\n<td>读取动画信息，方便直接查看</td>\n</tr>\n</tbody></table>\n<ul>\n<li>监听来自扩展的消息<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 监听来自扩展的消息</span><br><span class=\"line\">window.addEventListener(&quot;message&quot;, (event) =&gt; &#123;</span><br><span class=\"line\">  const message = event.data;</span><br><span class=\"line\">  // console.log(&#x27;message--&#x27;, event.data);</span><br><span class=\"line\">  if (message.type === &quot;loadFile&quot;) &#123;</span><br><span class=\"line\">    init(message.json, message.atlas).catch((err) =&gt; &#123;</span><br><span class=\"line\">      console.log(&quot;onError&quot;, err);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li>初始化pixi和spine<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function init(json, atlas) &#123;</span><br><span class=\"line\">  // app = new window.PIXI.Application();</span><br><span class=\"line\">  // console.log(&quot;app&quot;, app, window.spine);</span><br><span class=\"line\">  // await app.init(&#123;</span><br><span class=\"line\">  //   // backgroundColor: 0x1099bb,</span><br><span class=\"line\">  //   backgroundAlpha: 0,</span><br><span class=\"line\">  //   resizeTo: window,</span><br><span class=\"line\">  //   antialias: true,</span><br><span class=\"line\">  //   autoDensity: true,</span><br><span class=\"line\">  // &#125;);</span><br><span class=\"line\">  app = new window.PIXI.Application(&#123;</span><br><span class=\"line\">    backgroundAlpha: 0,</span><br><span class=\"line\">    resizeTo: window,</span><br><span class=\"line\">    antialias: true,</span><br><span class=\"line\">    autoDensity: true,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  document.getElementById(&quot;animation-player&quot;).appendChild(this.app.view);</span><br><span class=\"line\">  playSpine(json, atlas);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>播放spine，获取动画信息<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function playSpine(json, atlas) &#123;</span><br><span class=\"line\">  // // pixi8 加载 Spine 资源</span><br><span class=\"line\">  // PIXI.Assets.add(&#123;</span><br><span class=\"line\">  //   alias: &quot;spineData&quot;,</span><br><span class=\"line\">  //   src: json,</span><br><span class=\"line\">  // &#125;);</span><br><span class=\"line\">  // PIXI.Assets.add(&#123;</span><br><span class=\"line\">  //   alias: &quot;spineAtlas&quot;,</span><br><span class=\"line\">  //   src: atlas,</span><br><span class=\"line\">  // &#125;);</span><br><span class=\"line\">  // await PIXI.Assets.load([&quot;spineData&quot;, &quot;spineAtlas&quot;]);</span><br><span class=\"line\"></span><br><span class=\"line\">  // const spineBody = window.spine.Spine.from(&#123;</span><br><span class=\"line\">  //   atlas: &quot;spineAtlas&quot;,</span><br><span class=\"line\">  //   skeleton: &quot;spineData&quot;,</span><br><span class=\"line\">  //   scale: 0.5,</span><br><span class=\"line\">  // &#125;);</span><br><span class=\"line\">  const res = await PIXI.Assets.load(json);</span><br><span class=\"line\">  const spineBody = new PIXI.spine.Spine(res.spineData);</span><br><span class=\"line\">  spineBody.state.data.defaultMix = 0.2;</span><br><span class=\"line\">  spineBody.x = window.innerWidth / 2;</span><br><span class=\"line\">  app.stage.addChild(spineBody);</span><br><span class=\"line\">  // 获取 Spine 动画的宽高</span><br><span class=\"line\">  setTimeout(() =&gt; &#123;</span><br><span class=\"line\">    const spineInfo = spineBody.getBounds();</span><br><span class=\"line\">    spineBody.y = window.innerHeight / 2 + +spineInfo.height / 2;</span><br><span class=\"line\">    const width = spineInfo.width;</span><br><span class=\"line\">    const height = spineInfo.height;</span><br><span class=\"line\">    console.log(&quot;spineInfo&quot;, spineBody.getBounds(), spineBody);</span><br><span class=\"line\">    console.table(&#123;</span><br><span class=\"line\">      width: spineBody.width,</span><br><span class=\"line\">      height: spineBody.height,</span><br><span class=\"line\">      x: spineBody.x,</span><br><span class=\"line\">      y: spineBody.y,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    // 获取 Spine 要求的版本</span><br><span class=\"line\">    const spineVersion = spineBody.stateData.skeletonData.version;</span><br><span class=\"line\">    console.log(&quot;Spine 要求的版本:&quot;, spineVersion);</span><br><span class=\"line\">    console.log(&quot;所有动画&quot;, spineBody.skeleton.data.animations);</span><br><span class=\"line\">    // 更新spine信息</span><br><span class=\"line\">    const infoDiv = document.getElementById(&quot;normal-info&quot;);</span><br><span class=\"line\">    infoDiv.innerHTML = `</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;width: &lt;/span&gt;$&#123;width&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;height: &lt;/span&gt;$&#123;height&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;x: &lt;/span&gt;$&#123;spineInfo.x&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;y: &lt;/span&gt;$&#123;spineInfo.y&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;version: &lt;/span&gt;$&#123;spineVersion&#125;&lt;/div&gt;</span><br><span class=\"line\">    `;</span><br><span class=\"line\">  &#125;, 0);</span><br><span class=\"line\">  getAllAnimations(spineBody);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>获取所有动画，添加到选择框，方便用户选择任意动画播放<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function getAllAnimations(spineBody) &#123;</span><br><span class=\"line\">  // 获取所有动画名称</span><br><span class=\"line\">  const duration = document.querySelector(&quot;.duration&quot;);</span><br><span class=\"line\">  const animations = spineBody.skeleton.data.animations;</span><br><span class=\"line\">  const animationNames = [];</span><br><span class=\"line\">  animations.forEach((animation) =&gt; &#123;</span><br><span class=\"line\">    animationNames.push(animation.name);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  // 创建 select 选择框</span><br><span class=\"line\">  const selector = document.getElementById(&quot;animationSelector&quot;);</span><br><span class=\"line\">  animationNames.forEach((name) =&gt; &#123;</span><br><span class=\"line\">    const option = document.createElement(&quot;option&quot;);</span><br><span class=\"line\">    option.value = name;</span><br><span class=\"line\">    option.textContent = name;</span><br><span class=\"line\">    selector.appendChild(option);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  // 播放第一个动画</span><br><span class=\"line\">  if (animationNames.length &gt; 0) &#123;</span><br><span class=\"line\">    spineBody.state.setAnimation(0, animationNames[0], true);</span><br><span class=\"line\">    duration.innerHTML = `&lt;span&gt;duration: &lt;/span&gt;$&#123;animations[0].duration&#125;`;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // 监听选择事件</span><br><span class=\"line\">  selector.addEventListener(&quot;change&quot;, (event) =&gt; &#123;</span><br><span class=\"line\">    const selectedAnimation = event.target.value;</span><br><span class=\"line\">    spineBody.state.setAnimation(0, selectedAnimation, true);</span><br><span class=\"line\">    const r = animations.find((k) =&gt; k.name == selectedAnimation);</span><br><span class=\"line\">    duration.innerHTML = `&lt;span&gt;duration: &lt;/span&gt;$&#123;r.duration&#125;`;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  setSpineY(spineBody);</span><br><span class=\"line\">  setScale(spineBody);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"源码开放，期待共探\"><a href=\"#源码开放，期待共探\" class=\"headerlink\" title=\"源码开放，期待共探\"></a>源码开放，期待共探</h3><p>👉 <a href=\"https://github.com/lantianhaijiao/spine-preview\">spine - preview源码</a> 👈</p>\n","excerpt":"","more":"<hr>\n<blockquote>\n<p>在前一篇关于VS Code拓展开发的文章中，我们已详细探讨了拓展开发的完整流程。那么，此次我们将直接切入重点——Spine动画预览功能的实现。</p>\n</blockquote>\n<h2 id=\"如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi-js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。\"><a href=\"#如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi-js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。\" class=\"headerlink\" title=\"如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi.js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。\"></a>如今，能够播放Spine动画的引擎种类繁多，诸如Cocos、Pixi、Unity、Galacean、Phaser等等。在本次开发的拓展中，我们选用了Pixi.js引擎来达成Spine动画的预览效果，接下来就为大家详细道来。</h2><h2 id=\"Spine动画文件预览商店地址\"><a href=\"#Spine动画文件预览商店地址\" class=\"headerlink\" title=\"Spine动画文件预览商店地址\"></a>Spine动画文件预览商店地址</h2><blockquote>\n<p><a href=\"https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.spine-preview\">https://marketplace.visualstudio.com/items?itemName=lantianhaijiao.spine-preview</a></p>\n</blockquote>\n<h2 id=\"下面进行功能实现流程介绍，流程大致分为如下几个步骤\"><a href=\"#下面进行功能实现流程介绍，流程大致分为如下几个步骤\" class=\"headerlink\" title=\"下面进行功能实现流程介绍，流程大致分为如下几个步骤\"></a>下面进行功能实现流程介绍，流程大致分为如下几个步骤</h2><ul>\n<li>方案拟定：spine有三个文件,一般为.json,.atlas(或者.atlas.txt),.png，那么选中哪个文件进行预览呢?</li>\n<li>拓展+webview方式实现</li>\n<li>Vs Code读取文件，把路径传递给Webview处理</li>\n</ul>\n<h2 id=\"方案拟定\"><a href=\"#方案拟定\" class=\"headerlink\" title=\"方案拟定\"></a>方案拟定</h2><ul>\n<li>无论打开哪个文件结尾，都有个问题，可能误判，因为这几个文件在其他业务中也有存在，所以更好的方案是右键文件夹，让用户手动指定来预览</li>\n<li>在package.json中指定：右键文件夹的时候开启指令，显示【播放spine】<br><img src=\"/img/spine/image-1.png\" alt=\"alt text\"><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;explorer/context&quot;: [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;command&quot;: &quot;spine.preview&quot;,</span><br><span class=\"line\">    &quot;group&quot;: &quot;navigation&quot;,</span><br><span class=\"line\">    &quot;when&quot;: &quot;explorerResourceIsFolder&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"拓展-webview方式实现\"><a href=\"#拓展-webview方式实现\" class=\"headerlink\" title=\"拓展+webview方式实现\"></a>拓展+webview方式实现</h2><table>\n<thead>\n<tr>\n<th>步骤</th>\n<th>操作内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>方案确定</td>\n</tr>\n<tr>\n<td>2</td>\n<td>读取右键目录<br> - 要求目录同时包含 <code>.json</code>、<code>.atlas</code>、<code>.png</code> 文件<br> - 读取这三个文件</td>\n</tr>\n<tr>\n<td>3</td>\n<td>传递文件给webview处理</td>\n</tr>\n</tbody></table>\n<ul>\n<li><h3 id=\"读取文件\"><a href=\"#读取文件\" class=\"headerlink\" title=\"读取文件\"></a>读取文件</h3></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> // 获取文件的基本信息</span><br><span class=\"line\">const filePath = uri.fsPath;</span><br><span class=\"line\">const jsonFiles: string[] = [];</span><br><span class=\"line\">const atlasFiles: string[] = [];</span><br><span class=\"line\"></span><br><span class=\"line\">// 遍历文件夹，找出 JSON 和 ATLAS 文件</span><br><span class=\"line\">function traverseDir(dir: string) &#123;</span><br><span class=\"line\">  const files = fs.readdirSync(dir);</span><br><span class=\"line\">  files.forEach((file: any) =&gt; &#123;</span><br><span class=\"line\">    const filePath = path.join(dir, file);</span><br><span class=\"line\">    const stats = fs.statSync(filePath);</span><br><span class=\"line\">    if (stats.isDirectory()) &#123;</span><br><span class=\"line\">      traverseDir(filePath);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      const ext = path.extname(file);</span><br><span class=\"line\">      if (ext === &quot;.json&quot;) &#123;</span><br><span class=\"line\">        jsonFiles.push(filePath);</span><br><span class=\"line\">      &#125; else if (ext === &quot;.atlas&quot;) &#123;</span><br><span class=\"line\">        atlasFiles.push(filePath);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">traverseDir(filePath);</span><br><span class=\"line\">// 简单选择第一个匹配的 JSON 和 ATLAS 文件（实际可优化为用户选择）</span><br><span class=\"line\">const jsonPath = jsonFiles[0];</span><br><span class=\"line\">const atlasPath = atlasFiles.find(</span><br><span class=\"line\">  (atlas) =&gt;</span><br><span class=\"line\">    path.basename(atlas, &quot;.atlas&quot;) === path.basename(jsonPath, &quot;.json&quot;)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h5 id=\"如果没有匹配到文件，提示错误\"><a href=\"#如果没有匹配到文件，提示错误\" class=\"headerlink\" title=\"如果没有匹配到文件，提示错误\"></a>如果没有匹配到文件，提示错误</h5><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (jsonPath &amp;&amp; atlasPath)&#123;</span><br><span class=\"line\">  // 正常处理</span><br><span class=\"line\">&#125; else &#123;</span><br><span class=\"line\">  vscode.window.showErrorMessage(</span><br><span class=\"line\">    &quot;在文件夹中未找到匹配的 Spine JSON 和 ATLAS 文件。&quot;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><h3 id=\"webview拿到文件后，使用pixi-js-pixi-spine来处理播放功能\"><a href=\"#webview拿到文件后，使用pixi-js-pixi-spine来处理播放功能\" class=\"headerlink\" title=\"webview拿到文件后，使用pixi.js+pixi-spine来处理播放功能\"></a>webview拿到文件后，使用pixi.js+pixi-spine来处理播放功能</h3></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>步骤</th>\n<th>操作内容</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>1</td>\n<td>监听消息，拿到json和atlas，其实pixi-spine只需要json就好，还有其他版本的spine-pixi-v7需要atlas</td>\n</tr>\n<tr>\n<td>2</td>\n<td>初始化pixi和spine，读取所有动画，默认给播放第一个动画</td>\n</tr>\n<tr>\n<td>3</td>\n<td>读取动画信息，方便直接查看</td>\n</tr>\n</tbody></table>\n<ul>\n<li>监听来自扩展的消息<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 监听来自扩展的消息</span><br><span class=\"line\">window.addEventListener(&quot;message&quot;, (event) =&gt; &#123;</span><br><span class=\"line\">  const message = event.data;</span><br><span class=\"line\">  // console.log(&#x27;message--&#x27;, event.data);</span><br><span class=\"line\">  if (message.type === &quot;loadFile&quot;) &#123;</span><br><span class=\"line\">    init(message.json, message.atlas).catch((err) =&gt; &#123;</span><br><span class=\"line\">      console.log(&quot;onError&quot;, err);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></li>\n<li>初始化pixi和spine<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function init(json, atlas) &#123;</span><br><span class=\"line\">  // app = new window.PIXI.Application();</span><br><span class=\"line\">  // console.log(&quot;app&quot;, app, window.spine);</span><br><span class=\"line\">  // await app.init(&#123;</span><br><span class=\"line\">  //   // backgroundColor: 0x1099bb,</span><br><span class=\"line\">  //   backgroundAlpha: 0,</span><br><span class=\"line\">  //   resizeTo: window,</span><br><span class=\"line\">  //   antialias: true,</span><br><span class=\"line\">  //   autoDensity: true,</span><br><span class=\"line\">  // &#125;);</span><br><span class=\"line\">  app = new window.PIXI.Application(&#123;</span><br><span class=\"line\">    backgroundAlpha: 0,</span><br><span class=\"line\">    resizeTo: window,</span><br><span class=\"line\">    antialias: true,</span><br><span class=\"line\">    autoDensity: true,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  document.getElementById(&quot;animation-player&quot;).appendChild(this.app.view);</span><br><span class=\"line\">  playSpine(json, atlas);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>播放spine，获取动画信息<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function playSpine(json, atlas) &#123;</span><br><span class=\"line\">  // // pixi8 加载 Spine 资源</span><br><span class=\"line\">  // PIXI.Assets.add(&#123;</span><br><span class=\"line\">  //   alias: &quot;spineData&quot;,</span><br><span class=\"line\">  //   src: json,</span><br><span class=\"line\">  // &#125;);</span><br><span class=\"line\">  // PIXI.Assets.add(&#123;</span><br><span class=\"line\">  //   alias: &quot;spineAtlas&quot;,</span><br><span class=\"line\">  //   src: atlas,</span><br><span class=\"line\">  // &#125;);</span><br><span class=\"line\">  // await PIXI.Assets.load([&quot;spineData&quot;, &quot;spineAtlas&quot;]);</span><br><span class=\"line\"></span><br><span class=\"line\">  // const spineBody = window.spine.Spine.from(&#123;</span><br><span class=\"line\">  //   atlas: &quot;spineAtlas&quot;,</span><br><span class=\"line\">  //   skeleton: &quot;spineData&quot;,</span><br><span class=\"line\">  //   scale: 0.5,</span><br><span class=\"line\">  // &#125;);</span><br><span class=\"line\">  const res = await PIXI.Assets.load(json);</span><br><span class=\"line\">  const spineBody = new PIXI.spine.Spine(res.spineData);</span><br><span class=\"line\">  spineBody.state.data.defaultMix = 0.2;</span><br><span class=\"line\">  spineBody.x = window.innerWidth / 2;</span><br><span class=\"line\">  app.stage.addChild(spineBody);</span><br><span class=\"line\">  // 获取 Spine 动画的宽高</span><br><span class=\"line\">  setTimeout(() =&gt; &#123;</span><br><span class=\"line\">    const spineInfo = spineBody.getBounds();</span><br><span class=\"line\">    spineBody.y = window.innerHeight / 2 + +spineInfo.height / 2;</span><br><span class=\"line\">    const width = spineInfo.width;</span><br><span class=\"line\">    const height = spineInfo.height;</span><br><span class=\"line\">    console.log(&quot;spineInfo&quot;, spineBody.getBounds(), spineBody);</span><br><span class=\"line\">    console.table(&#123;</span><br><span class=\"line\">      width: spineBody.width,</span><br><span class=\"line\">      height: spineBody.height,</span><br><span class=\"line\">      x: spineBody.x,</span><br><span class=\"line\">      y: spineBody.y,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    // 获取 Spine 要求的版本</span><br><span class=\"line\">    const spineVersion = spineBody.stateData.skeletonData.version;</span><br><span class=\"line\">    console.log(&quot;Spine 要求的版本:&quot;, spineVersion);</span><br><span class=\"line\">    console.log(&quot;所有动画&quot;, spineBody.skeleton.data.animations);</span><br><span class=\"line\">    // 更新spine信息</span><br><span class=\"line\">    const infoDiv = document.getElementById(&quot;normal-info&quot;);</span><br><span class=\"line\">    infoDiv.innerHTML = `</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;width: &lt;/span&gt;$&#123;width&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;height: &lt;/span&gt;$&#123;height&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;x: &lt;/span&gt;$&#123;spineInfo.x&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;y: &lt;/span&gt;$&#123;spineInfo.y&#125;&lt;/div&gt;</span><br><span class=\"line\">      &lt;div class=&#x27;item&#x27;&gt;&lt;span&gt;version: &lt;/span&gt;$&#123;spineVersion&#125;&lt;/div&gt;</span><br><span class=\"line\">    `;</span><br><span class=\"line\">  &#125;, 0);</span><br><span class=\"line\">  getAllAnimations(spineBody);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>获取所有动画，添加到选择框，方便用户选择任意动画播放<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">async function getAllAnimations(spineBody) &#123;</span><br><span class=\"line\">  // 获取所有动画名称</span><br><span class=\"line\">  const duration = document.querySelector(&quot;.duration&quot;);</span><br><span class=\"line\">  const animations = spineBody.skeleton.data.animations;</span><br><span class=\"line\">  const animationNames = [];</span><br><span class=\"line\">  animations.forEach((animation) =&gt; &#123;</span><br><span class=\"line\">    animationNames.push(animation.name);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  // 创建 select 选择框</span><br><span class=\"line\">  const selector = document.getElementById(&quot;animationSelector&quot;);</span><br><span class=\"line\">  animationNames.forEach((name) =&gt; &#123;</span><br><span class=\"line\">    const option = document.createElement(&quot;option&quot;);</span><br><span class=\"line\">    option.value = name;</span><br><span class=\"line\">    option.textContent = name;</span><br><span class=\"line\">    selector.appendChild(option);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  // 播放第一个动画</span><br><span class=\"line\">  if (animationNames.length &gt; 0) &#123;</span><br><span class=\"line\">    spineBody.state.setAnimation(0, animationNames[0], true);</span><br><span class=\"line\">    duration.innerHTML = `&lt;span&gt;duration: &lt;/span&gt;$&#123;animations[0].duration&#125;`;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // 监听选择事件</span><br><span class=\"line\">  selector.addEventListener(&quot;change&quot;, (event) =&gt; &#123;</span><br><span class=\"line\">    const selectedAnimation = event.target.value;</span><br><span class=\"line\">    spineBody.state.setAnimation(0, selectedAnimation, true);</span><br><span class=\"line\">    const r = animations.find((k) =&gt; k.name == selectedAnimation);</span><br><span class=\"line\">    duration.innerHTML = `&lt;span&gt;duration: &lt;/span&gt;$&#123;r.duration&#125;`;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  setSpineY(spineBody);</span><br><span class=\"line\">  setScale(spineBody);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"源码开放，期待共探\"><a href=\"#源码开放，期待共探\" class=\"headerlink\" title=\"源码开放，期待共探\"></a>源码开放，期待共探</h3><p>👉 <a href=\"https://github.com/lantianhaijiao/spine-preview\">spine - preview源码</a> 👈</p>\n"},{"title":"踩坑记","date":"2024-03-14T12:18:13.000Z","cover":"/img/common/t4.jpeg","_content":"# 持续更新\n\n## Cookie在部分ios上设置值失效\n```\nCookies.set(luckyKey, { expires: 1 }); // ❌\nCookies.set(luckyKey, 1, { expires: 1 }); // ✅\n```\n--------------------------------------------------------------------------------\n## Video自定义 播放按钮层级问题\nQ: 播放按钮在部分ios手机上点击播放后会在下层(已设置z-index)\nA: 给video标签设置position, 此时产生了一个问题，点击播放后，会闪几下(应该是封面和视频的间隙)，解决闪烁可以去掉封面，使用div背景做封面解决\nQ: 有的ios手机会出现播放按钮(h5无此图标,应该是webview渲染的)\nA: 监听视频播放状态，视频播放的时候再显示video\n\n--------------------------------------------------------------------------------\n## swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)\nQ: 使用了swiper轮播插件，在高版本ios上多个swiper-item时，中间的translate3d z轴出现负数,导致层级在下边，整个swiper-item无法点击\nA: 强制设置z轴为0\n.swiper-slide{\n  &.swiper-slide-active{\n    transform: translate3d(0px, 0px, 0px) rotateX(0deg) rotateY(0deg) scale(1) !important;\n  }\n}\n\n--------------------------------------------------------------------------------\n## h5在iOS点击出现的高亮黑色背景层\n-webkit-tap-highlight-color:transparent;\n-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\ntap-highlight-color: rgba(0, 0, 0, 0);\n\n--------------------------------------------------------------------------------\n## html内动态引入图片\nbackgroundImage: item.gold ? `url(${require(`../../web-sync/img/ball/${item.gold}.png`)})` : ''\n\n## swiper自适应高度,降低滑动灵敏度\n:autoHeight=\"true\" // 自适应高度\n:touchRatio=\"0.2\" // 降低滑动灵敏度\n如何把内容加到页码(swiper-pagination)和swiper-slide中间\n```\nconst pagination = {\n  el: '.swiper-pagination',\n  clickable: true,\n  renderBullet: function (index, className) {\n    return '<span class=\"' + className + '\"></span>';\n  },\n}\n```\n\n## 类似stroke效果,使用shadow\n```\ntext-shadow: #FF7E5E 1px 0 0,#FF7E5E 0 1px 0,#FF7E5E -1px 0 0,#FF7E5E 0 -1px 0;\n```\n## animation动画抖动\nQ: animation动画(大小会变), 在ios上和相邻定位元素出现层级错乱频闪\nA: 给父元素设置overflow:hidden;\n\n--------------------------------------------------------------------------------\n## css动画函数复用\nQ: 相同动画，不同的结束位置,复用同一个keyframes, \n\n一个列表，每个元素有transform属性，想透传给@keyframes\n```\n@keyframes fadeInTopRight {\n  from {\n    opacity: 0;\n    transform: translate3d(375px, -1200px, 0);\n  }\n  to {\n    opacity: 1;\n    transform:  translate3d(100%, 100%, 0);\n  }\n}\n```\nA:\n>https://www.cnblogs.com/coco1s/p/17186878.html\n\n将结束动画设置获取变量，但是变量是每个item的变量\nvue\n\n```\n<bet-icon\n  :num=\"k.num\"\n  v-for=\"k in currentBetting[item]\"\n  :key=\"k.id\"\n  :style=\"{\n    transform: k.transform,\n    animationDuring: k.animationDuring,\n    animationDelay: k.animationDelay,\n    zIndex: k.zIndex,\n    '--end': k.end\n  }\"\n  :class=\"{self: k.self}\"\n  ></bet-icon>\n```\ncss\n\n```\n@keyframes fadeInTopRight {\n  from {\n    opacity: 0;\n    transform: translate3d(375px, -1200px, 0);\n  }\n  to {\n    opacity: 1;\n    transform:  var(--end);\n  }\n}\n```\n--------------------------------------------------------------------------------","source":"_posts/pitfall-diary.md","raw":"---\ntitle: 踩坑记\ndate: 2024-03-14 20:18:13\ntags:\ncover: /img/common/t4.jpeg\n---\n# 持续更新\n\n## Cookie在部分ios上设置值失效\n```\nCookies.set(luckyKey, { expires: 1 }); // ❌\nCookies.set(luckyKey, 1, { expires: 1 }); // ✅\n```\n--------------------------------------------------------------------------------\n## Video自定义 播放按钮层级问题\nQ: 播放按钮在部分ios手机上点击播放后会在下层(已设置z-index)\nA: 给video标签设置position, 此时产生了一个问题，点击播放后，会闪几下(应该是封面和视频的间隙)，解决闪烁可以去掉封面，使用div背景做封面解决\nQ: 有的ios手机会出现播放按钮(h5无此图标,应该是webview渲染的)\nA: 监听视频播放状态，视频播放的时候再显示video\n\n--------------------------------------------------------------------------------\n## swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)\nQ: 使用了swiper轮播插件，在高版本ios上多个swiper-item时，中间的translate3d z轴出现负数,导致层级在下边，整个swiper-item无法点击\nA: 强制设置z轴为0\n.swiper-slide{\n  &.swiper-slide-active{\n    transform: translate3d(0px, 0px, 0px) rotateX(0deg) rotateY(0deg) scale(1) !important;\n  }\n}\n\n--------------------------------------------------------------------------------\n## h5在iOS点击出现的高亮黑色背景层\n-webkit-tap-highlight-color:transparent;\n-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\ntap-highlight-color: rgba(0, 0, 0, 0);\n\n--------------------------------------------------------------------------------\n## html内动态引入图片\nbackgroundImage: item.gold ? `url(${require(`../../web-sync/img/ball/${item.gold}.png`)})` : ''\n\n## swiper自适应高度,降低滑动灵敏度\n:autoHeight=\"true\" // 自适应高度\n:touchRatio=\"0.2\" // 降低滑动灵敏度\n如何把内容加到页码(swiper-pagination)和swiper-slide中间\n```\nconst pagination = {\n  el: '.swiper-pagination',\n  clickable: true,\n  renderBullet: function (index, className) {\n    return '<span class=\"' + className + '\"></span>';\n  },\n}\n```\n\n## 类似stroke效果,使用shadow\n```\ntext-shadow: #FF7E5E 1px 0 0,#FF7E5E 0 1px 0,#FF7E5E -1px 0 0,#FF7E5E 0 -1px 0;\n```\n## animation动画抖动\nQ: animation动画(大小会变), 在ios上和相邻定位元素出现层级错乱频闪\nA: 给父元素设置overflow:hidden;\n\n--------------------------------------------------------------------------------\n## css动画函数复用\nQ: 相同动画，不同的结束位置,复用同一个keyframes, \n\n一个列表，每个元素有transform属性，想透传给@keyframes\n```\n@keyframes fadeInTopRight {\n  from {\n    opacity: 0;\n    transform: translate3d(375px, -1200px, 0);\n  }\n  to {\n    opacity: 1;\n    transform:  translate3d(100%, 100%, 0);\n  }\n}\n```\nA:\n>https://www.cnblogs.com/coco1s/p/17186878.html\n\n将结束动画设置获取变量，但是变量是每个item的变量\nvue\n\n```\n<bet-icon\n  :num=\"k.num\"\n  v-for=\"k in currentBetting[item]\"\n  :key=\"k.id\"\n  :style=\"{\n    transform: k.transform,\n    animationDuring: k.animationDuring,\n    animationDelay: k.animationDelay,\n    zIndex: k.zIndex,\n    '--end': k.end\n  }\"\n  :class=\"{self: k.self}\"\n  ></bet-icon>\n```\ncss\n\n```\n@keyframes fadeInTopRight {\n  from {\n    opacity: 0;\n    transform: translate3d(375px, -1200px, 0);\n  }\n  to {\n    opacity: 1;\n    transform:  var(--end);\n  }\n}\n```\n--------------------------------------------------------------------------------","slug":"pitfall-diary","published":1,"updated":"2025-04-14T01:41:21.712Z","comments":1,"layout":"post","photos":[],"_id":"cma39gdzq00058rdn7tfm4mz8","content":"<h1 id=\"持续更新\"><a href=\"#持续更新\" class=\"headerlink\" title=\"持续更新\"></a>持续更新</h1><h2 id=\"Cookie在部分ios上设置值失效\"><a href=\"#Cookie在部分ios上设置值失效\" class=\"headerlink\" title=\"Cookie在部分ios上设置值失效\"></a>Cookie在部分ios上设置值失效</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookies.set(luckyKey, &#123; expires: 1 &#125;); // ❌</span><br><span class=\"line\">Cookies.set(luckyKey, 1, &#123; expires: 1 &#125;); // ✅</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"Video自定义-播放按钮层级问题\"><a href=\"#Video自定义-播放按钮层级问题\" class=\"headerlink\" title=\"Video自定义 播放按钮层级问题\"></a>Video自定义 播放按钮层级问题</h2><p>Q: 播放按钮在部分ios手机上点击播放后会在下层(已设置z-index)<br>A: 给video标签设置position, 此时产生了一个问题，点击播放后，会闪几下(应该是封面和视频的间隙)，解决闪烁可以去掉封面，使用div背景做封面解决<br>Q: 有的ios手机会出现播放按钮(h5无此图标,应该是webview渲染的)<br>A: 监听视频播放状态，视频播放的时候再显示video</p>\n<hr>\n<h2 id=\"swiper插件-在ios高版本上item内的所有内容无法点击-复现机型-iphone-14-pro-max-17-x\"><a href=\"#swiper插件-在ios高版本上item内的所有内容无法点击-复现机型-iphone-14-pro-max-17-x\" class=\"headerlink\" title=\"swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)\"></a>swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)</h2><p>Q: 使用了swiper轮播插件，在高版本ios上多个swiper-item时，中间的translate3d z轴出现负数,导致层级在下边，整个swiper-item无法点击<br>A: 强制设置z轴为0<br>.swiper-slide{<br>  &amp;.swiper-slide-active{<br>    transform: translate3d(0px, 0px, 0px) rotateX(0deg) rotateY(0deg) scale(1) !important;<br>  }<br>}</p>\n<hr>\n<h2 id=\"h5在iOS点击出现的高亮黑色背景层\"><a href=\"#h5在iOS点击出现的高亮黑色背景层\" class=\"headerlink\" title=\"h5在iOS点击出现的高亮黑色背景层\"></a>h5在iOS点击出现的高亮黑色背景层</h2><p>-webkit-tap-highlight-color:transparent;<br>-webkit-tap-highlight-color: rgba(0, 0, 0, 0);<br>tap-highlight-color: rgba(0, 0, 0, 0);</p>\n<hr>\n<h2 id=\"html内动态引入图片\"><a href=\"#html内动态引入图片\" class=\"headerlink\" title=\"html内动态引入图片\"></a>html内动态引入图片</h2><p>backgroundImage: item.gold ? <code>url($&#123;require(</code>..&#x2F;..&#x2F;web-sync&#x2F;img&#x2F;ball&#x2F;${item.gold}.png<code>)&#125;)</code> : ‘’</p>\n<h2 id=\"swiper自适应高度-降低滑动灵敏度\"><a href=\"#swiper自适应高度-降低滑动灵敏度\" class=\"headerlink\" title=\"swiper自适应高度,降低滑动灵敏度\"></a>swiper自适应高度,降低滑动灵敏度</h2><p>:autoHeight&#x3D;”true” &#x2F;&#x2F; 自适应高度<br>:touchRatio&#x3D;”0.2” &#x2F;&#x2F; 降低滑动灵敏度<br>如何把内容加到页码(swiper-pagination)和swiper-slide中间</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const pagination = &#123;</span><br><span class=\"line\">  el: &#x27;.swiper-pagination&#x27;,</span><br><span class=\"line\">  clickable: true,</span><br><span class=\"line\">  renderBullet: function (index, className) &#123;</span><br><span class=\"line\">    return &#x27;&lt;span class=&quot;&#x27; + className + &#x27;&quot;&gt;&lt;/span&gt;&#x27;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类似stroke效果-使用shadow\"><a href=\"#类似stroke效果-使用shadow\" class=\"headerlink\" title=\"类似stroke效果,使用shadow\"></a>类似stroke效果,使用shadow</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text-shadow: #FF7E5E 1px 0 0,#FF7E5E 0 1px 0,#FF7E5E -1px 0 0,#FF7E5E 0 -1px 0;</span><br></pre></td></tr></table></figure>\n<h2 id=\"animation动画抖动\"><a href=\"#animation动画抖动\" class=\"headerlink\" title=\"animation动画抖动\"></a>animation动画抖动</h2><p>Q: animation动画(大小会变), 在ios上和相邻定位元素出现层级错乱频闪<br>A: 给父元素设置overflow:hidden;</p>\n<hr>\n<h2 id=\"css动画函数复用\"><a href=\"#css动画函数复用\" class=\"headerlink\" title=\"css动画函数复用\"></a>css动画函数复用</h2><p>Q: 相同动画，不同的结束位置,复用同一个keyframes, </p>\n<p>一个列表，每个元素有transform属性，想透传给@keyframes</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes fadeInTopRight &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">    transform: translate3d(375px, -1200px, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">    transform:  translate3d(100%, 100%, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A:</p>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/coco1s/p/17186878.html\">https://www.cnblogs.com/coco1s/p/17186878.html</a></p>\n</blockquote>\n<p>将结束动画设置获取变量，但是变量是每个item的变量<br>vue</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;bet-icon</span><br><span class=\"line\">  :num=&quot;k.num&quot;</span><br><span class=\"line\">  v-for=&quot;k in currentBetting[item]&quot;</span><br><span class=\"line\">  :key=&quot;k.id&quot;</span><br><span class=\"line\">  :style=&quot;&#123;</span><br><span class=\"line\">    transform: k.transform,</span><br><span class=\"line\">    animationDuring: k.animationDuring,</span><br><span class=\"line\">    animationDelay: k.animationDelay,</span><br><span class=\"line\">    zIndex: k.zIndex,</span><br><span class=\"line\">    &#x27;--end&#x27;: k.end</span><br><span class=\"line\">  &#125;&quot;</span><br><span class=\"line\">  :class=&quot;&#123;self: k.self&#125;&quot;</span><br><span class=\"line\">  &gt;&lt;/bet-icon&gt;</span><br></pre></td></tr></table></figure>\n<p>css</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes fadeInTopRight &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">    transform: translate3d(375px, -1200px, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">    transform:  var(--end);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n","excerpt":"","more":"<h1 id=\"持续更新\"><a href=\"#持续更新\" class=\"headerlink\" title=\"持续更新\"></a>持续更新</h1><h2 id=\"Cookie在部分ios上设置值失效\"><a href=\"#Cookie在部分ios上设置值失效\" class=\"headerlink\" title=\"Cookie在部分ios上设置值失效\"></a>Cookie在部分ios上设置值失效</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookies.set(luckyKey, &#123; expires: 1 &#125;); // ❌</span><br><span class=\"line\">Cookies.set(luckyKey, 1, &#123; expires: 1 &#125;); // ✅</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"Video自定义-播放按钮层级问题\"><a href=\"#Video自定义-播放按钮层级问题\" class=\"headerlink\" title=\"Video自定义 播放按钮层级问题\"></a>Video自定义 播放按钮层级问题</h2><p>Q: 播放按钮在部分ios手机上点击播放后会在下层(已设置z-index)<br>A: 给video标签设置position, 此时产生了一个问题，点击播放后，会闪几下(应该是封面和视频的间隙)，解决闪烁可以去掉封面，使用div背景做封面解决<br>Q: 有的ios手机会出现播放按钮(h5无此图标,应该是webview渲染的)<br>A: 监听视频播放状态，视频播放的时候再显示video</p>\n<hr>\n<h2 id=\"swiper插件-在ios高版本上item内的所有内容无法点击-复现机型-iphone-14-pro-max-17-x\"><a href=\"#swiper插件-在ios高版本上item内的所有内容无法点击-复现机型-iphone-14-pro-max-17-x\" class=\"headerlink\" title=\"swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)\"></a>swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)</h2><p>Q: 使用了swiper轮播插件，在高版本ios上多个swiper-item时，中间的translate3d z轴出现负数,导致层级在下边，整个swiper-item无法点击<br>A: 强制设置z轴为0<br>.swiper-slide{<br>  &amp;.swiper-slide-active{<br>    transform: translate3d(0px, 0px, 0px) rotateX(0deg) rotateY(0deg) scale(1) !important;<br>  }<br>}</p>\n<hr>\n<h2 id=\"h5在iOS点击出现的高亮黑色背景层\"><a href=\"#h5在iOS点击出现的高亮黑色背景层\" class=\"headerlink\" title=\"h5在iOS点击出现的高亮黑色背景层\"></a>h5在iOS点击出现的高亮黑色背景层</h2><p>-webkit-tap-highlight-color:transparent;<br>-webkit-tap-highlight-color: rgba(0, 0, 0, 0);<br>tap-highlight-color: rgba(0, 0, 0, 0);</p>\n<hr>\n<h2 id=\"html内动态引入图片\"><a href=\"#html内动态引入图片\" class=\"headerlink\" title=\"html内动态引入图片\"></a>html内动态引入图片</h2><p>backgroundImage: item.gold ? <code>url($&#123;require(</code>..&#x2F;..&#x2F;web-sync&#x2F;img&#x2F;ball&#x2F;${item.gold}.png<code>)&#125;)</code> : ‘’</p>\n<h2 id=\"swiper自适应高度-降低滑动灵敏度\"><a href=\"#swiper自适应高度-降低滑动灵敏度\" class=\"headerlink\" title=\"swiper自适应高度,降低滑动灵敏度\"></a>swiper自适应高度,降低滑动灵敏度</h2><p>:autoHeight&#x3D;”true” &#x2F;&#x2F; 自适应高度<br>:touchRatio&#x3D;”0.2” &#x2F;&#x2F; 降低滑动灵敏度<br>如何把内容加到页码(swiper-pagination)和swiper-slide中间</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const pagination = &#123;</span><br><span class=\"line\">  el: &#x27;.swiper-pagination&#x27;,</span><br><span class=\"line\">  clickable: true,</span><br><span class=\"line\">  renderBullet: function (index, className) &#123;</span><br><span class=\"line\">    return &#x27;&lt;span class=&quot;&#x27; + className + &#x27;&quot;&gt;&lt;/span&gt;&#x27;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类似stroke效果-使用shadow\"><a href=\"#类似stroke效果-使用shadow\" class=\"headerlink\" title=\"类似stroke效果,使用shadow\"></a>类似stroke效果,使用shadow</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text-shadow: #FF7E5E 1px 0 0,#FF7E5E 0 1px 0,#FF7E5E -1px 0 0,#FF7E5E 0 -1px 0;</span><br></pre></td></tr></table></figure>\n<h2 id=\"animation动画抖动\"><a href=\"#animation动画抖动\" class=\"headerlink\" title=\"animation动画抖动\"></a>animation动画抖动</h2><p>Q: animation动画(大小会变), 在ios上和相邻定位元素出现层级错乱频闪<br>A: 给父元素设置overflow:hidden;</p>\n<hr>\n<h2 id=\"css动画函数复用\"><a href=\"#css动画函数复用\" class=\"headerlink\" title=\"css动画函数复用\"></a>css动画函数复用</h2><p>Q: 相同动画，不同的结束位置,复用同一个keyframes, </p>\n<p>一个列表，每个元素有transform属性，想透传给@keyframes</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes fadeInTopRight &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">    transform: translate3d(375px, -1200px, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">    transform:  translate3d(100%, 100%, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A:</p>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/coco1s/p/17186878.html\">https://www.cnblogs.com/coco1s/p/17186878.html</a></p>\n</blockquote>\n<p>将结束动画设置获取变量，但是变量是每个item的变量<br>vue</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;bet-icon</span><br><span class=\"line\">  :num=&quot;k.num&quot;</span><br><span class=\"line\">  v-for=&quot;k in currentBetting[item]&quot;</span><br><span class=\"line\">  :key=&quot;k.id&quot;</span><br><span class=\"line\">  :style=&quot;&#123;</span><br><span class=\"line\">    transform: k.transform,</span><br><span class=\"line\">    animationDuring: k.animationDuring,</span><br><span class=\"line\">    animationDelay: k.animationDelay,</span><br><span class=\"line\">    zIndex: k.zIndex,</span><br><span class=\"line\">    &#x27;--end&#x27;: k.end</span><br><span class=\"line\">  &#125;&quot;</span><br><span class=\"line\">  :class=&quot;&#123;self: k.self&#125;&quot;</span><br><span class=\"line\">  &gt;&lt;/bet-icon&gt;</span><br></pre></td></tr></table></figure>\n<p>css</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes fadeInTopRight &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">    transform: translate3d(375px, -1200px, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">    transform:  var(--end);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n"},{"title":"vue-cli升级vite","date":"2024-02-23T02:02:01.000Z","cover":"/img/common/t3.jpg","_content":"# vue升级2.7,关联vite升级\n> https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html\n\nvue-template-compiler@2.6.10 需要升级到2.7.16\nvite-plugin-vue2 替换为 @vitejs/plugin-vue2\nvite.createFilter is not a function\n\n需要升级vite到3.x版本，这个错误是vite与插件不兼容,查看@vitejs/plugin-vue2源码发现，引入了vite3.0\nError in render: \"ReferenceError: React is not defined\"\n需要安装@vitejs/plugin-vue-jsx\n使用vue this, vuex等\nimport { getCurrentInstance } from 'vue'\n\n// 访问vuex\nexport const useStore = () => {\n  const vm = getCurrentInstance()\n  if (!vm) throw new Error('must be called in setup')\n  console.log('vm--', vm);\n  return vm.proxy.$store\n}\n// 访问this\nexport const useCtx = () => {\n  const vm = getCurrentInstance()\n  if (!vm) throw new Error('must be called in setup')\n  return vm.proxy;\n}\n\n--------------------------------------------------------------------------------\n## 增加vite开发环境\nREADME.md\n## 新增vite dev环境\n#### 渐进升级,不影响原使用,目前保留vue-cli-service和vite共存\n#### node v14.8以上(我使用了v16)\n切换版本后需要删除node_module报包重新执行 npm install\n### 本地\nnpm run dev-vite\n#### 其他说明\ncss尽量别使用 module 这个名称,会报这么个错误,待排查\n\n```\n[vite] Internal server error: Unexpected token (1:0)\n  Plugin: vite-plugin-commonjs\n```\nbabel.config.js\n\n```\nvar npmEvent = process.env.npm_lifecycle_event;\nconsole.log('babel p', npmEvent);\nmodule.exports = {\n  presets: [\n    // https://github.com/vuejs/vue-cli/tree/master/packages/@vue/babel-preset-app\n    npmEvent === 'dev-vite' ? '@babel/preset-env' : '@vue/cli-plugin-babel/preset',\n    // '@babel/preset-env', // vite版需要安装这个\n  ],\n  'env': {\n    'development': {\n      // babel-plugin-dynamic-import-node plugin only does one thing by converting all import() to require().\n      // This plugin can significantly increase the speed of hot updates, when you have a large number of pages.\n      'plugins': ['dynamic-import-node']\n    }\n  }\n}\n```\n\npackage.json 增加脚本\n```\n\"dev-vite\": \"vite\",\n\"build-vite\": \"vite build\",\n\"preview-vite\": \"vite preview\"\n```\n\nmain.js\n```\n if (process.env.VITE) {\n   import('virtual:svg-icons-register')\n }\n ```\n // vite显示svg需要引入这个,但是在vue-cli里面引入报错,待TODO\nindex.html\n修改main.js为 type=\"module\"\n\n\nvite.config.js\n```\nimport { defineConfig } from \"vite\";\nimport commonjs from \"vite-plugin-commonjs\";\nimport ViteRequireContext from \"@originjs/vite-plugin-require-context\";\n// import viteComponents, { VuetifyResolver } from \"vite-plugin-components\";\nimport envCompatible from \"vite-plugin-env-compatible\";\n// import OptimizationPersist from \"vite-plugin-optimize-persist\";\n// import PkgConfig from \"vite-plugin-package-config\";\nimport { createSvgIconsPlugin } from \"vite-plugin-svg-icons\";\n// import { createVuePlugin } from \"vite-plugin-vue2\";\nimport vue from '@vitejs/plugin-vue2';\nimport vueJsx from '@vitejs/plugin-vue2-jsx'\n// import { viteExternalsPlugin } from 'vite-plugin-externals'\n\nimport path from \"path\";\nimport requireTransform from 'vite-plugin-require-transform';\nimport legacy from '@vitejs/plugin-legacy'\n\n// const { createVuePlugin } = require('vite-plugin-vue2')\n// const path = require('path')\nconst REPLACEMENT = `${path.resolve(__dirname, \"./src\")}/`;\nconst REPLACEMENT2 = `${path.resolve(__dirname, \"./static\")}/`;\nexport default defineConfig({\n  server: {\n    host: \"0.0.0.0\",\n    https: false,\n    port: 8080,\n    proxy: {\n    },\n    // open: true\n  },\n  resolve: {\n    alias: [\n      {\n        find: \"@/\",\n        replacement: REPLACEMENT,\n      },\n      {\n        find: \"src/\",\n        replacement: REPLACEMENT,\n      },\n      {\n        find: /^~@\\//,\n        replacement: REPLACEMENT,\n      },\n      {\n        find: '~static/',\n        replacement: REPLACEMENT2\n      },\n      {\n        find: /^~/,\n        replacement: '',\n      },\n    ],\n    extensions: [\n      \".vue\",\n      \".js\",\n      \".jsx\",\n      \".mjs\",\n      \".ts\",\n      \".tsx\",\n      \".json\",\n      \".css\",\n      \".scss\",\n    ],\n  },\n  plugins: [\n    legacy({\n      targets: ['defaults', 'ie >= 11', 'chrome 52'],\n      additionalLegacyPolyfills: ['regenerator-runtime/runtime'],\n    }),\n    // viteExternalsPlugin({\n    //   vue: 'Vue',\n    //   'vuex': 'Vuex',\n    //   'vue-router': 'VueRouter',\n    //   'element-ui':'ELEMENT'\n    // }),\n    // createVuePlugin({ jsx: true }),\n    vue(),\n    vueJsx({\n      // options are passed on to @vue/babel-preset-jsx\n    }),\n    // viteComponents({\n    //   customComponentResolvers: [VuetifyResolver()],\n    // }),\n    requireTransform({\n      fileRegex: /.js$|.vue$/\n    }),\n    createSvgIconsPlugin({\n      iconDirs: [path.resolve(__dirname, \"./src/icons/svg\")],\n      symbolId: \"icon-[dir]-[name]\",\n    }),\n    commonjs(/* options */),\n    ViteRequireContext(/* options */),\n    envCompatible(),\n    // PkgConfig(),\n    // OptimizationPersist()\n  ],\n  build: {\n    target: \"es2015\"\n  }\n});\n```\n\n","source":"_posts/vite.md","raw":"---\ntitle: vue-cli升级vite\ndate: 2024-02-23 10:02:01\ncover: /img/common/t3.jpg\ncategories: 脚手架\ntags:\n---\n# vue升级2.7,关联vite升级\n> https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html\n\nvue-template-compiler@2.6.10 需要升级到2.7.16\nvite-plugin-vue2 替换为 @vitejs/plugin-vue2\nvite.createFilter is not a function\n\n需要升级vite到3.x版本，这个错误是vite与插件不兼容,查看@vitejs/plugin-vue2源码发现，引入了vite3.0\nError in render: \"ReferenceError: React is not defined\"\n需要安装@vitejs/plugin-vue-jsx\n使用vue this, vuex等\nimport { getCurrentInstance } from 'vue'\n\n// 访问vuex\nexport const useStore = () => {\n  const vm = getCurrentInstance()\n  if (!vm) throw new Error('must be called in setup')\n  console.log('vm--', vm);\n  return vm.proxy.$store\n}\n// 访问this\nexport const useCtx = () => {\n  const vm = getCurrentInstance()\n  if (!vm) throw new Error('must be called in setup')\n  return vm.proxy;\n}\n\n--------------------------------------------------------------------------------\n## 增加vite开发环境\nREADME.md\n## 新增vite dev环境\n#### 渐进升级,不影响原使用,目前保留vue-cli-service和vite共存\n#### node v14.8以上(我使用了v16)\n切换版本后需要删除node_module报包重新执行 npm install\n### 本地\nnpm run dev-vite\n#### 其他说明\ncss尽量别使用 module 这个名称,会报这么个错误,待排查\n\n```\n[vite] Internal server error: Unexpected token (1:0)\n  Plugin: vite-plugin-commonjs\n```\nbabel.config.js\n\n```\nvar npmEvent = process.env.npm_lifecycle_event;\nconsole.log('babel p', npmEvent);\nmodule.exports = {\n  presets: [\n    // https://github.com/vuejs/vue-cli/tree/master/packages/@vue/babel-preset-app\n    npmEvent === 'dev-vite' ? '@babel/preset-env' : '@vue/cli-plugin-babel/preset',\n    // '@babel/preset-env', // vite版需要安装这个\n  ],\n  'env': {\n    'development': {\n      // babel-plugin-dynamic-import-node plugin only does one thing by converting all import() to require().\n      // This plugin can significantly increase the speed of hot updates, when you have a large number of pages.\n      'plugins': ['dynamic-import-node']\n    }\n  }\n}\n```\n\npackage.json 增加脚本\n```\n\"dev-vite\": \"vite\",\n\"build-vite\": \"vite build\",\n\"preview-vite\": \"vite preview\"\n```\n\nmain.js\n```\n if (process.env.VITE) {\n   import('virtual:svg-icons-register')\n }\n ```\n // vite显示svg需要引入这个,但是在vue-cli里面引入报错,待TODO\nindex.html\n修改main.js为 type=\"module\"\n\n\nvite.config.js\n```\nimport { defineConfig } from \"vite\";\nimport commonjs from \"vite-plugin-commonjs\";\nimport ViteRequireContext from \"@originjs/vite-plugin-require-context\";\n// import viteComponents, { VuetifyResolver } from \"vite-plugin-components\";\nimport envCompatible from \"vite-plugin-env-compatible\";\n// import OptimizationPersist from \"vite-plugin-optimize-persist\";\n// import PkgConfig from \"vite-plugin-package-config\";\nimport { createSvgIconsPlugin } from \"vite-plugin-svg-icons\";\n// import { createVuePlugin } from \"vite-plugin-vue2\";\nimport vue from '@vitejs/plugin-vue2';\nimport vueJsx from '@vitejs/plugin-vue2-jsx'\n// import { viteExternalsPlugin } from 'vite-plugin-externals'\n\nimport path from \"path\";\nimport requireTransform from 'vite-plugin-require-transform';\nimport legacy from '@vitejs/plugin-legacy'\n\n// const { createVuePlugin } = require('vite-plugin-vue2')\n// const path = require('path')\nconst REPLACEMENT = `${path.resolve(__dirname, \"./src\")}/`;\nconst REPLACEMENT2 = `${path.resolve(__dirname, \"./static\")}/`;\nexport default defineConfig({\n  server: {\n    host: \"0.0.0.0\",\n    https: false,\n    port: 8080,\n    proxy: {\n    },\n    // open: true\n  },\n  resolve: {\n    alias: [\n      {\n        find: \"@/\",\n        replacement: REPLACEMENT,\n      },\n      {\n        find: \"src/\",\n        replacement: REPLACEMENT,\n      },\n      {\n        find: /^~@\\//,\n        replacement: REPLACEMENT,\n      },\n      {\n        find: '~static/',\n        replacement: REPLACEMENT2\n      },\n      {\n        find: /^~/,\n        replacement: '',\n      },\n    ],\n    extensions: [\n      \".vue\",\n      \".js\",\n      \".jsx\",\n      \".mjs\",\n      \".ts\",\n      \".tsx\",\n      \".json\",\n      \".css\",\n      \".scss\",\n    ],\n  },\n  plugins: [\n    legacy({\n      targets: ['defaults', 'ie >= 11', 'chrome 52'],\n      additionalLegacyPolyfills: ['regenerator-runtime/runtime'],\n    }),\n    // viteExternalsPlugin({\n    //   vue: 'Vue',\n    //   'vuex': 'Vuex',\n    //   'vue-router': 'VueRouter',\n    //   'element-ui':'ELEMENT'\n    // }),\n    // createVuePlugin({ jsx: true }),\n    vue(),\n    vueJsx({\n      // options are passed on to @vue/babel-preset-jsx\n    }),\n    // viteComponents({\n    //   customComponentResolvers: [VuetifyResolver()],\n    // }),\n    requireTransform({\n      fileRegex: /.js$|.vue$/\n    }),\n    createSvgIconsPlugin({\n      iconDirs: [path.resolve(__dirname, \"./src/icons/svg\")],\n      symbolId: \"icon-[dir]-[name]\",\n    }),\n    commonjs(/* options */),\n    ViteRequireContext(/* options */),\n    envCompatible(),\n    // PkgConfig(),\n    // OptimizationPersist()\n  ],\n  build: {\n    target: \"es2015\"\n  }\n});\n```\n\n","slug":"vite","published":1,"updated":"2025-04-14T01:41:21.713Z","comments":1,"layout":"post","photos":[],"_id":"cma39gdzr00098rdn134i71qk","content":"<h1 id=\"vue升级2-7-关联vite升级\"><a href=\"#vue升级2-7-关联vite升级\" class=\"headerlink\" title=\"vue升级2.7,关联vite升级\"></a>vue升级2.7,关联vite升级</h1><blockquote>\n<p><a href=\"https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html\">https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html</a></p>\n</blockquote>\n<p><a href=\"mailto:&#x76;&#117;&#101;&#x2d;&#116;&#101;&#109;&#112;&#108;&#x61;&#116;&#x65;&#45;&#99;&#x6f;&#x6d;&#x70;&#x69;&#108;&#x65;&#114;&#x40;&#x32;&#x2e;&#54;&#46;&#x31;&#48;\">&#x76;&#117;&#101;&#x2d;&#116;&#101;&#109;&#112;&#108;&#x61;&#116;&#x65;&#45;&#99;&#x6f;&#x6d;&#x70;&#x69;&#108;&#x65;&#114;&#x40;&#x32;&#x2e;&#54;&#46;&#x31;&#48;</a> 需要升级到2.7.16<br>vite-plugin-vue2 替换为 @vitejs&#x2F;plugin-vue2<br>vite.createFilter is not a function</p>\n<p>需要升级vite到3.x版本，这个错误是vite与插件不兼容,查看@vitejs&#x2F;plugin-vue2源码发现，引入了vite3.0<br>Error in render: “ReferenceError: React is not defined”<br>需要安装@vitejs&#x2F;plugin-vue-jsx<br>使用vue this, vuex等<br>import { getCurrentInstance } from ‘vue’</p>\n<p>&#x2F;&#x2F; 访问vuex<br>export const useStore &#x3D; () &#x3D;&gt; {<br>  const vm &#x3D; getCurrentInstance()<br>  if (!vm) throw new Error(‘must be called in setup’)<br>  console.log(‘vm–’, vm);<br>  return vm.proxy.$store<br>}<br>&#x2F;&#x2F; 访问this<br>export const useCtx &#x3D; () &#x3D;&gt; {<br>  const vm &#x3D; getCurrentInstance()<br>  if (!vm) throw new Error(‘must be called in setup’)<br>  return vm.proxy;<br>}</p>\n<hr>\n<h2 id=\"增加vite开发环境\"><a href=\"#增加vite开发环境\" class=\"headerlink\" title=\"增加vite开发环境\"></a>增加vite开发环境</h2><p>README.md</p>\n<h2 id=\"新增vite-dev环境\"><a href=\"#新增vite-dev环境\" class=\"headerlink\" title=\"新增vite dev环境\"></a>新增vite dev环境</h2><h4 id=\"渐进升级-不影响原使用-目前保留vue-cli-service和vite共存\"><a href=\"#渐进升级-不影响原使用-目前保留vue-cli-service和vite共存\" class=\"headerlink\" title=\"渐进升级,不影响原使用,目前保留vue-cli-service和vite共存\"></a>渐进升级,不影响原使用,目前保留vue-cli-service和vite共存</h4><h4 id=\"node-v14-8以上-我使用了v16\"><a href=\"#node-v14-8以上-我使用了v16\" class=\"headerlink\" title=\"node v14.8以上(我使用了v16)\"></a>node v14.8以上(我使用了v16)</h4><p>切换版本后需要删除node_module报包重新执行 npm install</p>\n<h3 id=\"本地\"><a href=\"#本地\" class=\"headerlink\" title=\"本地\"></a>本地</h3><p>npm run dev-vite</p>\n<h4 id=\"其他说明\"><a href=\"#其他说明\" class=\"headerlink\" title=\"其他说明\"></a>其他说明</h4><p>css尽量别使用 module 这个名称,会报这么个错误,待排查</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[vite] Internal server error: Unexpected token (1:0)</span><br><span class=\"line\">  Plugin: vite-plugin-commonjs</span><br></pre></td></tr></table></figure>\n<p>babel.config.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var npmEvent = process.env.npm_lifecycle_event;</span><br><span class=\"line\">console.log(&#x27;babel p&#x27;, npmEvent);</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  presets: [</span><br><span class=\"line\">    // https://github.com/vuejs/vue-cli/tree/master/packages/@vue/babel-preset-app</span><br><span class=\"line\">    npmEvent === &#x27;dev-vite&#x27; ? &#x27;@babel/preset-env&#x27; : &#x27;@vue/cli-plugin-babel/preset&#x27;,</span><br><span class=\"line\">    // &#x27;@babel/preset-env&#x27;, // vite版需要安装这个</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &#x27;env&#x27;: &#123;</span><br><span class=\"line\">    &#x27;development&#x27;: &#123;</span><br><span class=\"line\">      // babel-plugin-dynamic-import-node plugin only does one thing by converting all import() to require().</span><br><span class=\"line\">      // This plugin can significantly increase the speed of hot updates, when you have a large number of pages.</span><br><span class=\"line\">      &#x27;plugins&#x27;: [&#x27;dynamic-import-node&#x27;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>package.json 增加脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;dev-vite&quot;: &quot;vite&quot;,</span><br><span class=\"line\">&quot;build-vite&quot;: &quot;vite build&quot;,</span><br><span class=\"line\">&quot;preview-vite&quot;: &quot;vite preview&quot;</span><br></pre></td></tr></table></figure>\n\n<p>main.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (process.env.VITE) &#123;</span><br><span class=\"line\">  import(&#x27;virtual:svg-icons-register&#x27;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> &#x2F;&#x2F; vite显示svg需要引入这个,但是在vue-cli里面引入报错,待TODO<br>index.html<br>修改main.js为 type&#x3D;”module”</p>\n<p>vite.config.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; defineConfig &#125; from &quot;vite&quot;;</span><br><span class=\"line\">import commonjs from &quot;vite-plugin-commonjs&quot;;</span><br><span class=\"line\">import ViteRequireContext from &quot;@originjs/vite-plugin-require-context&quot;;</span><br><span class=\"line\">// import viteComponents, &#123; VuetifyResolver &#125; from &quot;vite-plugin-components&quot;;</span><br><span class=\"line\">import envCompatible from &quot;vite-plugin-env-compatible&quot;;</span><br><span class=\"line\">// import OptimizationPersist from &quot;vite-plugin-optimize-persist&quot;;</span><br><span class=\"line\">// import PkgConfig from &quot;vite-plugin-package-config&quot;;</span><br><span class=\"line\">import &#123; createSvgIconsPlugin &#125; from &quot;vite-plugin-svg-icons&quot;;</span><br><span class=\"line\">// import &#123; createVuePlugin &#125; from &quot;vite-plugin-vue2&quot;;</span><br><span class=\"line\">import vue from &#x27;@vitejs/plugin-vue2&#x27;;</span><br><span class=\"line\">import vueJsx from &#x27;@vitejs/plugin-vue2-jsx&#x27;</span><br><span class=\"line\">// import &#123; viteExternalsPlugin &#125; from &#x27;vite-plugin-externals&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import path from &quot;path&quot;;</span><br><span class=\"line\">import requireTransform from &#x27;vite-plugin-require-transform&#x27;;</span><br><span class=\"line\">import legacy from &#x27;@vitejs/plugin-legacy&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// const &#123; createVuePlugin &#125; = require(&#x27;vite-plugin-vue2&#x27;)</span><br><span class=\"line\">// const path = require(&#x27;path&#x27;)</span><br><span class=\"line\">const REPLACEMENT = `$&#123;path.resolve(__dirname, &quot;./src&quot;)&#125;/`;</span><br><span class=\"line\">const REPLACEMENT2 = `$&#123;path.resolve(__dirname, &quot;./static&quot;)&#125;/`;</span><br><span class=\"line\">export default defineConfig(&#123;</span><br><span class=\"line\">  server: &#123;</span><br><span class=\"line\">    host: &quot;0.0.0.0&quot;,</span><br><span class=\"line\">    https: false,</span><br><span class=\"line\">    port: 8080,</span><br><span class=\"line\">    proxy: &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // open: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  resolve: &#123;</span><br><span class=\"line\">    alias: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &quot;@/&quot;,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &quot;src/&quot;,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: /^~@\\//,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &#x27;~static/&#x27;,</span><br><span class=\"line\">        replacement: REPLACEMENT2</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: /^~/,</span><br><span class=\"line\">        replacement: &#x27;&#x27;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    extensions: [</span><br><span class=\"line\">      &quot;.vue&quot;,</span><br><span class=\"line\">      &quot;.js&quot;,</span><br><span class=\"line\">      &quot;.jsx&quot;,</span><br><span class=\"line\">      &quot;.mjs&quot;,</span><br><span class=\"line\">      &quot;.ts&quot;,</span><br><span class=\"line\">      &quot;.tsx&quot;,</span><br><span class=\"line\">      &quot;.json&quot;,</span><br><span class=\"line\">      &quot;.css&quot;,</span><br><span class=\"line\">      &quot;.scss&quot;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    legacy(&#123;</span><br><span class=\"line\">      targets: [&#x27;defaults&#x27;, &#x27;ie &gt;= 11&#x27;, &#x27;chrome 52&#x27;],</span><br><span class=\"line\">      additionalLegacyPolyfills: [&#x27;regenerator-runtime/runtime&#x27;],</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // viteExternalsPlugin(&#123;</span><br><span class=\"line\">    //   vue: &#x27;Vue&#x27;,</span><br><span class=\"line\">    //   &#x27;vuex&#x27;: &#x27;Vuex&#x27;,</span><br><span class=\"line\">    //   &#x27;vue-router&#x27;: &#x27;VueRouter&#x27;,</span><br><span class=\"line\">    //   &#x27;element-ui&#x27;:&#x27;ELEMENT&#x27;</span><br><span class=\"line\">    // &#125;),</span><br><span class=\"line\">    // createVuePlugin(&#123; jsx: true &#125;),</span><br><span class=\"line\">    vue(),</span><br><span class=\"line\">    vueJsx(&#123;</span><br><span class=\"line\">      // options are passed on to @vue/babel-preset-jsx</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // viteComponents(&#123;</span><br><span class=\"line\">    //   customComponentResolvers: [VuetifyResolver()],</span><br><span class=\"line\">    // &#125;),</span><br><span class=\"line\">    requireTransform(&#123;</span><br><span class=\"line\">      fileRegex: /.js$|.vue$/</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    createSvgIconsPlugin(&#123;</span><br><span class=\"line\">      iconDirs: [path.resolve(__dirname, &quot;./src/icons/svg&quot;)],</span><br><span class=\"line\">      symbolId: &quot;icon-[dir]-[name]&quot;,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    commonjs(/* options */),</span><br><span class=\"line\">    ViteRequireContext(/* options */),</span><br><span class=\"line\">    envCompatible(),</span><br><span class=\"line\">    // PkgConfig(),</span><br><span class=\"line\">    // OptimizationPersist()</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">    target: &quot;es2015&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h1 id=\"vue升级2-7-关联vite升级\"><a href=\"#vue升级2-7-关联vite升级\" class=\"headerlink\" title=\"vue升级2.7,关联vite升级\"></a>vue升级2.7,关联vite升级</h1><blockquote>\n<p><a href=\"https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html\">https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html</a></p>\n</blockquote>\n<p><a href=\"mailto:&#x76;&#117;&#101;&#x2d;&#116;&#101;&#109;&#112;&#108;&#x61;&#116;&#x65;&#45;&#99;&#x6f;&#x6d;&#x70;&#x69;&#108;&#x65;&#114;&#x40;&#x32;&#x2e;&#54;&#46;&#x31;&#48;\">&#x76;&#117;&#101;&#x2d;&#116;&#101;&#109;&#112;&#108;&#x61;&#116;&#x65;&#45;&#99;&#x6f;&#x6d;&#x70;&#x69;&#108;&#x65;&#114;&#x40;&#x32;&#x2e;&#54;&#46;&#x31;&#48;</a> 需要升级到2.7.16<br>vite-plugin-vue2 替换为 @vitejs&#x2F;plugin-vue2<br>vite.createFilter is not a function</p>\n<p>需要升级vite到3.x版本，这个错误是vite与插件不兼容,查看@vitejs&#x2F;plugin-vue2源码发现，引入了vite3.0<br>Error in render: “ReferenceError: React is not defined”<br>需要安装@vitejs&#x2F;plugin-vue-jsx<br>使用vue this, vuex等<br>import { getCurrentInstance } from ‘vue’</p>\n<p>&#x2F;&#x2F; 访问vuex<br>export const useStore &#x3D; () &#x3D;&gt; {<br>  const vm &#x3D; getCurrentInstance()<br>  if (!vm) throw new Error(‘must be called in setup’)<br>  console.log(‘vm–’, vm);<br>  return vm.proxy.$store<br>}<br>&#x2F;&#x2F; 访问this<br>export const useCtx &#x3D; () &#x3D;&gt; {<br>  const vm &#x3D; getCurrentInstance()<br>  if (!vm) throw new Error(‘must be called in setup’)<br>  return vm.proxy;<br>}</p>\n<hr>\n<h2 id=\"增加vite开发环境\"><a href=\"#增加vite开发环境\" class=\"headerlink\" title=\"增加vite开发环境\"></a>增加vite开发环境</h2><p>README.md</p>\n<h2 id=\"新增vite-dev环境\"><a href=\"#新增vite-dev环境\" class=\"headerlink\" title=\"新增vite dev环境\"></a>新增vite dev环境</h2><h4 id=\"渐进升级-不影响原使用-目前保留vue-cli-service和vite共存\"><a href=\"#渐进升级-不影响原使用-目前保留vue-cli-service和vite共存\" class=\"headerlink\" title=\"渐进升级,不影响原使用,目前保留vue-cli-service和vite共存\"></a>渐进升级,不影响原使用,目前保留vue-cli-service和vite共存</h4><h4 id=\"node-v14-8以上-我使用了v16\"><a href=\"#node-v14-8以上-我使用了v16\" class=\"headerlink\" title=\"node v14.8以上(我使用了v16)\"></a>node v14.8以上(我使用了v16)</h4><p>切换版本后需要删除node_module报包重新执行 npm install</p>\n<h3 id=\"本地\"><a href=\"#本地\" class=\"headerlink\" title=\"本地\"></a>本地</h3><p>npm run dev-vite</p>\n<h4 id=\"其他说明\"><a href=\"#其他说明\" class=\"headerlink\" title=\"其他说明\"></a>其他说明</h4><p>css尽量别使用 module 这个名称,会报这么个错误,待排查</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[vite] Internal server error: Unexpected token (1:0)</span><br><span class=\"line\">  Plugin: vite-plugin-commonjs</span><br></pre></td></tr></table></figure>\n<p>babel.config.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var npmEvent = process.env.npm_lifecycle_event;</span><br><span class=\"line\">console.log(&#x27;babel p&#x27;, npmEvent);</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  presets: [</span><br><span class=\"line\">    // https://github.com/vuejs/vue-cli/tree/master/packages/@vue/babel-preset-app</span><br><span class=\"line\">    npmEvent === &#x27;dev-vite&#x27; ? &#x27;@babel/preset-env&#x27; : &#x27;@vue/cli-plugin-babel/preset&#x27;,</span><br><span class=\"line\">    // &#x27;@babel/preset-env&#x27;, // vite版需要安装这个</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &#x27;env&#x27;: &#123;</span><br><span class=\"line\">    &#x27;development&#x27;: &#123;</span><br><span class=\"line\">      // babel-plugin-dynamic-import-node plugin only does one thing by converting all import() to require().</span><br><span class=\"line\">      // This plugin can significantly increase the speed of hot updates, when you have a large number of pages.</span><br><span class=\"line\">      &#x27;plugins&#x27;: [&#x27;dynamic-import-node&#x27;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>package.json 增加脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;dev-vite&quot;: &quot;vite&quot;,</span><br><span class=\"line\">&quot;build-vite&quot;: &quot;vite build&quot;,</span><br><span class=\"line\">&quot;preview-vite&quot;: &quot;vite preview&quot;</span><br></pre></td></tr></table></figure>\n\n<p>main.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (process.env.VITE) &#123;</span><br><span class=\"line\">  import(&#x27;virtual:svg-icons-register&#x27;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> &#x2F;&#x2F; vite显示svg需要引入这个,但是在vue-cli里面引入报错,待TODO<br>index.html<br>修改main.js为 type&#x3D;”module”</p>\n<p>vite.config.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; defineConfig &#125; from &quot;vite&quot;;</span><br><span class=\"line\">import commonjs from &quot;vite-plugin-commonjs&quot;;</span><br><span class=\"line\">import ViteRequireContext from &quot;@originjs/vite-plugin-require-context&quot;;</span><br><span class=\"line\">// import viteComponents, &#123; VuetifyResolver &#125; from &quot;vite-plugin-components&quot;;</span><br><span class=\"line\">import envCompatible from &quot;vite-plugin-env-compatible&quot;;</span><br><span class=\"line\">// import OptimizationPersist from &quot;vite-plugin-optimize-persist&quot;;</span><br><span class=\"line\">// import PkgConfig from &quot;vite-plugin-package-config&quot;;</span><br><span class=\"line\">import &#123; createSvgIconsPlugin &#125; from &quot;vite-plugin-svg-icons&quot;;</span><br><span class=\"line\">// import &#123; createVuePlugin &#125; from &quot;vite-plugin-vue2&quot;;</span><br><span class=\"line\">import vue from &#x27;@vitejs/plugin-vue2&#x27;;</span><br><span class=\"line\">import vueJsx from &#x27;@vitejs/plugin-vue2-jsx&#x27;</span><br><span class=\"line\">// import &#123; viteExternalsPlugin &#125; from &#x27;vite-plugin-externals&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import path from &quot;path&quot;;</span><br><span class=\"line\">import requireTransform from &#x27;vite-plugin-require-transform&#x27;;</span><br><span class=\"line\">import legacy from &#x27;@vitejs/plugin-legacy&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// const &#123; createVuePlugin &#125; = require(&#x27;vite-plugin-vue2&#x27;)</span><br><span class=\"line\">// const path = require(&#x27;path&#x27;)</span><br><span class=\"line\">const REPLACEMENT = `$&#123;path.resolve(__dirname, &quot;./src&quot;)&#125;/`;</span><br><span class=\"line\">const REPLACEMENT2 = `$&#123;path.resolve(__dirname, &quot;./static&quot;)&#125;/`;</span><br><span class=\"line\">export default defineConfig(&#123;</span><br><span class=\"line\">  server: &#123;</span><br><span class=\"line\">    host: &quot;0.0.0.0&quot;,</span><br><span class=\"line\">    https: false,</span><br><span class=\"line\">    port: 8080,</span><br><span class=\"line\">    proxy: &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // open: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  resolve: &#123;</span><br><span class=\"line\">    alias: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &quot;@/&quot;,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &quot;src/&quot;,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: /^~@\\//,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &#x27;~static/&#x27;,</span><br><span class=\"line\">        replacement: REPLACEMENT2</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: /^~/,</span><br><span class=\"line\">        replacement: &#x27;&#x27;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    extensions: [</span><br><span class=\"line\">      &quot;.vue&quot;,</span><br><span class=\"line\">      &quot;.js&quot;,</span><br><span class=\"line\">      &quot;.jsx&quot;,</span><br><span class=\"line\">      &quot;.mjs&quot;,</span><br><span class=\"line\">      &quot;.ts&quot;,</span><br><span class=\"line\">      &quot;.tsx&quot;,</span><br><span class=\"line\">      &quot;.json&quot;,</span><br><span class=\"line\">      &quot;.css&quot;,</span><br><span class=\"line\">      &quot;.scss&quot;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    legacy(&#123;</span><br><span class=\"line\">      targets: [&#x27;defaults&#x27;, &#x27;ie &gt;= 11&#x27;, &#x27;chrome 52&#x27;],</span><br><span class=\"line\">      additionalLegacyPolyfills: [&#x27;regenerator-runtime/runtime&#x27;],</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // viteExternalsPlugin(&#123;</span><br><span class=\"line\">    //   vue: &#x27;Vue&#x27;,</span><br><span class=\"line\">    //   &#x27;vuex&#x27;: &#x27;Vuex&#x27;,</span><br><span class=\"line\">    //   &#x27;vue-router&#x27;: &#x27;VueRouter&#x27;,</span><br><span class=\"line\">    //   &#x27;element-ui&#x27;:&#x27;ELEMENT&#x27;</span><br><span class=\"line\">    // &#125;),</span><br><span class=\"line\">    // createVuePlugin(&#123; jsx: true &#125;),</span><br><span class=\"line\">    vue(),</span><br><span class=\"line\">    vueJsx(&#123;</span><br><span class=\"line\">      // options are passed on to @vue/babel-preset-jsx</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // viteComponents(&#123;</span><br><span class=\"line\">    //   customComponentResolvers: [VuetifyResolver()],</span><br><span class=\"line\">    // &#125;),</span><br><span class=\"line\">    requireTransform(&#123;</span><br><span class=\"line\">      fileRegex: /.js$|.vue$/</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    createSvgIconsPlugin(&#123;</span><br><span class=\"line\">      iconDirs: [path.resolve(__dirname, &quot;./src/icons/svg&quot;)],</span><br><span class=\"line\">      symbolId: &quot;icon-[dir]-[name]&quot;,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    commonjs(/* options */),</span><br><span class=\"line\">    ViteRequireContext(/* options */),</span><br><span class=\"line\">    envCompatible(),</span><br><span class=\"line\">    // PkgConfig(),</span><br><span class=\"line\">    // OptimizationPersist()</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">    target: &quot;es2015&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n"},{"title":"知识整理1","toc":"前端","date":"2018-09-29T02:02:01.000Z","cover":"/img/common/t1.jpg","_content":"本文为知识整理，可能工作中用到这些东西不多，可是总有人想让你会\n\n\n----------\n\n\n  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。\n一：js继承\n----------------\n----------------------\n\n**①：对象冒充实现继承：(可实现多继承)**\n\n\n----------\n\n\n——原理：让父类构造函数成为子类的方法，然后调用子类的方法，通过this关键字给所有属性和方法赋值\n\n    function Parent(name)\n    {\n        this.name=name;\n        this.sayName=function () {\n            console.log(this.name);\n        }\n    }\n    function Child (cname) {\n        this.parent=Parent;\n        this.parent(cname);\n        delete this.parent; // 删除无用的parent函数 == f Parent(name)\n    }\n    var mychild=new Child(\"名字\");\n    mychild.sayName();\n    \n**②：原型链继承 (不能实现多继承)**\n\nprototype\n\n----------\n\n\n        function Parent (name, age) {\n    \t  this.name = name;\n    \t  this.age = age;\n    \t  this.ParFunc = function () {\n    \t  \tconsole.log(this.height)\n    \t  }\n    \t};\n    \tParent.prototype.sayName = function () {\n    \t  console.log(this)\n    \t};\n    \tfunction Child (cname, cage, height) {\n    \t  this.height = height\n    \t}\n\n    Child.prototype = new Parent(); // Child原型指向Parent的一个实例\n    Child.prototype.constructor = Child; // 把Child指向自己，不与Parent共享\n\tvar child = new Child('测试名字', '测试年龄', '测试身高')\n\tconsole.log(child) // 发现打印出来的属性都继承了，就是没值\nchild.ParFunc()：当访问ParFunc属性时，会先在child的实例属性中寻找，找不到就去child的原型对象上去找。一层一层的寻找构成了**原型链**\n![Alt text](/img/tidy/image-3.png)\n因为无法向父类构造函数传参;可以 new Parent('名字', '年龄')这时传参\n注：如果想用原型给Child拓展方法：\n\n    Child.prototype.childHeight = function () {\n    \t  console.log(this.height)\n    \t}\n一定要写到Child.prototype = new Parent()的下面，要么就被覆盖掉了。\n\n**③：call、apply继承(不能继承原型链，prototype上的)**\n\n----------\n\n\n            function Parent (name, age) {\n        \t  this.name = name;\n        \t  this.age = age;\n        \t  this.ParFunc = function () {\n        \t  \tconsole.log(this.name)\n        \t  }\n        \t}\n        \t\n        \tfunction Child (cname, cage, height) {\n        \t  Parent.call(this,cname,cage); // 继承的参数为当前函数的形参\n        \t  // apply: Parent.call(this,arguments);\n        \t  this.height = height;\n        \t}\n        \tvar child = new Child('测试名字', '测试年龄', '测试身高')\n        \tconsole.log(child)  //  ParFunc: ƒ () age: \"测试年龄\"\n    name: \"测试名字\"\n**④：组合继承：call+原型链继承**\n\n\n----------\n\n\n    function Parent (name, age) {\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () {\n      \tconsole.log(this.height)\n      }\n    }\n    Parent.prototype.sayName = function () {\n      console.log(this)\n    }\n    function Child (cname, cage, height) {\n      Parent.call(this, cname, cage); // 解决传参问题\n      this.height = height;\n    };\n    Child.prototype = new Parent()\n    Child.prototype.constructor = Child; // 把Child指向自己，否则一直指向Parent\n    var child = new Child('测试名字', '测试年龄', '测试身高')\n 比较常用的继承方式，缺点是 两次调用 Parent构造函数\n   \n **⑤：寄生组合继承：**\n\ncal+prototype\n\n----------\n\n    function Parent (name, age) { // 父函数\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () {\n      \tconsole.log(this.height)\n      }\n    }\n    Parent.prototype.sayName = function () {\n      console.log(this)\n    }\n    function Child (cname, cage, height) { // 子函数\n      Parent.call(this, cname, cage)\n      this.height = height;\n    };\n    var createObj = function () { // 中间函数继承 Parent\n      function Trans() {};\n      Trans.prototype = Parent.prototype;\n      return new Trans();\n    };\n    Child.prototype = createObj()\n    Child.prototype.constructor = Child; // 改回指针\n    var child = new Child('名字', '年龄', '身高')\n    console.log(child)\n\n二：如何获取自定义属性，特例data-*如何获取\n=================\n官方定义：\n        data-*是 **html5** 新属性\n        主要用于存储页面的自定义数据\n        不应该包含大写字母（会默认转为小写）\n        注释：用户代理会完全忽略前缀为 \"data-\" 的自定义属性。\n脑海里第一印象就是 getAttribute(),setAttribute()俩属性了，一个获取，一个设置\n而平时又很少用到，但是平时用的框架什么的多数都用 data-* 这个自定义属性，那其实获取 data- 这类自定义属性的时候，还有个更方便的方法dataset\n\n    <div data-a=\"aa\" id=\"div1\" data-b=\"bb\"></div>\n    eg:var div1 = document.getElementById('div1')\n    console.log(div1.dataset) // DOMStringMap {a: \"测试\", b: \"222\"}a: \"测试\"b: \"222\"\n用data-*作为自定义属性：可以一句话就获取到所有属性，获取方式也简便   \n\n三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡\n---------\n先盗个图\n\n![Alt text](/img/tidy/image-2.png)\n——冒泡(IE事件流)：从最深的节点向外传播，div -> window,就好比往水里丢一个石子，一层层波浪抵达河边缘\n\n——捕获(网景)：从最外层向目标传递，window -> div,就好比你去一个大企业集团找人，需要提供公司 > 大部门 > 小部门 > 小组 > 目标\n\n——目标：即触发过程event.target\n\n——target、currentTarget的区别：target这个属性指向的是目标过程中的DOM对象，也就是 ***触发事件监听的对象***, currentTarget这个指向的是当前的对象，具体内容跟this一样，当this指向的是目标的时候(事件的目标阶段)，target与currentTarget相同\n\n——现在几乎所有的主流浏览器都支持冒泡；IE早起版本会跳过html直接跳到document，且不支持捕获。\n\n——平时多数用到冒泡多一些，事件代理(委托)也是通过事件冒泡的原理，让DOM节点可追溯，也可以利用冒泡的原理做埋点，避免新增DOM节点，改代码上线\n\n——事件句柄addEventListener('事件名', 'function', false)，默认冒泡\n\n四：判断数据类型，返回数据的具体类型\n------------------\nemm... 那不就直接 `return typeof n` 不就完了，哦不对，再识别一下数组，因为数组的typeof也是对象，Array.isArray(n)...   \n/^12/ 这返回啥？ wc,也是object吧，那咋区分，对，正则有test方法，再判断一下 \n    if (n.test) {\n        return 'RegExp'\n    }\nnull好像也返回obj吧，时间 Date嘞，都返回obj也没毛病，万物皆对象啊。\n\n - 据说instanceof也可以：左侧是否是右侧的实例，也就是说每个类型我们都得判断，于是\n\n \n\n    [] instanceof Array // true\n    [] instanceof Object // true\n不光麻烦，返回的也不精确啊\n\n - 据说constructor也可以：js引擎会为函数添加prototype,并让其指向'该函数'的引用\n/^12/.constructor  // f RexExp(){[native code]}\nnew Date().constructor // ƒ Date() { [native code] }\nnull.constructor // 报错：Cannot read.. \nundefined.constructor // 报错：Cannot read.. \n发现确实能校验一些typeof 不能校验的，但是 null和undefined没有'指针'啊,而且写继承的时候，指针是可以被改的，稍不注意就凉凉了...\n - 把这些都整合到一起基本也都够用了，可是并不优雅\n有请toString登场....\n华丽分割线\n\n----------\ntoString() 是 Object 的原型方法，调用该方法，默认返回当前对象的 [[Class]] 。这是一个内部属性，其格式为 [object Xxx] ，其中 Xxx 就是对象的类型。完美~~\n\n    Object.prototype.toString.call(null) ; // [object Null]\n    Object.prototype.toString.call(new Function()) ; // [object Function]\n    Object.prototype.toString.call(new Date()) ; // [object Date]\n但是我觉得除了obj比较特殊之外，其他类型,typeof都可以判断，不需要再多调用一次toString方法，所以最终封装 =>\n\n    function typeDetection (n) {\n      if (typeof n === 'object') {\n      \treturn Object.prototype.toString.call(n)\n      } else {\n      \treturn typeof n\n      }\n    }\n直接调用typeDetection('')  // string\n\n五：千分位的实现\n--------\n**Q:字符：1234567890.12 转换为：1,234,567,890.12**\n\n**R:**\n个人用了while循环的方式\n    function strFilter (str) {\n      let newStr = String(str).split('.') // 切分原始字符,兼容传入Number类型\n      let transStr = newStr[0],resStr = [] \n      while (transStr/1000 > 1) { // 判断是否大于1000\n      \tlet whildStr = String((transStr/1000).toFixed(3)).split('.') // 这里一定要保留三位小数,否则正数部分末位的0就会丢失,又转为String，因为Number没有split方法\n      \ttransStr = whildStr[0] // 每次都取小数点以前的(正数部分)\n      \tresStr.unshift(whildStr[1]) // 向前插入小数点后的数字()\n      }\n      // 除以1000剩下的数 + 每次除以1000后的数 + 原来小数\n      let res2 = newStr[1]?('.' + newStr[1]):''\n      let resComma = resStr.length?(',' + resStr.join(',')): ''\n      return transStr + resComma + res2\n    }\n虽然实现代码很多，但个人觉得还算易懂\n\n网上看到用正则的，确实简短：\n\n    function strFilter2 (n) {\n      let s = String(n)\n      let re = /\\d{1,3}(?=(\\d{3})+$)/g\n      let n1 = s.replace(/^(\\d+)((\\.\\d+)?)$/, function (s, s1, s2) { return s1.replace(re, '$&,') + s2 })\n      return n1\n    }\n其实正则在好多场景都体现出优势，只是不能被轻易想到\n\n**Q:以下this指向**\n\n    (function () {\n      \"use strict\";\n      console.log(this) // undefined\n    })()\n    (function () {\n      \"use strict\";\n      console.log(this) // window\n    })()\n**R:严格模式下，除构造函数、对象内置函数外，this均指向 undefined**\n\n**Q:script标签的 async、defer啥区别？**\n**R:别说那没用的，上图**\n\n![Alt text](/img/tidy/image-1.png)\n啥也不加：script读取和解析脚本阶段都会阻断页面执行，\n加async  : script解析脚本阶段会阻断页面执行\n加defer   : scriptj脚本将在页面完成解析时执行\n\nQ:[1,2,3].map(parseInt)的结果？\nR:之前用到parseInt，只知道是向下取整，翻了下w3c的parseInt定义: Crazy\n\n![Alt text](/img/tidy/image-4.png)\n再看map，\n\n![Alt text](/img/tidy/image-5.png)\nparseInt就是回调函数,map会传给parseInt三个参数，parseInt只识别前两个，\n那也就是得到了 \n\n    function parseInt1 (item, index) {\n      return parseInt(item,index)\n    }\n得到  `parseInt(1,0) parseInt(2,1) parseInt(3,2)`\n\n    parseInt(1,0)，parseInt定义radix不传或者0,按10进制，也就得到了1\n    parseInt(2,1)，parseInt又定义第二个参数 radix 位于 2-36(除了0)，否则返回NaN,所以得到NaN\n\n    parseInt(3,2),这个据说(网上)是 3不是 2的合法进制数 (只有0和1)，但是个人试了试\n    parseInt(10,2) => 3，parseInt(20, 2) => 6,parseInt(30, 2) => NaN\n\n    ,发现只要是字符首字符小于 radix都是可以的，但是一旦首字符 >= radix，就会返回NaN\n\n参考文章：[判断js数据类型的四种方法][1]\n\n \n\n   \n    \n    \n\n\n  [1]: https://www.cnblogs.com/onepixel/p/5126046.html","source":"_posts/test-my-site.md","raw":"---\ntitle: 知识整理1\ntoc: 前端\ndate: 2018-09-29 10:02:01\ncover: /img/common/t1.jpg\ncategories: js\n---\n本文为知识整理，可能工作中用到这些东西不多，可是总有人想让你会\n\n\n----------\n\n\n  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。\n一：js继承\n----------------\n----------------------\n\n**①：对象冒充实现继承：(可实现多继承)**\n\n\n----------\n\n\n——原理：让父类构造函数成为子类的方法，然后调用子类的方法，通过this关键字给所有属性和方法赋值\n\n    function Parent(name)\n    {\n        this.name=name;\n        this.sayName=function () {\n            console.log(this.name);\n        }\n    }\n    function Child (cname) {\n        this.parent=Parent;\n        this.parent(cname);\n        delete this.parent; // 删除无用的parent函数 == f Parent(name)\n    }\n    var mychild=new Child(\"名字\");\n    mychild.sayName();\n    \n**②：原型链继承 (不能实现多继承)**\n\nprototype\n\n----------\n\n\n        function Parent (name, age) {\n    \t  this.name = name;\n    \t  this.age = age;\n    \t  this.ParFunc = function () {\n    \t  \tconsole.log(this.height)\n    \t  }\n    \t};\n    \tParent.prototype.sayName = function () {\n    \t  console.log(this)\n    \t};\n    \tfunction Child (cname, cage, height) {\n    \t  this.height = height\n    \t}\n\n    Child.prototype = new Parent(); // Child原型指向Parent的一个实例\n    Child.prototype.constructor = Child; // 把Child指向自己，不与Parent共享\n\tvar child = new Child('测试名字', '测试年龄', '测试身高')\n\tconsole.log(child) // 发现打印出来的属性都继承了，就是没值\nchild.ParFunc()：当访问ParFunc属性时，会先在child的实例属性中寻找，找不到就去child的原型对象上去找。一层一层的寻找构成了**原型链**\n![Alt text](/img/tidy/image-3.png)\n因为无法向父类构造函数传参;可以 new Parent('名字', '年龄')这时传参\n注：如果想用原型给Child拓展方法：\n\n    Child.prototype.childHeight = function () {\n    \t  console.log(this.height)\n    \t}\n一定要写到Child.prototype = new Parent()的下面，要么就被覆盖掉了。\n\n**③：call、apply继承(不能继承原型链，prototype上的)**\n\n----------\n\n\n            function Parent (name, age) {\n        \t  this.name = name;\n        \t  this.age = age;\n        \t  this.ParFunc = function () {\n        \t  \tconsole.log(this.name)\n        \t  }\n        \t}\n        \t\n        \tfunction Child (cname, cage, height) {\n        \t  Parent.call(this,cname,cage); // 继承的参数为当前函数的形参\n        \t  // apply: Parent.call(this,arguments);\n        \t  this.height = height;\n        \t}\n        \tvar child = new Child('测试名字', '测试年龄', '测试身高')\n        \tconsole.log(child)  //  ParFunc: ƒ () age: \"测试年龄\"\n    name: \"测试名字\"\n**④：组合继承：call+原型链继承**\n\n\n----------\n\n\n    function Parent (name, age) {\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () {\n      \tconsole.log(this.height)\n      }\n    }\n    Parent.prototype.sayName = function () {\n      console.log(this)\n    }\n    function Child (cname, cage, height) {\n      Parent.call(this, cname, cage); // 解决传参问题\n      this.height = height;\n    };\n    Child.prototype = new Parent()\n    Child.prototype.constructor = Child; // 把Child指向自己，否则一直指向Parent\n    var child = new Child('测试名字', '测试年龄', '测试身高')\n 比较常用的继承方式，缺点是 两次调用 Parent构造函数\n   \n **⑤：寄生组合继承：**\n\ncal+prototype\n\n----------\n\n    function Parent (name, age) { // 父函数\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () {\n      \tconsole.log(this.height)\n      }\n    }\n    Parent.prototype.sayName = function () {\n      console.log(this)\n    }\n    function Child (cname, cage, height) { // 子函数\n      Parent.call(this, cname, cage)\n      this.height = height;\n    };\n    var createObj = function () { // 中间函数继承 Parent\n      function Trans() {};\n      Trans.prototype = Parent.prototype;\n      return new Trans();\n    };\n    Child.prototype = createObj()\n    Child.prototype.constructor = Child; // 改回指针\n    var child = new Child('名字', '年龄', '身高')\n    console.log(child)\n\n二：如何获取自定义属性，特例data-*如何获取\n=================\n官方定义：\n        data-*是 **html5** 新属性\n        主要用于存储页面的自定义数据\n        不应该包含大写字母（会默认转为小写）\n        注释：用户代理会完全忽略前缀为 \"data-\" 的自定义属性。\n脑海里第一印象就是 getAttribute(),setAttribute()俩属性了，一个获取，一个设置\n而平时又很少用到，但是平时用的框架什么的多数都用 data-* 这个自定义属性，那其实获取 data- 这类自定义属性的时候，还有个更方便的方法dataset\n\n    <div data-a=\"aa\" id=\"div1\" data-b=\"bb\"></div>\n    eg:var div1 = document.getElementById('div1')\n    console.log(div1.dataset) // DOMStringMap {a: \"测试\", b: \"222\"}a: \"测试\"b: \"222\"\n用data-*作为自定义属性：可以一句话就获取到所有属性，获取方式也简便   \n\n三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡\n---------\n先盗个图\n\n![Alt text](/img/tidy/image-2.png)\n——冒泡(IE事件流)：从最深的节点向外传播，div -> window,就好比往水里丢一个石子，一层层波浪抵达河边缘\n\n——捕获(网景)：从最外层向目标传递，window -> div,就好比你去一个大企业集团找人，需要提供公司 > 大部门 > 小部门 > 小组 > 目标\n\n——目标：即触发过程event.target\n\n——target、currentTarget的区别：target这个属性指向的是目标过程中的DOM对象，也就是 ***触发事件监听的对象***, currentTarget这个指向的是当前的对象，具体内容跟this一样，当this指向的是目标的时候(事件的目标阶段)，target与currentTarget相同\n\n——现在几乎所有的主流浏览器都支持冒泡；IE早起版本会跳过html直接跳到document，且不支持捕获。\n\n——平时多数用到冒泡多一些，事件代理(委托)也是通过事件冒泡的原理，让DOM节点可追溯，也可以利用冒泡的原理做埋点，避免新增DOM节点，改代码上线\n\n——事件句柄addEventListener('事件名', 'function', false)，默认冒泡\n\n四：判断数据类型，返回数据的具体类型\n------------------\nemm... 那不就直接 `return typeof n` 不就完了，哦不对，再识别一下数组，因为数组的typeof也是对象，Array.isArray(n)...   \n/^12/ 这返回啥？ wc,也是object吧，那咋区分，对，正则有test方法，再判断一下 \n    if (n.test) {\n        return 'RegExp'\n    }\nnull好像也返回obj吧，时间 Date嘞，都返回obj也没毛病，万物皆对象啊。\n\n - 据说instanceof也可以：左侧是否是右侧的实例，也就是说每个类型我们都得判断，于是\n\n \n\n    [] instanceof Array // true\n    [] instanceof Object // true\n不光麻烦，返回的也不精确啊\n\n - 据说constructor也可以：js引擎会为函数添加prototype,并让其指向'该函数'的引用\n/^12/.constructor  // f RexExp(){[native code]}\nnew Date().constructor // ƒ Date() { [native code] }\nnull.constructor // 报错：Cannot read.. \nundefined.constructor // 报错：Cannot read.. \n发现确实能校验一些typeof 不能校验的，但是 null和undefined没有'指针'啊,而且写继承的时候，指针是可以被改的，稍不注意就凉凉了...\n - 把这些都整合到一起基本也都够用了，可是并不优雅\n有请toString登场....\n华丽分割线\n\n----------\ntoString() 是 Object 的原型方法，调用该方法，默认返回当前对象的 [[Class]] 。这是一个内部属性，其格式为 [object Xxx] ，其中 Xxx 就是对象的类型。完美~~\n\n    Object.prototype.toString.call(null) ; // [object Null]\n    Object.prototype.toString.call(new Function()) ; // [object Function]\n    Object.prototype.toString.call(new Date()) ; // [object Date]\n但是我觉得除了obj比较特殊之外，其他类型,typeof都可以判断，不需要再多调用一次toString方法，所以最终封装 =>\n\n    function typeDetection (n) {\n      if (typeof n === 'object') {\n      \treturn Object.prototype.toString.call(n)\n      } else {\n      \treturn typeof n\n      }\n    }\n直接调用typeDetection('')  // string\n\n五：千分位的实现\n--------\n**Q:字符：1234567890.12 转换为：1,234,567,890.12**\n\n**R:**\n个人用了while循环的方式\n    function strFilter (str) {\n      let newStr = String(str).split('.') // 切分原始字符,兼容传入Number类型\n      let transStr = newStr[0],resStr = [] \n      while (transStr/1000 > 1) { // 判断是否大于1000\n      \tlet whildStr = String((transStr/1000).toFixed(3)).split('.') // 这里一定要保留三位小数,否则正数部分末位的0就会丢失,又转为String，因为Number没有split方法\n      \ttransStr = whildStr[0] // 每次都取小数点以前的(正数部分)\n      \tresStr.unshift(whildStr[1]) // 向前插入小数点后的数字()\n      }\n      // 除以1000剩下的数 + 每次除以1000后的数 + 原来小数\n      let res2 = newStr[1]?('.' + newStr[1]):''\n      let resComma = resStr.length?(',' + resStr.join(',')): ''\n      return transStr + resComma + res2\n    }\n虽然实现代码很多，但个人觉得还算易懂\n\n网上看到用正则的，确实简短：\n\n    function strFilter2 (n) {\n      let s = String(n)\n      let re = /\\d{1,3}(?=(\\d{3})+$)/g\n      let n1 = s.replace(/^(\\d+)((\\.\\d+)?)$/, function (s, s1, s2) { return s1.replace(re, '$&,') + s2 })\n      return n1\n    }\n其实正则在好多场景都体现出优势，只是不能被轻易想到\n\n**Q:以下this指向**\n\n    (function () {\n      \"use strict\";\n      console.log(this) // undefined\n    })()\n    (function () {\n      \"use strict\";\n      console.log(this) // window\n    })()\n**R:严格模式下，除构造函数、对象内置函数外，this均指向 undefined**\n\n**Q:script标签的 async、defer啥区别？**\n**R:别说那没用的，上图**\n\n![Alt text](/img/tidy/image-1.png)\n啥也不加：script读取和解析脚本阶段都会阻断页面执行，\n加async  : script解析脚本阶段会阻断页面执行\n加defer   : scriptj脚本将在页面完成解析时执行\n\nQ:[1,2,3].map(parseInt)的结果？\nR:之前用到parseInt，只知道是向下取整，翻了下w3c的parseInt定义: Crazy\n\n![Alt text](/img/tidy/image-4.png)\n再看map，\n\n![Alt text](/img/tidy/image-5.png)\nparseInt就是回调函数,map会传给parseInt三个参数，parseInt只识别前两个，\n那也就是得到了 \n\n    function parseInt1 (item, index) {\n      return parseInt(item,index)\n    }\n得到  `parseInt(1,0) parseInt(2,1) parseInt(3,2)`\n\n    parseInt(1,0)，parseInt定义radix不传或者0,按10进制，也就得到了1\n    parseInt(2,1)，parseInt又定义第二个参数 radix 位于 2-36(除了0)，否则返回NaN,所以得到NaN\n\n    parseInt(3,2),这个据说(网上)是 3不是 2的合法进制数 (只有0和1)，但是个人试了试\n    parseInt(10,2) => 3，parseInt(20, 2) => 6,parseInt(30, 2) => NaN\n\n    ,发现只要是字符首字符小于 radix都是可以的，但是一旦首字符 >= radix，就会返回NaN\n\n参考文章：[判断js数据类型的四种方法][1]\n\n \n\n   \n    \n    \n\n\n  [1]: https://www.cnblogs.com/onepixel/p/5126046.html","slug":"test-my-site","published":1,"updated":"2025-04-14T01:41:21.713Z","comments":1,"layout":"post","photos":[],"_id":"cma39gdzs000a8rdng73vhtp1","content":"<p>本文为知识整理，可能工作中用到这些东西不多，可是总有人想让你会</p>\n<hr>\n<h2 id=\"前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\"><a href=\"#前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\" class=\"headerlink\" title=\"  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\"></a>  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。<br>一：js继承</h2><hr>\n<p><strong>①：对象冒充实现继承：(可实现多继承)</strong></p>\n<hr>\n<p>——原理：让父类构造函数成为子类的方法，然后调用子类的方法，通过this关键字给所有属性和方法赋值</p>\n<pre><code>function Parent(name)\n&#123;\n    this.name=name;\n    this.sayName=function () &#123;\n        console.log(this.name);\n    &#125;\n&#125;\nfunction Child (cname) &#123;\n    this.parent=Parent;\n    this.parent(cname);\n    delete this.parent; // 删除无用的parent函数 == f Parent(name)\n&#125;\nvar mychild=new Child(&quot;名字&quot;);\nmychild.sayName();\n</code></pre>\n<p><strong>②：原型链继承 (不能实现多继承)</strong></p>\n<p>prototype</p>\n<hr>\n<pre><code>    function Parent (name, age) &#123;\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () &#123;\n      \tconsole.log(this.height)\n      &#125;\n    &#125;;\n    Parent.prototype.sayName = function () &#123;\n      console.log(this)\n    &#125;;\n    function Child (cname, cage, height) &#123;\n      this.height = height\n    &#125;\n\nChild.prototype = new Parent(); // Child原型指向Parent的一个实例\nChild.prototype.constructor = Child; // 把Child指向自己，不与Parent共享\nvar child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\nconsole.log(child) // 发现打印出来的属性都继承了，就是没值\n</code></pre>\n<p>child.ParFunc()：当访问ParFunc属性时，会先在child的实例属性中寻找，找不到就去child的原型对象上去找。一层一层的寻找构成了<strong>原型链</strong><br><img src=\"/img/tidy/image-3.png\" alt=\"Alt text\"><br>因为无法向父类构造函数传参;可以 new Parent(‘名字’, ‘年龄’)这时传参<br>注：如果想用原型给Child拓展方法：</p>\n<pre><code>Child.prototype.childHeight = function () &#123;\n      console.log(this.height)\n    &#125;\n</code></pre>\n<p>一定要写到Child.prototype &#x3D; new Parent()的下面，要么就被覆盖掉了。</p>\n<p><strong>③：call、apply继承(不能继承原型链，prototype上的)</strong></p>\n<hr>\n<pre><code>        function Parent (name, age) &#123;\n          this.name = name;\n          this.age = age;\n          this.ParFunc = function () &#123;\n          \tconsole.log(this.name)\n          &#125;\n        &#125;\n        \n        function Child (cname, cage, height) &#123;\n          Parent.call(this,cname,cage); // 继承的参数为当前函数的形参\n          // apply: Parent.call(this,arguments);\n          this.height = height;\n        &#125;\n        var child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\n        console.log(child)  //  ParFunc: ƒ () age: &quot;测试年龄&quot;\nname: &quot;测试名字&quot;\n</code></pre>\n<p><strong>④：组合继承：call+原型链继承</strong></p>\n<hr>\n<pre><code>function Parent (name, age) &#123;\n  this.name = name;\n  this.age = age;\n  this.ParFunc = function () &#123;\n      console.log(this.height)\n  &#125;\n&#125;\nParent.prototype.sayName = function () &#123;\n  console.log(this)\n&#125;\nfunction Child (cname, cage, height) &#123;\n  Parent.call(this, cname, cage); // 解决传参问题\n  this.height = height;\n&#125;;\nChild.prototype = new Parent()\nChild.prototype.constructor = Child; // 把Child指向自己，否则一直指向Parent\nvar child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\n</code></pre>\n<p> 比较常用的继承方式，缺点是 两次调用 Parent构造函数</p>\n<p> <strong>⑤：寄生组合继承：</strong></p>\n<p>cal+prototype</p>\n<hr>\n<pre><code>function Parent (name, age) &#123; // 父函数\n  this.name = name;\n  this.age = age;\n  this.ParFunc = function () &#123;\n      console.log(this.height)\n  &#125;\n&#125;\nParent.prototype.sayName = function () &#123;\n  console.log(this)\n&#125;\nfunction Child (cname, cage, height) &#123; // 子函数\n  Parent.call(this, cname, cage)\n  this.height = height;\n&#125;;\nvar createObj = function () &#123; // 中间函数继承 Parent\n  function Trans() &#123;&#125;;\n  Trans.prototype = Parent.prototype;\n  return new Trans();\n&#125;;\nChild.prototype = createObj()\nChild.prototype.constructor = Child; // 改回指针\nvar child = new Child(&#39;名字&#39;, &#39;年龄&#39;, &#39;身高&#39;)\nconsole.log(child)\n</code></pre>\n<h1 id=\"二：如何获取自定义属性，特例data-如何获取\"><a href=\"#二：如何获取自定义属性，特例data-如何获取\" class=\"headerlink\" title=\"二：如何获取自定义属性，特例data-*如何获取\"></a>二：如何获取自定义属性，特例data-*如何获取</h1><p>官方定义：<br>        data-<em>是 <strong>html5</strong> 新属性<br>        主要用于存储页面的自定义数据<br>        不应该包含大写字母（会默认转为小写）<br>        注释：用户代理会完全忽略前缀为 “data-“ 的自定义属性。<br>脑海里第一印象就是 getAttribute(),setAttribute()俩属性了，一个获取，一个设置<br>而平时又很少用到，但是平时用的框架什么的多数都用 data-</em> 这个自定义属性，那其实获取 data- 这类自定义属性的时候，还有个更方便的方法dataset</p>\n<pre><code>&lt;div data-a=&quot;aa&quot; id=&quot;div1&quot; data-b=&quot;bb&quot;&gt;&lt;/div&gt;\neg:var div1 = document.getElementById(&#39;div1&#39;)\nconsole.log(div1.dataset) // DOMStringMap &#123;a: &quot;测试&quot;, b: &quot;222&quot;&#125;a: &quot;测试&quot;b: &quot;222&quot;\n</code></pre>\n<p>用data-*作为自定义属性：可以一句话就获取到所有属性，获取方式也简便   </p>\n<h2 id=\"三：事件的几个阶段：捕获、目标-event-target，即触发过程-、冒泡\"><a href=\"#三：事件的几个阶段：捕获、目标-event-target，即触发过程-、冒泡\" class=\"headerlink\" title=\"三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡\"></a>三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡</h2><p>先盗个图</p>\n<p><img src=\"/img/tidy/image-2.png\" alt=\"Alt text\"><br>——冒泡(IE事件流)：从最深的节点向外传播，div -&gt; window,就好比往水里丢一个石子，一层层波浪抵达河边缘</p>\n<p>——捕获(网景)：从最外层向目标传递，window -&gt; div,就好比你去一个大企业集团找人，需要提供公司 &gt; 大部门 &gt; 小部门 &gt; 小组 &gt; 目标</p>\n<p>——目标：即触发过程event.target</p>\n<p>——target、currentTarget的区别：target这个属性指向的是目标过程中的DOM对象，也就是 <em><strong>触发事件监听的对象</strong></em>, currentTarget这个指向的是当前的对象，具体内容跟this一样，当this指向的是目标的时候(事件的目标阶段)，target与currentTarget相同</p>\n<p>——现在几乎所有的主流浏览器都支持冒泡；IE早起版本会跳过html直接跳到document，且不支持捕获。</p>\n<p>——平时多数用到冒泡多一些，事件代理(委托)也是通过事件冒泡的原理，让DOM节点可追溯，也可以利用冒泡的原理做埋点，避免新增DOM节点，改代码上线</p>\n<p>——事件句柄addEventListener(‘事件名’, ‘function’, false)，默认冒泡</p>\n<h2 id=\"四：判断数据类型，返回数据的具体类型\"><a href=\"#四：判断数据类型，返回数据的具体类型\" class=\"headerlink\" title=\"四：判断数据类型，返回数据的具体类型\"></a>四：判断数据类型，返回数据的具体类型</h2><p>emm… 那不就直接 <code>return typeof n</code> 不就完了，哦不对，再识别一下数组，因为数组的typeof也是对象，Array.isArray(n)…<br>&#x2F;^12&#x2F; 这返回啥？ wc,也是object吧，那咋区分，对，正则有test方法，再判断一下<br>    if (n.test) {<br>        return ‘RegExp’<br>    }<br>null好像也返回obj吧，时间 Date嘞，都返回obj也没毛病，万物皆对象啊。</p>\n<ul>\n<li><p>据说instanceof也可以：左侧是否是右侧的实例，也就是说每个类型我们都得判断，于是</p>\n<p> [] instanceof Array &#x2F;&#x2F; true<br> [] instanceof Object &#x2F;&#x2F; true</p>\n</li>\n</ul>\n<p>不光麻烦，返回的也不精确啊</p>\n<ul>\n<li>据说constructor也可以：js引擎会为函数添加prototype,并让其指向’该函数’的引用<br>&#x2F;^12&#x2F;.constructor  &#x2F;&#x2F; f RexExp(){[native code]}<br>new Date().constructor &#x2F;&#x2F; ƒ Date() { [native code] }<br>null.constructor &#x2F;&#x2F; 报错：Cannot read..<br>undefined.constructor &#x2F;&#x2F; 报错：Cannot read..<br>发现确实能校验一些typeof 不能校验的，但是 null和undefined没有’指针’啊,而且写继承的时候，指针是可以被改的，稍不注意就凉凉了…</li>\n<li>把这些都整合到一起基本也都够用了，可是并不优雅<br>有请toString登场….<br>华丽分割线</li>\n</ul>\n<hr>\n<p>toString() 是 Object 的原型方法，调用该方法，默认返回当前对象的 [[Class]] 。这是一个内部属性，其格式为 [object Xxx] ，其中 Xxx 就是对象的类型。完美~~</p>\n<pre><code>Object.prototype.toString.call(null) ; // [object Null]\nObject.prototype.toString.call(new Function()) ; // [object Function]\nObject.prototype.toString.call(new Date()) ; // [object Date]\n</code></pre>\n<p>但是我觉得除了obj比较特殊之外，其他类型,typeof都可以判断，不需要再多调用一次toString方法，所以最终封装 &#x3D;&gt;</p>\n<pre><code>function typeDetection (n) &#123;\n  if (typeof n === &#39;object&#39;) &#123;\n      return Object.prototype.toString.call(n)\n  &#125; else &#123;\n      return typeof n\n  &#125;\n&#125;\n</code></pre>\n<p>直接调用typeDetection(‘’)  &#x2F;&#x2F; string</p>\n<h2 id=\"五：千分位的实现\"><a href=\"#五：千分位的实现\" class=\"headerlink\" title=\"五：千分位的实现\"></a>五：千分位的实现</h2><p><strong>Q:字符：1234567890.12 转换为：1,234,567,890.12</strong></p>\n<p><strong>R:</strong><br>个人用了while循环的方式<br>    function strFilter (str) {<br>      let newStr &#x3D; String(str).split(‘.’) &#x2F;&#x2F; 切分原始字符,兼容传入Number类型<br>      let transStr &#x3D; newStr[0],resStr &#x3D; []<br>      while (transStr&#x2F;1000 &gt; 1) { &#x2F;&#x2F; 判断是否大于1000<br>          let whildStr &#x3D; String((transStr&#x2F;1000).toFixed(3)).split(‘.’) &#x2F;&#x2F; 这里一定要保留三位小数,否则正数部分末位的0就会丢失,又转为String，因为Number没有split方法<br>          transStr &#x3D; whildStr[0] &#x2F;&#x2F; 每次都取小数点以前的(正数部分)<br>          resStr.unshift(whildStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>) &#x2F;&#x2F; 向前插入小数点后的数字()<br>      }<br>      &#x2F;&#x2F; 除以1000剩下的数 + 每次除以1000后的数 + 原来小数<br>      let res2 &#x3D; newStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>?(‘.’ + newStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>):’’<br>      let resComma &#x3D; resStr.length?(‘,’ + resStr.join(‘,’)): ‘’<br>      return transStr + resComma + res2<br>    }<br>虽然实现代码很多，但个人觉得还算易懂</p>\n<p>网上看到用正则的，确实简短：</p>\n<pre><code>function strFilter2 (n) &#123;\n  let s = String(n)\n  let re = /\\d&#123;1,3&#125;(?=(\\d&#123;3&#125;)+$)/g\n  let n1 = s.replace(/^(\\d+)((\\.\\d+)?)$/, function (s, s1, s2) &#123; return s1.replace(re, &#39;$&amp;,&#39;) + s2 &#125;)\n  return n1\n&#125;\n</code></pre>\n<p>其实正则在好多场景都体现出优势，只是不能被轻易想到</p>\n<p><strong>Q:以下this指向</strong></p>\n<pre><code>(function () &#123;\n  &quot;use strict&quot;;\n  console.log(this) // undefined\n&#125;)()\n(function () &#123;\n  &quot;use strict&quot;;\n  console.log(this) // window\n&#125;)()\n</code></pre>\n<p><strong>R:严格模式下，除构造函数、对象内置函数外，this均指向 undefined</strong></p>\n<p><strong>Q:script标签的 async、defer啥区别？</strong><br><strong>R:别说那没用的，上图</strong></p>\n<p><img src=\"/img/tidy/image-1.png\" alt=\"Alt text\"><br>啥也不加：script读取和解析脚本阶段都会阻断页面执行，<br>加async  : script解析脚本阶段会阻断页面执行<br>加defer   : scriptj脚本将在页面完成解析时执行</p>\n<p>Q:[1,2,3].map(parseInt)的结果？<br>R:之前用到parseInt，只知道是向下取整，翻了下w3c的parseInt定义: Crazy</p>\n<p><img src=\"/img/tidy/image-4.png\" alt=\"Alt text\"><br>再看map，</p>\n<p><img src=\"/img/tidy/image-5.png\" alt=\"Alt text\"><br>parseInt就是回调函数,map会传给parseInt三个参数，parseInt只识别前两个，<br>那也就是得到了 </p>\n<pre><code>function parseInt1 (item, index) &#123;\n  return parseInt(item,index)\n&#125;\n</code></pre>\n<p>得到  <code>parseInt(1,0) parseInt(2,1) parseInt(3,2)</code></p>\n<pre><code>parseInt(1,0)，parseInt定义radix不传或者0,按10进制，也就得到了1\nparseInt(2,1)，parseInt又定义第二个参数 radix 位于 2-36(除了0)，否则返回NaN,所以得到NaN\n\nparseInt(3,2),这个据说(网上)是 3不是 2的合法进制数 (只有0和1)，但是个人试了试\nparseInt(10,2) =&gt; 3，parseInt(20, 2) =&gt; 6,parseInt(30, 2) =&gt; NaN\n\n,发现只要是字符首字符小于 radix都是可以的，但是一旦首字符 &gt;= radix，就会返回NaN\n</code></pre>\n<p>参考文章：<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">判断js数据类型的四种方法</a></p>\n","excerpt":"","more":"<p>本文为知识整理，可能工作中用到这些东西不多，可是总有人想让你会</p>\n<hr>\n<h2 id=\"前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\"><a href=\"#前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\" class=\"headerlink\" title=\"  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\"></a>  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。<br>一：js继承</h2><hr>\n<p><strong>①：对象冒充实现继承：(可实现多继承)</strong></p>\n<hr>\n<p>——原理：让父类构造函数成为子类的方法，然后调用子类的方法，通过this关键字给所有属性和方法赋值</p>\n<pre><code>function Parent(name)\n&#123;\n    this.name=name;\n    this.sayName=function () &#123;\n        console.log(this.name);\n    &#125;\n&#125;\nfunction Child (cname) &#123;\n    this.parent=Parent;\n    this.parent(cname);\n    delete this.parent; // 删除无用的parent函数 == f Parent(name)\n&#125;\nvar mychild=new Child(&quot;名字&quot;);\nmychild.sayName();\n</code></pre>\n<p><strong>②：原型链继承 (不能实现多继承)</strong></p>\n<p>prototype</p>\n<hr>\n<pre><code>    function Parent (name, age) &#123;\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () &#123;\n      \tconsole.log(this.height)\n      &#125;\n    &#125;;\n    Parent.prototype.sayName = function () &#123;\n      console.log(this)\n    &#125;;\n    function Child (cname, cage, height) &#123;\n      this.height = height\n    &#125;\n\nChild.prototype = new Parent(); // Child原型指向Parent的一个实例\nChild.prototype.constructor = Child; // 把Child指向自己，不与Parent共享\nvar child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\nconsole.log(child) // 发现打印出来的属性都继承了，就是没值\n</code></pre>\n<p>child.ParFunc()：当访问ParFunc属性时，会先在child的实例属性中寻找，找不到就去child的原型对象上去找。一层一层的寻找构成了<strong>原型链</strong><br><img src=\"/img/tidy/image-3.png\" alt=\"Alt text\"><br>因为无法向父类构造函数传参;可以 new Parent(‘名字’, ‘年龄’)这时传参<br>注：如果想用原型给Child拓展方法：</p>\n<pre><code>Child.prototype.childHeight = function () &#123;\n      console.log(this.height)\n    &#125;\n</code></pre>\n<p>一定要写到Child.prototype &#x3D; new Parent()的下面，要么就被覆盖掉了。</p>\n<p><strong>③：call、apply继承(不能继承原型链，prototype上的)</strong></p>\n<hr>\n<pre><code>        function Parent (name, age) &#123;\n          this.name = name;\n          this.age = age;\n          this.ParFunc = function () &#123;\n          \tconsole.log(this.name)\n          &#125;\n        &#125;\n        \n        function Child (cname, cage, height) &#123;\n          Parent.call(this,cname,cage); // 继承的参数为当前函数的形参\n          // apply: Parent.call(this,arguments);\n          this.height = height;\n        &#125;\n        var child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\n        console.log(child)  //  ParFunc: ƒ () age: &quot;测试年龄&quot;\nname: &quot;测试名字&quot;\n</code></pre>\n<p><strong>④：组合继承：call+原型链继承</strong></p>\n<hr>\n<pre><code>function Parent (name, age) &#123;\n  this.name = name;\n  this.age = age;\n  this.ParFunc = function () &#123;\n      console.log(this.height)\n  &#125;\n&#125;\nParent.prototype.sayName = function () &#123;\n  console.log(this)\n&#125;\nfunction Child (cname, cage, height) &#123;\n  Parent.call(this, cname, cage); // 解决传参问题\n  this.height = height;\n&#125;;\nChild.prototype = new Parent()\nChild.prototype.constructor = Child; // 把Child指向自己，否则一直指向Parent\nvar child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\n</code></pre>\n<p> 比较常用的继承方式，缺点是 两次调用 Parent构造函数</p>\n<p> <strong>⑤：寄生组合继承：</strong></p>\n<p>cal+prototype</p>\n<hr>\n<pre><code>function Parent (name, age) &#123; // 父函数\n  this.name = name;\n  this.age = age;\n  this.ParFunc = function () &#123;\n      console.log(this.height)\n  &#125;\n&#125;\nParent.prototype.sayName = function () &#123;\n  console.log(this)\n&#125;\nfunction Child (cname, cage, height) &#123; // 子函数\n  Parent.call(this, cname, cage)\n  this.height = height;\n&#125;;\nvar createObj = function () &#123; // 中间函数继承 Parent\n  function Trans() &#123;&#125;;\n  Trans.prototype = Parent.prototype;\n  return new Trans();\n&#125;;\nChild.prototype = createObj()\nChild.prototype.constructor = Child; // 改回指针\nvar child = new Child(&#39;名字&#39;, &#39;年龄&#39;, &#39;身高&#39;)\nconsole.log(child)\n</code></pre>\n<h1 id=\"二：如何获取自定义属性，特例data-如何获取\"><a href=\"#二：如何获取自定义属性，特例data-如何获取\" class=\"headerlink\" title=\"二：如何获取自定义属性，特例data-*如何获取\"></a>二：如何获取自定义属性，特例data-*如何获取</h1><p>官方定义：<br>        data-<em>是 <strong>html5</strong> 新属性<br>        主要用于存储页面的自定义数据<br>        不应该包含大写字母（会默认转为小写）<br>        注释：用户代理会完全忽略前缀为 “data-“ 的自定义属性。<br>脑海里第一印象就是 getAttribute(),setAttribute()俩属性了，一个获取，一个设置<br>而平时又很少用到，但是平时用的框架什么的多数都用 data-</em> 这个自定义属性，那其实获取 data- 这类自定义属性的时候，还有个更方便的方法dataset</p>\n<pre><code>&lt;div data-a=&quot;aa&quot; id=&quot;div1&quot; data-b=&quot;bb&quot;&gt;&lt;/div&gt;\neg:var div1 = document.getElementById(&#39;div1&#39;)\nconsole.log(div1.dataset) // DOMStringMap &#123;a: &quot;测试&quot;, b: &quot;222&quot;&#125;a: &quot;测试&quot;b: &quot;222&quot;\n</code></pre>\n<p>用data-*作为自定义属性：可以一句话就获取到所有属性，获取方式也简便   </p>\n<h2 id=\"三：事件的几个阶段：捕获、目标-event-target，即触发过程-、冒泡\"><a href=\"#三：事件的几个阶段：捕获、目标-event-target，即触发过程-、冒泡\" class=\"headerlink\" title=\"三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡\"></a>三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡</h2><p>先盗个图</p>\n<p><img src=\"/img/tidy/image-2.png\" alt=\"Alt text\"><br>——冒泡(IE事件流)：从最深的节点向外传播，div -&gt; window,就好比往水里丢一个石子，一层层波浪抵达河边缘</p>\n<p>——捕获(网景)：从最外层向目标传递，window -&gt; div,就好比你去一个大企业集团找人，需要提供公司 &gt; 大部门 &gt; 小部门 &gt; 小组 &gt; 目标</p>\n<p>——目标：即触发过程event.target</p>\n<p>——target、currentTarget的区别：target这个属性指向的是目标过程中的DOM对象，也就是 <em><strong>触发事件监听的对象</strong></em>, currentTarget这个指向的是当前的对象，具体内容跟this一样，当this指向的是目标的时候(事件的目标阶段)，target与currentTarget相同</p>\n<p>——现在几乎所有的主流浏览器都支持冒泡；IE早起版本会跳过html直接跳到document，且不支持捕获。</p>\n<p>——平时多数用到冒泡多一些，事件代理(委托)也是通过事件冒泡的原理，让DOM节点可追溯，也可以利用冒泡的原理做埋点，避免新增DOM节点，改代码上线</p>\n<p>——事件句柄addEventListener(‘事件名’, ‘function’, false)，默认冒泡</p>\n<h2 id=\"四：判断数据类型，返回数据的具体类型\"><a href=\"#四：判断数据类型，返回数据的具体类型\" class=\"headerlink\" title=\"四：判断数据类型，返回数据的具体类型\"></a>四：判断数据类型，返回数据的具体类型</h2><p>emm… 那不就直接 <code>return typeof n</code> 不就完了，哦不对，再识别一下数组，因为数组的typeof也是对象，Array.isArray(n)…<br>&#x2F;^12&#x2F; 这返回啥？ wc,也是object吧，那咋区分，对，正则有test方法，再判断一下<br>    if (n.test) {<br>        return ‘RegExp’<br>    }<br>null好像也返回obj吧，时间 Date嘞，都返回obj也没毛病，万物皆对象啊。</p>\n<ul>\n<li><p>据说instanceof也可以：左侧是否是右侧的实例，也就是说每个类型我们都得判断，于是</p>\n<p> [] instanceof Array &#x2F;&#x2F; true<br> [] instanceof Object &#x2F;&#x2F; true</p>\n</li>\n</ul>\n<p>不光麻烦，返回的也不精确啊</p>\n<ul>\n<li>据说constructor也可以：js引擎会为函数添加prototype,并让其指向’该函数’的引用<br>&#x2F;^12&#x2F;.constructor  &#x2F;&#x2F; f RexExp(){[native code]}<br>new Date().constructor &#x2F;&#x2F; ƒ Date() { [native code] }<br>null.constructor &#x2F;&#x2F; 报错：Cannot read..<br>undefined.constructor &#x2F;&#x2F; 报错：Cannot read..<br>发现确实能校验一些typeof 不能校验的，但是 null和undefined没有’指针’啊,而且写继承的时候，指针是可以被改的，稍不注意就凉凉了…</li>\n<li>把这些都整合到一起基本也都够用了，可是并不优雅<br>有请toString登场….<br>华丽分割线</li>\n</ul>\n<hr>\n<p>toString() 是 Object 的原型方法，调用该方法，默认返回当前对象的 [[Class]] 。这是一个内部属性，其格式为 [object Xxx] ，其中 Xxx 就是对象的类型。完美~~</p>\n<pre><code>Object.prototype.toString.call(null) ; // [object Null]\nObject.prototype.toString.call(new Function()) ; // [object Function]\nObject.prototype.toString.call(new Date()) ; // [object Date]\n</code></pre>\n<p>但是我觉得除了obj比较特殊之外，其他类型,typeof都可以判断，不需要再多调用一次toString方法，所以最终封装 &#x3D;&gt;</p>\n<pre><code>function typeDetection (n) &#123;\n  if (typeof n === &#39;object&#39;) &#123;\n      return Object.prototype.toString.call(n)\n  &#125; else &#123;\n      return typeof n\n  &#125;\n&#125;\n</code></pre>\n<p>直接调用typeDetection(‘’)  &#x2F;&#x2F; string</p>\n<h2 id=\"五：千分位的实现\"><a href=\"#五：千分位的实现\" class=\"headerlink\" title=\"五：千分位的实现\"></a>五：千分位的实现</h2><p><strong>Q:字符：1234567890.12 转换为：1,234,567,890.12</strong></p>\n<p><strong>R:</strong><br>个人用了while循环的方式<br>    function strFilter (str) {<br>      let newStr &#x3D; String(str).split(‘.’) &#x2F;&#x2F; 切分原始字符,兼容传入Number类型<br>      let transStr &#x3D; newStr[0],resStr &#x3D; []<br>      while (transStr&#x2F;1000 &gt; 1) { &#x2F;&#x2F; 判断是否大于1000<br>          let whildStr &#x3D; String((transStr&#x2F;1000).toFixed(3)).split(‘.’) &#x2F;&#x2F; 这里一定要保留三位小数,否则正数部分末位的0就会丢失,又转为String，因为Number没有split方法<br>          transStr &#x3D; whildStr[0] &#x2F;&#x2F; 每次都取小数点以前的(正数部分)<br>          resStr.unshift(whildStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>) &#x2F;&#x2F; 向前插入小数点后的数字()<br>      }<br>      &#x2F;&#x2F; 除以1000剩下的数 + 每次除以1000后的数 + 原来小数<br>      let res2 &#x3D; newStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>?(‘.’ + newStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>):’’<br>      let resComma &#x3D; resStr.length?(‘,’ + resStr.join(‘,’)): ‘’<br>      return transStr + resComma + res2<br>    }<br>虽然实现代码很多，但个人觉得还算易懂</p>\n<p>网上看到用正则的，确实简短：</p>\n<pre><code>function strFilter2 (n) &#123;\n  let s = String(n)\n  let re = /\\d&#123;1,3&#125;(?=(\\d&#123;3&#125;)+$)/g\n  let n1 = s.replace(/^(\\d+)((\\.\\d+)?)$/, function (s, s1, s2) &#123; return s1.replace(re, &#39;$&amp;,&#39;) + s2 &#125;)\n  return n1\n&#125;\n</code></pre>\n<p>其实正则在好多场景都体现出优势，只是不能被轻易想到</p>\n<p><strong>Q:以下this指向</strong></p>\n<pre><code>(function () &#123;\n  &quot;use strict&quot;;\n  console.log(this) // undefined\n&#125;)()\n(function () &#123;\n  &quot;use strict&quot;;\n  console.log(this) // window\n&#125;)()\n</code></pre>\n<p><strong>R:严格模式下，除构造函数、对象内置函数外，this均指向 undefined</strong></p>\n<p><strong>Q:script标签的 async、defer啥区别？</strong><br><strong>R:别说那没用的，上图</strong></p>\n<p><img src=\"/img/tidy/image-1.png\" alt=\"Alt text\"><br>啥也不加：script读取和解析脚本阶段都会阻断页面执行，<br>加async  : script解析脚本阶段会阻断页面执行<br>加defer   : scriptj脚本将在页面完成解析时执行</p>\n<p>Q:[1,2,3].map(parseInt)的结果？<br>R:之前用到parseInt，只知道是向下取整，翻了下w3c的parseInt定义: Crazy</p>\n<p><img src=\"/img/tidy/image-4.png\" alt=\"Alt text\"><br>再看map，</p>\n<p><img src=\"/img/tidy/image-5.png\" alt=\"Alt text\"><br>parseInt就是回调函数,map会传给parseInt三个参数，parseInt只识别前两个，<br>那也就是得到了 </p>\n<pre><code>function parseInt1 (item, index) &#123;\n  return parseInt(item,index)\n&#125;\n</code></pre>\n<p>得到  <code>parseInt(1,0) parseInt(2,1) parseInt(3,2)</code></p>\n<pre><code>parseInt(1,0)，parseInt定义radix不传或者0,按10进制，也就得到了1\nparseInt(2,1)，parseInt又定义第二个参数 radix 位于 2-36(除了0)，否则返回NaN,所以得到NaN\n\nparseInt(3,2),这个据说(网上)是 3不是 2的合法进制数 (只有0和1)，但是个人试了试\nparseInt(10,2) =&gt; 3，parseInt(20, 2) =&gt; 6,parseInt(30, 2) =&gt; NaN\n\n,发现只要是字符首字符小于 radix都是可以的，但是一旦首字符 &gt;= radix，就会返回NaN\n</code></pre>\n<p>参考文章：<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">判断js数据类型的四种方法</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cma39gdzp00028rdn0m6x8tax","category_id":"cma39gdzq00048rdn8oni93lo","_id":"cma39gdzr00078rdn9cwk562e"},{"post_id":"cma39gdzp00038rdnd3ci6boi","category_id":"cma39gdzq00048rdn8oni93lo","_id":"cma39gdzr00088rdn0v741fsn"},{"post_id":"cma39gdzr00098rdn134i71qk","category_id":"cma39gdzs000b8rdn6gxjcgfw","_id":"cma39gdzs000d8rdndeqe6mry"},{"post_id":"cma39gdzs000a8rdng73vhtp1","category_id":"cma39gdzs000c8rdn917ahx42","_id":"cma39gdzs000e8rdn5c95cyw4"}],"PostTag":[],"Tag":[]}}