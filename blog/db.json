{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/flexblock/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"source/img/image-1.png","path":"img/image-1.png","modified":0,"renderable":0},{"_id":"source/img/image-2.png","path":"img/image-2.png","modified":0,"renderable":0},{"_id":"source/img/image-3.png","path":"img/image-3.png","modified":0,"renderable":0},{"_id":"source/img/image-4.png","path":"img/image-4.png","modified":0,"renderable":0},{"_id":"source/img/image-5.png","path":"img/image-5.png","modified":0,"renderable":0},{"_id":"source/img/common/t1.jpg","path":"img/common/t1.jpg","modified":0,"renderable":0},{"_id":"source/img/common/t10.png","path":"img/common/t10.png","modified":0,"renderable":0},{"_id":"source/img/common/t11.jpg","path":"img/common/t11.jpg","modified":0,"renderable":0},{"_id":"source/img/common/t13.jpeg","path":"img/common/t13.jpeg","modified":0,"renderable":0},{"_id":"source/img/common/t2.jpg","path":"img/common/t2.jpg","modified":0,"renderable":0},{"_id":"source/img/common/t3.jpg","path":"img/common/t3.jpg","modified":0,"renderable":0},{"_id":"source/img/common/t4.jpeg","path":"img/common/t4.jpeg","modified":0,"renderable":0},{"_id":"source/img/common/t5.jpg","path":"img/common/t5.jpg","modified":0,"renderable":0},{"_id":"source/img/common/t6.jpeg","path":"img/common/t6.jpeg","modified":0,"renderable":0},{"_id":"source/img/common/t7.jpg","path":"img/common/t7.jpg","modified":0,"renderable":0},{"_id":"source/img/common/t8.jpg","path":"img/common/t8.jpg","modified":0,"renderable":0},{"_id":"source/img/common/t9.jpg","path":"img/common/t9.jpg","modified":0,"renderable":0},{"_id":"themes/flexblock/source/about.html","path":"about.html","modified":0,"renderable":1},{"_id":"themes/flexblock/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/flexblock/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/flexblock/source/icons-192.png","path":"icons-192.png","modified":0,"renderable":1},{"_id":"themes/flexblock/source/icons-512.png","path":"icons-512.png","modified":0,"renderable":1},{"_id":"themes/flexblock/source/manifest.json","path":"manifest.json","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/pitfall-diary.md","hash":"b5e3497e7ef3803e0cd5dbb454a0f8e74056cb91","modified":1710471482541},{"_id":"source/_posts/hello-world.md","hash":"af124137a0e4969324df29788d1f5cfffe1571dc","modified":1710381478737},{"_id":"source/_posts/test-my-site.md","hash":"f92da89ad142b065c525fc9a36e48c988fc3ceb5","modified":1710312736165},{"_id":"source/_posts/vite.md","hash":"20ff84fb23ec60be4e3a9d06a7b80b2dec798310","modified":1710418707246},{"_id":"source/img/common/t2.jpg","hash":"bbda9b7aa53ffa37335e46146725763c306cd80d","modified":1708425492921},{"_id":"source/img/common/t3.jpg","hash":"3ba67788202af783c8bf103eb53d267755d6a00b","modified":1708425492927},{"_id":"themes/flexblock/.gitignore","hash":"a010af107642d751bda979583183f366cf05fd7f","modified":1707358964541},{"_id":"themes/flexblock/.prettierrc.cjs","hash":"485d5a61c410ecebb2954e6762f7eb6f10f6b3e9","modified":1707358964541},{"_id":"themes/flexblock/LICENSE","hash":"da85e2f093615e3c008f60a94f85bf3d45106c95","modified":1707358964541},{"_id":"themes/flexblock/package.json","hash":"4444cdfac3e5c95144962471050b073779475139","modified":1707358964548},{"_id":"themes/flexblock/README.md","hash":"96fb9162640f7ea355d66e09a9e8718d4c8816db","modified":1707358964541},{"_id":"themes/flexblock/_config.yml","hash":"9a5e9d8db4a85996f62f9139f142e168898fa5b9","modified":1710814267758},{"_id":"themes/flexblock/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1707358964542},{"_id":"themes/flexblock/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1707358964542},{"_id":"themes/flexblock/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1707358964542},{"_id":"themes/flexblock/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1707358964542},{"_id":"themes/flexblock/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1707358964542},{"_id":"themes/flexblock/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1707358964542},{"_id":"themes/flexblock/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1707358964542},{"_id":"themes/flexblock/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1707358964542},{"_id":"themes/flexblock/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1707358964542},{"_id":"themes/flexblock/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1707358964543},{"_id":"themes/flexblock/languages/zh-CN.yml","hash":"eb0ef000853ecc6d5db678dd5b71caf53e809d02","modified":1707358964543},{"_id":"themes/flexblock/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1707358964543},{"_id":"themes/flexblock/layout/category.ejs","hash":"c631331af04cbfb8eb4567262a369be74fdf4acb","modified":1707358964547},{"_id":"themes/flexblock/layout/index.ejs","hash":"1170f7c070d40374753ac343783b9795349f6ec9","modified":1707358964547},{"_id":"themes/flexblock/layout/archive.ejs","hash":"691837b349f9c4c11651d3a45776130cbde3587e","modified":1707358964547},{"_id":"themes/flexblock/layout/post.ejs","hash":"e7afe45b5c524dcd7fc6115936dc4de8f6deaedc","modified":1707358964548},{"_id":"themes/flexblock/layout/tag.ejs","hash":"5d7eaf2d7cee35d6ec957db5edbf81f38b450ed7","modified":1707358964548},{"_id":"themes/flexblock/layout/page.ejs","hash":"1efd4bc229345efff68aa47ec4bf9a774ebee874","modified":1707358964547},{"_id":"themes/flexblock/layout/layout.ejs","hash":"c5224243301861957df9ef7c0454a8ce068e9ec1","modified":1708426273732},{"_id":"themes/flexblock/scripts/index.js","hash":"67587a84ed857755433949f153e891ec72e36a1f","modified":1707358964554},{"_id":"themes/flexblock/source/favicon.ico","hash":"2133229dab28e609e0ab6882210b80676878460d","modified":1710819949416},{"_id":"themes/flexblock/source/index.html","hash":"28820f538b03df64a5ac06ad8f7ff47a9b98822b","modified":1710818723698},{"_id":"themes/flexblock/.github/workflows/npm-publish.yml","hash":"6bbe7bfe0ef521a5c8d317e645ea194bb921be73","modified":1707358964541},{"_id":"themes/flexblock/layout/_partial/content.ejs","hash":"abac1b4977a15d63535aad7e4566e998baafac37","modified":1707358964543},{"_id":"themes/flexblock/layout/_partial/footer-other.ejs","hash":"9e93e20f3e3ded687abe00a6478e3c4dbfff479e","modified":1707358964543},{"_id":"themes/flexblock/layout/_partial/footer-script.ejs","hash":"1975bc07891e516c797de7d346db051745da7a63","modified":1707358964543},{"_id":"themes/flexblock/layout/_partial/article-list.ejs","hash":"e7d7858e52174cad048f7667083f87b2926f7a2e","modified":1708426550082},{"_id":"themes/flexblock/layout/_partial/footer.ejs","hash":"ec1b0fc3c90b768a9e5a7e17d12865661f6a6976","modified":1707358964543},{"_id":"themes/flexblock/layout/_partial/header.ejs","hash":"eee81ace5b6c75005cc59ee2be6ab37eb3c2b17f","modified":1707358964544},{"_id":"themes/flexblock/layout/_partial/nav.ejs","hash":"7da8b959230e2c3b1f20413263c578ad46a6b1a5","modified":1707358964544},{"_id":"themes/flexblock/layout/_partial/page.ejs","hash":"9411826c3a045f389d23cbc809e2ef46e21ea1fd","modified":1707358964544},{"_id":"themes/flexblock/layout/_partial/pagination.ejs","hash":"51a0986190719eea34e8624c87b346b4a199e49c","modified":1707358964544},{"_id":"themes/flexblock/layout/_widget/article-nav.ejs","hash":"8df3b527e6153323c8ded33768bd5e5267dfa422","modified":1707358964545},{"_id":"themes/flexblock/layout/_widget/category.ejs","hash":"488d6e93a6240d00d0c60c9f104f4304400415ba","modified":1707358964546},{"_id":"themes/flexblock/layout/_widget/comment.ejs","hash":"65eb6218afe3799205397a08a153738d7533a5e5","modified":1707358964546},{"_id":"themes/flexblock/layout/_widget/date.ejs","hash":"5c275ec71f7ce628599683393ae71cf95196f71f","modified":1707358964546},{"_id":"themes/flexblock/layout/_widget/updated.ejs","hash":"7ce6c7f3d22f7c394cf43f4f4b893dabc9503e83","modified":1707358964546},{"_id":"themes/flexblock/layout/_widget/widget-tags.ejs","hash":"8c360bf72e85a4cf48c6064b44a64828d059285a","modified":1707358964546},{"_id":"themes/flexblock/layout/_widget/widget-toc.ejs","hash":"0607e05641735d1fea7c74bc3c5b5f41f3bfb16f","modified":1707358964546},{"_id":"themes/flexblock/layout/_widget/widget-author.ejs","hash":"c26bb5561e26ce091c9d546b145c648013026ada","modified":1710472425894},{"_id":"themes/flexblock/layout/plug-in/aplayer.ejs","hash":"081184379480e5e154a7d06e1e059a38e964f10c","modified":1707358964547},{"_id":"themes/flexblock/layout/_widget/widget-notice.ejs","hash":"0a1ec45028b2abd123bb6a96017168fd55759971","modified":1707358964546},{"_id":"themes/flexblock/layout/plug-in/bilibili-emoji.ejs","hash":"55a1213ef83c32e59f9cc0a84502a87985da1db5","modified":1707358964547},{"_id":"themes/flexblock/layout/_widget/tag.ejs","hash":"2a1642735fe62363cee1eeeb09a3d36c2e8ac00e","modified":1707358964546},{"_id":"themes/flexblock/layout/_widget/widget-categorys.ejs","hash":"588237737f87a0ff69d00605c868c1297054d573","modified":1708311978453},{"_id":"themes/flexblock/layout/plug-in/dplayer.ejs","hash":"1ba83b2e10b840c6b5b72ece2f8448f4ec888347","modified":1707358964548},{"_id":"themes/flexblock/layout/_svg/icon-article.svg","hash":"f89ab250586cf0bd8108b77e48a5288f1d0dd512","modified":1707358964544},{"_id":"themes/flexblock/layout/plug-in/clipboard.ejs","hash":"2b774c9bca4a7d38bd964276b316bf78a6d75f7f","modified":1708427204249},{"_id":"themes/flexblock/layout/_svg/icon-categories.svg","hash":"cfe4012051132281255e211c28971e05726cdc43","modified":1707358964544},{"_id":"themes/flexblock/layout/_svg/icon-notice.svg","hash":"0d2f705ca65673eda3d38420aa512d83fcbc1e72","modified":1707358964544},{"_id":"themes/flexblock/layout/_svg/icon-toc.svg","hash":"05d2eecfb27deade461f25b2a396c230e18cd6b4","modified":1707358964545},{"_id":"themes/flexblock/layout/_svg/icon-tags.svg","hash":"0d974ce6d089d08ef009ad56d1b5d66bf9c2c1e6","modified":1707358964544},{"_id":"themes/flexblock/layout/_svg/social-github.svg","hash":"20c1b5fd5e06d10fb1e2cd83da0a18629dbe9c9d","modified":1707358964545},{"_id":"themes/flexblock/source/assets/AboutView-KBUynMIB.js","hash":"34b5baa73ec47a7219a9e93779068a73be4002b7","modified":1710818723698},{"_id":"themes/flexblock/layout/_svg/social-weibo.svg","hash":"ec9dd4c6d4cd7e1c860054c84cef570c7bbd0f35","modified":1707358964545},{"_id":"themes/flexblock/layout/_svg/social-ins.svg","hash":"fdcaac4ecfa35a05765a9aead8ed52c46634f4ed","modified":1707358964545},{"_id":"themes/flexblock/layout/_svg/social-zhihu.svg","hash":"c7dfaa6791aea630f418821890ae97ac4153ef50","modified":1707358964545},{"_id":"themes/flexblock/source/assets/AboutView-ug8e6cRs.css","hash":"1d28377a6f2c075bd4d63341337601a2327ba280","modified":1710818723698},{"_id":"themes/flexblock/source/assets/index-f5tDZRHd.css","hash":"2f3cbc243d6ec0775675fd4a4d696278af3fa819","modified":1710818723698},{"_id":"themes/flexblock/layout/_svg/social-twitter.svg","hash":"b9bbd30600b9832ac7e37fc116d78b389c047e1a","modified":1707358964545},{"_id":"themes/flexblock/layout/plug-in/util.js","hash":"e1299f3ed50b29cbfc1ccbe37b83fa16eec0b5b0","modified":1710471951091},{"_id":"themes/flexblock/layout/plug-in/clipboard.min.js","hash":"f48e9bfeca83e5057cc751e8c44fc07e9d976c06","modified":1708419857823},{"_id":"source/img/image-3.png","hash":"72bea213890bc582cf354f8b00b1421cd70b1dac","modified":1708421859792},{"_id":"source/img/image-4.png","hash":"6c5d64ae584770b79cdf9e7de2b6f1d8a151fba7","modified":1708421878314},{"_id":"source/img/common/t1.jpg","hash":"db11f62c99d1fd61f1feabcf06a0c472bdb50dbe","modified":1708425492906},{"_id":"source/img/common/t13.jpeg","hash":"e5d9b02c889d9b1436114dbd24b4326701a8a862","modified":1708425492971},{"_id":"source/img/common/t11.jpg","hash":"6d078363307f45d3c935545e965bdaadbf186687","modified":1708425492969},{"_id":"source/img/common/t4.jpeg","hash":"fcf3277a76efe853dc55fe57c8be17638f9d80de","modified":1708425492937},{"_id":"source/img/common/t9.jpg","hash":"a2da8ff0abf07e3e8c321d864217ef456a72bbba","modified":1708425492963},{"_id":"source/img/common/t6.jpeg","hash":"e0eec15eefdcce61f11904d7f3cfb2c1f875f35c","modified":1708425492950},{"_id":"source/img/common/t8.jpg","hash":"5c7f0a6e01e6276853d5a6ddc4f2a5a75c6aafe8","modified":1708425492957},{"_id":"themes/flexblock/source/assets/index--lwID5jZ.js","hash":"5aa04962f1786146d2a0c5831a614965174a4878","modified":1710818723698},{"_id":"source/img/image-2.png","hash":"ec582b5619c8a3d68ff651bef7484b9013bd1888","modified":1708421837416},{"_id":"source/img/image-5.png","hash":"8fdbf63e682f740ceee97ae41bc217133cd8c2a2","modified":1708421885684},{"_id":"source/img/common/t5.jpg","hash":"7f8ff32d8a464be13c099570048de263b96812be","modified":1708425492943},{"_id":"source/img/common/t7.jpg","hash":"997245da64594e851f05960a50a115010425a92b","modified":1708425492954},{"_id":"source/img/image-1.png","hash":"bdbfe3fbe3469ff1894b98cae31f4636ef06dfbf","modified":1708421816329},{"_id":"themes/flexblock/screenshots/flex-block--home.jpeg","hash":"7f6c738298108020ab2e4918592007a2d4bcb9d8","modified":1707358964550},{"_id":"themes/flexblock/screenshots/flex-block--post.jpeg","hash":"bc607db875e42fe2c82ed5130c07d67cca5adc41","modified":1707358964552},{"_id":"themes/flexblock/screenshots/flex-block.png","hash":"93a5456d4f3a51f5e9fd4a957b85584273083fe6","modified":1707358964553},{"_id":"source/img/common/t10.png","hash":"aeba1ffd7cb02cb54d14167346902abfe86e9b8b","modified":1708425492966},{"_id":"public/index.html","hash":"7c55e242563f591cb41b1f92f69296fe29f12f2f","modified":1710819333619},{"_id":"public/archives/index.html","hash":"3aaf6da8f27aa6532b2322b700c79622656d8b66","modified":1710819333619},{"_id":"public/archives/2018/index.html","hash":"0b0afd20cb9a1c1d2a2b66a4bf85ec8f1d3c7245","modified":1710819333619},{"_id":"public/archives/2018/09/index.html","hash":"0b0afd20cb9a1c1d2a2b66a4bf85ec8f1d3c7245","modified":1710819333619},{"_id":"public/archives/2024/index.html","hash":"638e612d09aeb92173ec81358991cd7143da98f7","modified":1710819333619},{"_id":"public/archives/2024/02/index.html","hash":"91ca84946c004c44e2997ad667d4cab9e58f0326","modified":1710819333619},{"_id":"public/archives/2024/03/index.html","hash":"e4484a49b1215bb7e9974ed38c3aac197a365f94","modified":1710819333619},{"_id":"public/categories/脚手架/index.html","hash":"01b2e4483a9ad09665a4eb2b07c08ff8d1d659ca","modified":1710819333619},{"_id":"public/categories/js/index.html","hash":"e885217b5f3130f9364fad3a25f78496b6ada556","modified":1710819333619},{"_id":"public/2024/02/23/vite/index.html","hash":"acf5ea1c6fb4ac8bcb807c759447ac80cc276a94","modified":1710819333619},{"_id":"public/2024/03/14/pitfall-diary/index.html","hash":"edd6c7a305f057e20c41f98399d9c5dadbcd4249","modified":1710819333619},{"_id":"public/2018/09/29/test-my-site/index.html","hash":"534c5869d89a2e13e0f31ab02096d11db809fcc0","modified":1710819333619},{"_id":"public/2024/03/19/hello-world/index.html","hash":"1d7a4f87004cf90c73606de136a7810cffb880f6","modified":1710819333619},{"_id":"public/assets/AboutView-ug8e6cRs.css","hash":"1d28377a6f2c075bd4d63341337601a2327ba280","modified":1710819333619},{"_id":"public/assets/index-f5tDZRHd.css","hash":"2f3cbc243d6ec0775675fd4a4d696278af3fa819","modified":1710819333619},{"_id":"public/assets/AboutView-KBUynMIB.js","hash":"34b5baa73ec47a7219a9e93779068a73be4002b7","modified":1710819333619},{"_id":"public/assets/index--lwID5jZ.js","hash":"5aa04962f1786146d2a0c5831a614965174a4878","modified":1710819333619},{"_id":"themes/flexblock/source/css/_partial/card.styl","hash":"ce4215a8f91f1c2136a192c8004ea439b11c2abc","modified":1710819840084},{"_id":"themes/flexblock/source/css/_partial/content.styl","hash":"3d489acf1c6c4903c0a2e2bf47daee58a0a55445","modified":1710819840085},{"_id":"themes/flexblock/source/css/_partial/footer.styl","hash":"00796f433ed85bd9186be3b2d16deb90b682d1d1","modified":1710819840085},{"_id":"themes/flexblock/source/css/_partial/header.styl","hash":"b3df8393a64cbcd16bb586e9b656a31e679260da","modified":1710819840086},{"_id":"themes/flexblock/source/css/_partial/nav.styl","hash":"8a90c260ee4ab99001fc414accd661e7fdb235d5","modified":1710819840086},{"_id":"themes/flexblock/source/css/_partial/pagination.styl","hash":"bdd9fede0c8f23af3e9b0cbc4f356e3148721416","modified":1710819840086},{"_id":"themes/flexblock/source/css/_util/mixins.styl","hash":"70cf83071cfa7823045ea6f355f47b0aa26d23f8","modified":1710819840086},{"_id":"themes/flexblock/source/css/_partial/page.styl","hash":"2d0fcee623a70283e53134fb2e16f2f7fa4d6d95","modified":1710819840086},{"_id":"themes/flexblock/source/css/_util/theme.styl","hash":"1d7c69498b68e85f2a048acfa6924df5070ddc48","modified":1710819840087},{"_id":"themes/flexblock/source/css/_util/variables.styl","hash":"b184fe67edca77ae4cd2e1c23e624b6ef86354e4","modified":1710819840087},{"_id":"themes/flexblock/source/js/script.js","hash":"8f0900b1b6bbd1fdc463fbc77f3deb5e598c9871","modified":1710819840126},{"_id":"themes/flexblock/source/css/style.styl","hash":"f388a27e55579eb3ecd726c580c2253a48f68fc3","modified":1710819840087},{"_id":"themes/flexblock/source/icons-192.png","hash":"6fa138cc9a747781f072732cedce7e61235d2e65","modified":1710820063021},{"_id":"themes/flexblock/source/manifest.json","hash":"2fc024dd01277c0473909999f27861ded4d57ba8","modified":1710820277377},{"_id":"themes/flexblock/source/about.html","hash":"ae30f1f056084b132cce4bfa14cfa12b6f43e9c9","modified":1710819437510},{"_id":"themes/flexblock/source/icons-512.png","hash":"6d93e5e9dc990cd9886d6d51928bda1614808367","modified":1710820063117}],"Category":[{"name":"js","_id":"cltxtao620003dycgcewu98pk"},{"name":"脚手架","_id":"cltxtao630006dycgfr1ugb9u"}],"Data":[],"Page":[],"Post":[{"title":"Hello Hexo","toc":"前端","cover":"/img/common/t2.jpg","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello Hexo\ntoc: 前端\ncover: /img/common/t2.jpg\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2024-03-19T03:33:54.122Z","updated":"2024-03-19T03:33:54.122Z","_id":"cltxtllmo0000gqcg8z67exp8","comments":1,"layout":"post","photos":[],"content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"踩坑记","date":"2024-03-14T12:18:13.000Z","cover":"/img/common/t4.jpeg","_content":"# 持续更新\n\n## Cookie在部分ios上设置值失效\n```\nCookies.set(luckyKey, { expires: 1 }); // ❌\nCookies.set(luckyKey, 1, { expires: 1 }); // ✅\n```\n--------------------------------------------------------------------------------\n## Video自定义 播放按钮层级问题\nQ: 播放按钮在部分ios手机上点击播放后会在下层(已设置z-index)\nA: 给video标签设置position, 此时产生了一个问题，点击播放后，会闪几下(应该是封面和视频的间隙)，解决闪烁可以去掉封面，使用div背景做封面解决\nQ: 有的ios手机会出现播放按钮(h5无此图标,应该是webview渲染的)\nA: 监听视频播放状态，视频播放的时候再显示video\n\n--------------------------------------------------------------------------------\n## swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)\nQ: 使用了swiper轮播插件，在高版本ios上多个swiper-item时，中间的translate3d z轴出现负数,导致层级在下边，整个swiper-item无法点击\nA: 强制设置z轴为0\n.swiper-slide{\n  &.swiper-slide-active{\n    transform: translate3d(0px, 0px, 0px) rotateX(0deg) rotateY(0deg) scale(1) !important;\n  }\n}\n\n--------------------------------------------------------------------------------\n## h5在iOS点击出现的高亮黑色背景层\n-webkit-tap-highlight-color:transparent;\n-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\ntap-highlight-color: rgba(0, 0, 0, 0);\n\n--------------------------------------------------------------------------------\n## html内动态引入图片\nbackgroundImage: item.gold ? `url(${require(`../../web-sync/img/ball/${item.gold}.png`)})` : ''\n\n## swiper自适应高度,降低滑动灵敏度\n:autoHeight=\"true\" // 自适应高度\n:touchRatio=\"0.2\" // 降低滑动灵敏度\n如何把内容加到页码(swiper-pagination)和swiper-slide中间\n```\nconst pagination = {\n  el: '.swiper-pagination',\n  clickable: true,\n  renderBullet: function (index, className) {\n    return '<span class=\"' + className + '\"></span>';\n  },\n}\n```\n\n## 类似stroke效果,使用shadow\n```\ntext-shadow: #FF7E5E 1px 0 0,#FF7E5E 0 1px 0,#FF7E5E -1px 0 0,#FF7E5E 0 -1px 0;\n```\n## animation动画抖动\nQ: animation动画(大小会变), 在ios上和相邻定位元素出现层级错乱频闪\nA: 给父元素设置overflow:hidden;\n\n--------------------------------------------------------------------------------\n## css动画函数复用\nQ: 相同动画，不同的结束位置,复用同一个keyframes, \n\n一个列表，每个元素有transform属性，想透传给@keyframes\n```\n@keyframes fadeInTopRight {\n  from {\n    opacity: 0;\n    transform: translate3d(375px, -1200px, 0);\n  }\n  to {\n    opacity: 1;\n    transform:  translate3d(100%, 100%, 0);\n  }\n}\n```\nA:\n>https://www.cnblogs.com/coco1s/p/17186878.html\n\n将结束动画设置获取变量，但是变量是每个item的变量\nvue\n\n```\n<bet-icon\n  :num=\"k.num\"\n  v-for=\"k in currentBetting[item]\"\n  :key=\"k.id\"\n  :style=\"{\n    transform: k.transform,\n    animationDuring: k.animationDuring,\n    animationDelay: k.animationDelay,\n    zIndex: k.zIndex,\n    '--end': k.end\n  }\"\n  :class=\"{self: k.self}\"\n  ></bet-icon>\n```\ncss\n\n```\n@keyframes fadeInTopRight {\n  from {\n    opacity: 0;\n    transform: translate3d(375px, -1200px, 0);\n  }\n  to {\n    opacity: 1;\n    transform:  var(--end);\n  }\n}\n```\n--------------------------------------------------------------------------------","source":"_posts/pitfall-diary.md","raw":"---\ntitle: 踩坑记\ndate: 2024-03-14 20:18:13\ntags:\ncover: /img/common/t4.jpeg\n---\n# 持续更新\n\n## Cookie在部分ios上设置值失效\n```\nCookies.set(luckyKey, { expires: 1 }); // ❌\nCookies.set(luckyKey, 1, { expires: 1 }); // ✅\n```\n--------------------------------------------------------------------------------\n## Video自定义 播放按钮层级问题\nQ: 播放按钮在部分ios手机上点击播放后会在下层(已设置z-index)\nA: 给video标签设置position, 此时产生了一个问题，点击播放后，会闪几下(应该是封面和视频的间隙)，解决闪烁可以去掉封面，使用div背景做封面解决\nQ: 有的ios手机会出现播放按钮(h5无此图标,应该是webview渲染的)\nA: 监听视频播放状态，视频播放的时候再显示video\n\n--------------------------------------------------------------------------------\n## swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)\nQ: 使用了swiper轮播插件，在高版本ios上多个swiper-item时，中间的translate3d z轴出现负数,导致层级在下边，整个swiper-item无法点击\nA: 强制设置z轴为0\n.swiper-slide{\n  &.swiper-slide-active{\n    transform: translate3d(0px, 0px, 0px) rotateX(0deg) rotateY(0deg) scale(1) !important;\n  }\n}\n\n--------------------------------------------------------------------------------\n## h5在iOS点击出现的高亮黑色背景层\n-webkit-tap-highlight-color:transparent;\n-webkit-tap-highlight-color: rgba(0, 0, 0, 0);\ntap-highlight-color: rgba(0, 0, 0, 0);\n\n--------------------------------------------------------------------------------\n## html内动态引入图片\nbackgroundImage: item.gold ? `url(${require(`../../web-sync/img/ball/${item.gold}.png`)})` : ''\n\n## swiper自适应高度,降低滑动灵敏度\n:autoHeight=\"true\" // 自适应高度\n:touchRatio=\"0.2\" // 降低滑动灵敏度\n如何把内容加到页码(swiper-pagination)和swiper-slide中间\n```\nconst pagination = {\n  el: '.swiper-pagination',\n  clickable: true,\n  renderBullet: function (index, className) {\n    return '<span class=\"' + className + '\"></span>';\n  },\n}\n```\n\n## 类似stroke效果,使用shadow\n```\ntext-shadow: #FF7E5E 1px 0 0,#FF7E5E 0 1px 0,#FF7E5E -1px 0 0,#FF7E5E 0 -1px 0;\n```\n## animation动画抖动\nQ: animation动画(大小会变), 在ios上和相邻定位元素出现层级错乱频闪\nA: 给父元素设置overflow:hidden;\n\n--------------------------------------------------------------------------------\n## css动画函数复用\nQ: 相同动画，不同的结束位置,复用同一个keyframes, \n\n一个列表，每个元素有transform属性，想透传给@keyframes\n```\n@keyframes fadeInTopRight {\n  from {\n    opacity: 0;\n    transform: translate3d(375px, -1200px, 0);\n  }\n  to {\n    opacity: 1;\n    transform:  translate3d(100%, 100%, 0);\n  }\n}\n```\nA:\n>https://www.cnblogs.com/coco1s/p/17186878.html\n\n将结束动画设置获取变量，但是变量是每个item的变量\nvue\n\n```\n<bet-icon\n  :num=\"k.num\"\n  v-for=\"k in currentBetting[item]\"\n  :key=\"k.id\"\n  :style=\"{\n    transform: k.transform,\n    animationDuring: k.animationDuring,\n    animationDelay: k.animationDelay,\n    zIndex: k.zIndex,\n    '--end': k.end\n  }\"\n  :class=\"{self: k.self}\"\n  ></bet-icon>\n```\ncss\n\n```\n@keyframes fadeInTopRight {\n  from {\n    opacity: 0;\n    transform: translate3d(375px, -1200px, 0);\n  }\n  to {\n    opacity: 1;\n    transform:  var(--end);\n  }\n}\n```\n--------------------------------------------------------------------------------","slug":"pitfall-diary","published":1,"updated":"2024-03-19T03:33:54.122Z","_id":"cltxtllmp0001gqcg4i0j56mn","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"持续更新\"><a href=\"#持续更新\" class=\"headerlink\" title=\"持续更新\"></a>持续更新</h1><h2 id=\"Cookie在部分ios上设置值失效\"><a href=\"#Cookie在部分ios上设置值失效\" class=\"headerlink\" title=\"Cookie在部分ios上设置值失效\"></a>Cookie在部分ios上设置值失效</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookies.set(luckyKey, &#123; expires: 1 &#125;); // ❌</span><br><span class=\"line\">Cookies.set(luckyKey, 1, &#123; expires: 1 &#125;); // ✅</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"Video自定义-播放按钮层级问题\"><a href=\"#Video自定义-播放按钮层级问题\" class=\"headerlink\" title=\"Video自定义 播放按钮层级问题\"></a>Video自定义 播放按钮层级问题</h2><p>Q: 播放按钮在部分ios手机上点击播放后会在下层(已设置z-index)<br>A: 给video标签设置position, 此时产生了一个问题，点击播放后，会闪几下(应该是封面和视频的间隙)，解决闪烁可以去掉封面，使用div背景做封面解决<br>Q: 有的ios手机会出现播放按钮(h5无此图标,应该是webview渲染的)<br>A: 监听视频播放状态，视频播放的时候再显示video</p>\n<hr>\n<h2 id=\"swiper插件-在ios高版本上item内的所有内容无法点击-复现机型-iphone-14-pro-max-17-x\"><a href=\"#swiper插件-在ios高版本上item内的所有内容无法点击-复现机型-iphone-14-pro-max-17-x\" class=\"headerlink\" title=\"swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)\"></a>swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)</h2><p>Q: 使用了swiper轮播插件，在高版本ios上多个swiper-item时，中间的translate3d z轴出现负数,导致层级在下边，整个swiper-item无法点击<br>A: 强制设置z轴为0<br>.swiper-slide{<br>  &amp;.swiper-slide-active{<br>    transform: translate3d(0px, 0px, 0px) rotateX(0deg) rotateY(0deg) scale(1) !important;<br>  }<br>}</p>\n<hr>\n<h2 id=\"h5在iOS点击出现的高亮黑色背景层\"><a href=\"#h5在iOS点击出现的高亮黑色背景层\" class=\"headerlink\" title=\"h5在iOS点击出现的高亮黑色背景层\"></a>h5在iOS点击出现的高亮黑色背景层</h2><p>-webkit-tap-highlight-color:transparent;<br>-webkit-tap-highlight-color: rgba(0, 0, 0, 0);<br>tap-highlight-color: rgba(0, 0, 0, 0);</p>\n<hr>\n<h2 id=\"html内动态引入图片\"><a href=\"#html内动态引入图片\" class=\"headerlink\" title=\"html内动态引入图片\"></a>html内动态引入图片</h2><p>backgroundImage: item.gold ? <code>url($&#123;require(</code>..&#x2F;..&#x2F;web-sync&#x2F;img&#x2F;ball&#x2F;${item.gold}.png<code>)&#125;)</code> : ‘’</p>\n<h2 id=\"swiper自适应高度-降低滑动灵敏度\"><a href=\"#swiper自适应高度-降低滑动灵敏度\" class=\"headerlink\" title=\"swiper自适应高度,降低滑动灵敏度\"></a>swiper自适应高度,降低滑动灵敏度</h2><p>:autoHeight&#x3D;”true” &#x2F;&#x2F; 自适应高度<br>:touchRatio&#x3D;”0.2” &#x2F;&#x2F; 降低滑动灵敏度<br>如何把内容加到页码(swiper-pagination)和swiper-slide中间</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const pagination = &#123;</span><br><span class=\"line\">  el: &#x27;.swiper-pagination&#x27;,</span><br><span class=\"line\">  clickable: true,</span><br><span class=\"line\">  renderBullet: function (index, className) &#123;</span><br><span class=\"line\">    return &#x27;&lt;span class=&quot;&#x27; + className + &#x27;&quot;&gt;&lt;/span&gt;&#x27;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类似stroke效果-使用shadow\"><a href=\"#类似stroke效果-使用shadow\" class=\"headerlink\" title=\"类似stroke效果,使用shadow\"></a>类似stroke效果,使用shadow</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text-shadow: #FF7E5E 1px 0 0,#FF7E5E 0 1px 0,#FF7E5E -1px 0 0,#FF7E5E 0 -1px 0;</span><br></pre></td></tr></table></figure>\n<h2 id=\"animation动画抖动\"><a href=\"#animation动画抖动\" class=\"headerlink\" title=\"animation动画抖动\"></a>animation动画抖动</h2><p>Q: animation动画(大小会变), 在ios上和相邻定位元素出现层级错乱频闪<br>A: 给父元素设置overflow:hidden;</p>\n<hr>\n<h2 id=\"css动画函数复用\"><a href=\"#css动画函数复用\" class=\"headerlink\" title=\"css动画函数复用\"></a>css动画函数复用</h2><p>Q: 相同动画，不同的结束位置,复用同一个keyframes, </p>\n<p>一个列表，每个元素有transform属性，想透传给@keyframes</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes fadeInTopRight &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">    transform: translate3d(375px, -1200px, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">    transform:  translate3d(100%, 100%, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A:</p>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/coco1s/p/17186878.html\">https://www.cnblogs.com/coco1s/p/17186878.html</a></p>\n</blockquote>\n<p>将结束动画设置获取变量，但是变量是每个item的变量<br>vue</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;bet-icon</span><br><span class=\"line\">  :num=&quot;k.num&quot;</span><br><span class=\"line\">  v-for=&quot;k in currentBetting[item]&quot;</span><br><span class=\"line\">  :key=&quot;k.id&quot;</span><br><span class=\"line\">  :style=&quot;&#123;</span><br><span class=\"line\">    transform: k.transform,</span><br><span class=\"line\">    animationDuring: k.animationDuring,</span><br><span class=\"line\">    animationDelay: k.animationDelay,</span><br><span class=\"line\">    zIndex: k.zIndex,</span><br><span class=\"line\">    &#x27;--end&#x27;: k.end</span><br><span class=\"line\">  &#125;&quot;</span><br><span class=\"line\">  :class=&quot;&#123;self: k.self&#125;&quot;</span><br><span class=\"line\">  &gt;&lt;/bet-icon&gt;</span><br></pre></td></tr></table></figure>\n<p>css</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes fadeInTopRight &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">    transform: translate3d(375px, -1200px, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">    transform:  var(--end);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n","excerpt":"","more":"<h1 id=\"持续更新\"><a href=\"#持续更新\" class=\"headerlink\" title=\"持续更新\"></a>持续更新</h1><h2 id=\"Cookie在部分ios上设置值失效\"><a href=\"#Cookie在部分ios上设置值失效\" class=\"headerlink\" title=\"Cookie在部分ios上设置值失效\"></a>Cookie在部分ios上设置值失效</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Cookies.set(luckyKey, &#123; expires: 1 &#125;); // ❌</span><br><span class=\"line\">Cookies.set(luckyKey, 1, &#123; expires: 1 &#125;); // ✅</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"Video自定义-播放按钮层级问题\"><a href=\"#Video自定义-播放按钮层级问题\" class=\"headerlink\" title=\"Video自定义 播放按钮层级问题\"></a>Video自定义 播放按钮层级问题</h2><p>Q: 播放按钮在部分ios手机上点击播放后会在下层(已设置z-index)<br>A: 给video标签设置position, 此时产生了一个问题，点击播放后，会闪几下(应该是封面和视频的间隙)，解决闪烁可以去掉封面，使用div背景做封面解决<br>Q: 有的ios手机会出现播放按钮(h5无此图标,应该是webview渲染的)<br>A: 监听视频播放状态，视频播放的时候再显示video</p>\n<hr>\n<h2 id=\"swiper插件-在ios高版本上item内的所有内容无法点击-复现机型-iphone-14-pro-max-17-x\"><a href=\"#swiper插件-在ios高版本上item内的所有内容无法点击-复现机型-iphone-14-pro-max-17-x\" class=\"headerlink\" title=\"swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)\"></a>swiper插件 在ios高版本上item内的所有内容无法点击(复现机型 iphone 14 pro max 17.x)</h2><p>Q: 使用了swiper轮播插件，在高版本ios上多个swiper-item时，中间的translate3d z轴出现负数,导致层级在下边，整个swiper-item无法点击<br>A: 强制设置z轴为0<br>.swiper-slide{<br>  &amp;.swiper-slide-active{<br>    transform: translate3d(0px, 0px, 0px) rotateX(0deg) rotateY(0deg) scale(1) !important;<br>  }<br>}</p>\n<hr>\n<h2 id=\"h5在iOS点击出现的高亮黑色背景层\"><a href=\"#h5在iOS点击出现的高亮黑色背景层\" class=\"headerlink\" title=\"h5在iOS点击出现的高亮黑色背景层\"></a>h5在iOS点击出现的高亮黑色背景层</h2><p>-webkit-tap-highlight-color:transparent;<br>-webkit-tap-highlight-color: rgba(0, 0, 0, 0);<br>tap-highlight-color: rgba(0, 0, 0, 0);</p>\n<hr>\n<h2 id=\"html内动态引入图片\"><a href=\"#html内动态引入图片\" class=\"headerlink\" title=\"html内动态引入图片\"></a>html内动态引入图片</h2><p>backgroundImage: item.gold ? <code>url($&#123;require(</code>..&#x2F;..&#x2F;web-sync&#x2F;img&#x2F;ball&#x2F;${item.gold}.png<code>)&#125;)</code> : ‘’</p>\n<h2 id=\"swiper自适应高度-降低滑动灵敏度\"><a href=\"#swiper自适应高度-降低滑动灵敏度\" class=\"headerlink\" title=\"swiper自适应高度,降低滑动灵敏度\"></a>swiper自适应高度,降低滑动灵敏度</h2><p>:autoHeight&#x3D;”true” &#x2F;&#x2F; 自适应高度<br>:touchRatio&#x3D;”0.2” &#x2F;&#x2F; 降低滑动灵敏度<br>如何把内容加到页码(swiper-pagination)和swiper-slide中间</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const pagination = &#123;</span><br><span class=\"line\">  el: &#x27;.swiper-pagination&#x27;,</span><br><span class=\"line\">  clickable: true,</span><br><span class=\"line\">  renderBullet: function (index, className) &#123;</span><br><span class=\"line\">    return &#x27;&lt;span class=&quot;&#x27; + className + &#x27;&quot;&gt;&lt;/span&gt;&#x27;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"类似stroke效果-使用shadow\"><a href=\"#类似stroke效果-使用shadow\" class=\"headerlink\" title=\"类似stroke效果,使用shadow\"></a>类似stroke效果,使用shadow</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text-shadow: #FF7E5E 1px 0 0,#FF7E5E 0 1px 0,#FF7E5E -1px 0 0,#FF7E5E 0 -1px 0;</span><br></pre></td></tr></table></figure>\n<h2 id=\"animation动画抖动\"><a href=\"#animation动画抖动\" class=\"headerlink\" title=\"animation动画抖动\"></a>animation动画抖动</h2><p>Q: animation动画(大小会变), 在ios上和相邻定位元素出现层级错乱频闪<br>A: 给父元素设置overflow:hidden;</p>\n<hr>\n<h2 id=\"css动画函数复用\"><a href=\"#css动画函数复用\" class=\"headerlink\" title=\"css动画函数复用\"></a>css动画函数复用</h2><p>Q: 相同动画，不同的结束位置,复用同一个keyframes, </p>\n<p>一个列表，每个元素有transform属性，想透传给@keyframes</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes fadeInTopRight &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">    transform: translate3d(375px, -1200px, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">    transform:  translate3d(100%, 100%, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>A:</p>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/coco1s/p/17186878.html\">https://www.cnblogs.com/coco1s/p/17186878.html</a></p>\n</blockquote>\n<p>将结束动画设置获取变量，但是变量是每个item的变量<br>vue</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;bet-icon</span><br><span class=\"line\">  :num=&quot;k.num&quot;</span><br><span class=\"line\">  v-for=&quot;k in currentBetting[item]&quot;</span><br><span class=\"line\">  :key=&quot;k.id&quot;</span><br><span class=\"line\">  :style=&quot;&#123;</span><br><span class=\"line\">    transform: k.transform,</span><br><span class=\"line\">    animationDuring: k.animationDuring,</span><br><span class=\"line\">    animationDelay: k.animationDelay,</span><br><span class=\"line\">    zIndex: k.zIndex,</span><br><span class=\"line\">    &#x27;--end&#x27;: k.end</span><br><span class=\"line\">  &#125;&quot;</span><br><span class=\"line\">  :class=&quot;&#123;self: k.self&#125;&quot;</span><br><span class=\"line\">  &gt;&lt;/bet-icon&gt;</span><br></pre></td></tr></table></figure>\n<p>css</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@keyframes fadeInTopRight &#123;</span><br><span class=\"line\">  from &#123;</span><br><span class=\"line\">    opacity: 0;</span><br><span class=\"line\">    transform: translate3d(375px, -1200px, 0);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  to &#123;</span><br><span class=\"line\">    opacity: 1;</span><br><span class=\"line\">    transform:  var(--end);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n"},{"title":"知识整理1","toc":"前端","date":"2018-09-29T02:02:01.000Z","cover":"/img/common/t1.jpg","_content":"本文为知识整理，可能工作中用到这些东西不多，可是总有人想让你会\n\n\n----------\n\n\n  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。\n一：js继承\n----------------\n----------------------\n\n**①：对象冒充实现继承：(可实现多继承)**\n\n\n----------\n\n\n——原理：让父类构造函数成为子类的方法，然后调用子类的方法，通过this关键字给所有属性和方法赋值\n\n    function Parent(name)\n    {\n        this.name=name;\n        this.sayName=function () {\n            console.log(this.name);\n        }\n    }\n    function Child (cname) {\n        this.parent=Parent;\n        this.parent(cname);\n        delete this.parent; // 删除无用的parent函数 == f Parent(name)\n    }\n    var mychild=new Child(\"名字\");\n    mychild.sayName();\n    \n**②：原型链继承 (不能实现多继承)**\n\nprototype\n\n----------\n\n\n        function Parent (name, age) {\n    \t  this.name = name;\n    \t  this.age = age;\n    \t  this.ParFunc = function () {\n    \t  \tconsole.log(this.height)\n    \t  }\n    \t};\n    \tParent.prototype.sayName = function () {\n    \t  console.log(this)\n    \t};\n    \tfunction Child (cname, cage, height) {\n    \t  this.height = height\n    \t}\n\n    Child.prototype = new Parent(); // Child原型指向Parent的一个实例\n    Child.prototype.constructor = Child; // 把Child指向自己，不与Parent共享\n\tvar child = new Child('测试名字', '测试年龄', '测试身高')\n\tconsole.log(child) // 发现打印出来的属性都继承了，就是没值\nchild.ParFunc()：当访问ParFunc属性时，会先在child的实例属性中寻找，找不到就去child的原型对象上去找。一层一层的寻找构成了**原型链**\n![Alt text](/img/image-3.png)\n因为无法向父类构造函数传参;可以 new Parent('名字', '年龄')这时传参\n注：如果想用原型给Child拓展方法：\n\n    Child.prototype.childHeight = function () {\n    \t  console.log(this.height)\n    \t}\n一定要写到Child.prototype = new Parent()的下面，要么就被覆盖掉了。\n\n**③：call、apply继承(不能继承原型链，prototype上的)**\n\n----------\n\n\n            function Parent (name, age) {\n        \t  this.name = name;\n        \t  this.age = age;\n        \t  this.ParFunc = function () {\n        \t  \tconsole.log(this.name)\n        \t  }\n        \t}\n        \t\n        \tfunction Child (cname, cage, height) {\n        \t  Parent.call(this,cname,cage); // 继承的参数为当前函数的形参\n        \t  // apply: Parent.call(this,arguments);\n        \t  this.height = height;\n        \t}\n        \tvar child = new Child('测试名字', '测试年龄', '测试身高')\n        \tconsole.log(child)  //  ParFunc: ƒ () age: \"测试年龄\"\n    name: \"测试名字\"\n**④：组合继承：call+原型链继承**\n\n\n----------\n\n\n    function Parent (name, age) {\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () {\n      \tconsole.log(this.height)\n      }\n    }\n    Parent.prototype.sayName = function () {\n      console.log(this)\n    }\n    function Child (cname, cage, height) {\n      Parent.call(this, cname, cage); // 解决传参问题\n      this.height = height;\n    };\n    Child.prototype = new Parent()\n    Child.prototype.constructor = Child; // 把Child指向自己，否则一直指向Parent\n    var child = new Child('测试名字', '测试年龄', '测试身高')\n 比较常用的继承方式，缺点是 两次调用 Parent构造函数\n   \n **⑤：寄生组合继承：**\n\ncal+prototype\n\n----------\n\n    function Parent (name, age) { // 父函数\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () {\n      \tconsole.log(this.height)\n      }\n    }\n    Parent.prototype.sayName = function () {\n      console.log(this)\n    }\n    function Child (cname, cage, height) { // 子函数\n      Parent.call(this, cname, cage)\n      this.height = height;\n    };\n    var createObj = function () { // 中间函数继承 Parent\n      function Trans() {};\n      Trans.prototype = Parent.prototype;\n      return new Trans();\n    };\n    Child.prototype = createObj()\n    Child.prototype.constructor = Child; // 改回指针\n    var child = new Child('名字', '年龄', '身高')\n    console.log(child)\n\n二：如何获取自定义属性，特例data-*如何获取\n=================\n官方定义：\n        data-*是 **html5** 新属性\n        主要用于存储页面的自定义数据\n        不应该包含大写字母（会默认转为小写）\n        注释：用户代理会完全忽略前缀为 \"data-\" 的自定义属性。\n脑海里第一印象就是 getAttribute(),setAttribute()俩属性了，一个获取，一个设置\n而平时又很少用到，但是平时用的框架什么的多数都用 data-* 这个自定义属性，那其实获取 data- 这类自定义属性的时候，还有个更方便的方法dataset\n\n    <div data-a=\"aa\" id=\"div1\" data-b=\"bb\"></div>\n    eg:var div1 = document.getElementById('div1')\n    console.log(div1.dataset) // DOMStringMap {a: \"测试\", b: \"222\"}a: \"测试\"b: \"222\"\n用data-*作为自定义属性：可以一句话就获取到所有属性，获取方式也简便   \n\n三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡\n---------\n先盗个图\n\n![Alt text](/img/image-2.png)\n——冒泡(IE事件流)：从最深的节点向外传播，div -> window,就好比往水里丢一个石子，一层层波浪抵达河边缘\n\n——捕获(网景)：从最外层向目标传递，window -> div,就好比你去一个大企业集团找人，需要提供公司 > 大部门 > 小部门 > 小组 > 目标\n\n——目标：即触发过程event.target\n\n——target、currentTarget的区别：target这个属性指向的是目标过程中的DOM对象，也就是 ***触发事件监听的对象***, currentTarget这个指向的是当前的对象，具体内容跟this一样，当this指向的是目标的时候(事件的目标阶段)，target与currentTarget相同\n\n——现在几乎所有的主流浏览器都支持冒泡；IE早起版本会跳过html直接跳到document，且不支持捕获。\n\n——平时多数用到冒泡多一些，事件代理(委托)也是通过事件冒泡的原理，让DOM节点可追溯，也可以利用冒泡的原理做埋点，避免新增DOM节点，改代码上线\n\n——事件句柄addEventListener('事件名', 'function', false)，默认冒泡\n\n四：判断数据类型，返回数据的具体类型\n------------------\nemm... 那不就直接 `return typeof n` 不就完了，哦不对，再识别一下数组，因为数组的typeof也是对象，Array.isArray(n)...   \n/^12/ 这返回啥？ wc,也是object吧，那咋区分，对，正则有test方法，再判断一下 \n    if (n.test) {\n        return 'RegExp'\n    }\nnull好像也返回obj吧，时间 Date嘞，都返回obj也没毛病，万物皆对象啊。\n\n - 据说instanceof也可以：左侧是否是右侧的实例，也就是说每个类型我们都得判断，于是\n\n \n\n    [] instanceof Array // true\n    [] instanceof Object // true\n不光麻烦，返回的也不精确啊\n\n - 据说constructor也可以：js引擎会为函数添加prototype,并让其指向'该函数'的引用\n/^12/.constructor  // f RexExp(){[native code]}\nnew Date().constructor // ƒ Date() { [native code] }\nnull.constructor // 报错：Cannot read.. \nundefined.constructor // 报错：Cannot read.. \n发现确实能校验一些typeof 不能校验的，但是 null和undefined没有'指针'啊,而且写继承的时候，指针是可以被改的，稍不注意就凉凉了...\n - 把这些都整合到一起基本也都够用了，可是并不优雅\n有请toString登场....\n华丽分割线\n\n----------\ntoString() 是 Object 的原型方法，调用该方法，默认返回当前对象的 [[Class]] 。这是一个内部属性，其格式为 [object Xxx] ，其中 Xxx 就是对象的类型。完美~~\n\n    Object.prototype.toString.call(null) ; // [object Null]\n    Object.prototype.toString.call(new Function()) ; // [object Function]\n    Object.prototype.toString.call(new Date()) ; // [object Date]\n但是我觉得除了obj比较特殊之外，其他类型,typeof都可以判断，不需要再多调用一次toString方法，所以最终封装 =>\n\n    function typeDetection (n) {\n      if (typeof n === 'object') {\n      \treturn Object.prototype.toString.call(n)\n      } else {\n      \treturn typeof n\n      }\n    }\n直接调用typeDetection('')  // string\n\n五：千分位的实现\n--------\n**Q:字符：1234567890.12 转换为：1,234,567,890.12**\n\n**R:**\n个人用了while循环的方式\n    function strFilter (str) {\n      let newStr = String(str).split('.') // 切分原始字符,兼容传入Number类型\n      let transStr = newStr[0],resStr = [] \n      while (transStr/1000 > 1) { // 判断是否大于1000\n      \tlet whildStr = String((transStr/1000).toFixed(3)).split('.') // 这里一定要保留三位小数,否则正数部分末位的0就会丢失,又转为String，因为Number没有split方法\n      \ttransStr = whildStr[0] // 每次都取小数点以前的(正数部分)\n      \tresStr.unshift(whildStr[1]) // 向前插入小数点后的数字()\n      }\n      // 除以1000剩下的数 + 每次除以1000后的数 + 原来小数\n      let res2 = newStr[1]?('.' + newStr[1]):''\n      let resComma = resStr.length?(',' + resStr.join(',')): ''\n      return transStr + resComma + res2\n    }\n虽然实现代码很多，但个人觉得还算易懂\n\n网上看到用正则的，确实简短：\n\n    function strFilter2 (n) {\n      let s = String(n)\n      let re = /\\d{1,3}(?=(\\d{3})+$)/g\n      let n1 = s.replace(/^(\\d+)((\\.\\d+)?)$/, function (s, s1, s2) { return s1.replace(re, '$&,') + s2 })\n      return n1\n    }\n其实正则在好多场景都体现出优势，只是不能被轻易想到\n\n**Q:以下this指向**\n\n    (function () {\n      \"use strict\";\n      console.log(this) // undefined\n    })()\n    (function () {\n      \"use strict\";\n      console.log(this) // window\n    })()\n**R:严格模式下，除构造函数、对象内置函数外，this均指向 undefined**\n\n**Q:script标签的 async、defer啥区别？**\n**R:别说那没用的，上图**\n\n![Alt text](/img/image-1.png)\n啥也不加：script读取和解析脚本阶段都会阻断页面执行，\n加async  : script解析脚本阶段会阻断页面执行\n加defer   : scriptj脚本将在页面完成解析时执行\n\nQ:[1,2,3].map(parseInt)的结果？\nR:之前用到parseInt，只知道是向下取整，翻了下w3c的parseInt定义: Crazy\n\n![Alt text](/img/image-4.png)\n再看map，\n\n![Alt text](/img/image-5.png)\nparseInt就是回调函数,map会传给parseInt三个参数，parseInt只识别前两个，\n那也就是得到了 \n\n    function parseInt1 (item, index) {\n      return parseInt(item,index)\n    }\n得到  `parseInt(1,0) parseInt(2,1) parseInt(3,2)`\n\n    parseInt(1,0)，parseInt定义radix不传或者0,按10进制，也就得到了1\n    parseInt(2,1)，parseInt又定义第二个参数 radix 位于 2-36(除了0)，否则返回NaN,所以得到NaN\n\n    parseInt(3,2),这个据说(网上)是 3不是 2的合法进制数 (只有0和1)，但是个人试了试\n    parseInt(10,2) => 3，parseInt(20, 2) => 6,parseInt(30, 2) => NaN\n\n    ,发现只要是字符首字符小于 radix都是可以的，但是一旦首字符 >= radix，就会返回NaN\n\n参考文章：[判断js数据类型的四种方法][1]\n\n \n\n   \n    \n    \n\n\n  [1]: https://www.cnblogs.com/onepixel/p/5126046.html","source":"_posts/test-my-site.md","raw":"---\ntitle: 知识整理1\ntoc: 前端\ndate: 2018-09-29 10:02:01\ncover: /img/common/t1.jpg\ncategories: js\n---\n本文为知识整理，可能工作中用到这些东西不多，可是总有人想让你会\n\n\n----------\n\n\n  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。\n一：js继承\n----------------\n----------------------\n\n**①：对象冒充实现继承：(可实现多继承)**\n\n\n----------\n\n\n——原理：让父类构造函数成为子类的方法，然后调用子类的方法，通过this关键字给所有属性和方法赋值\n\n    function Parent(name)\n    {\n        this.name=name;\n        this.sayName=function () {\n            console.log(this.name);\n        }\n    }\n    function Child (cname) {\n        this.parent=Parent;\n        this.parent(cname);\n        delete this.parent; // 删除无用的parent函数 == f Parent(name)\n    }\n    var mychild=new Child(\"名字\");\n    mychild.sayName();\n    \n**②：原型链继承 (不能实现多继承)**\n\nprototype\n\n----------\n\n\n        function Parent (name, age) {\n    \t  this.name = name;\n    \t  this.age = age;\n    \t  this.ParFunc = function () {\n    \t  \tconsole.log(this.height)\n    \t  }\n    \t};\n    \tParent.prototype.sayName = function () {\n    \t  console.log(this)\n    \t};\n    \tfunction Child (cname, cage, height) {\n    \t  this.height = height\n    \t}\n\n    Child.prototype = new Parent(); // Child原型指向Parent的一个实例\n    Child.prototype.constructor = Child; // 把Child指向自己，不与Parent共享\n\tvar child = new Child('测试名字', '测试年龄', '测试身高')\n\tconsole.log(child) // 发现打印出来的属性都继承了，就是没值\nchild.ParFunc()：当访问ParFunc属性时，会先在child的实例属性中寻找，找不到就去child的原型对象上去找。一层一层的寻找构成了**原型链**\n![Alt text](/img/image-3.png)\n因为无法向父类构造函数传参;可以 new Parent('名字', '年龄')这时传参\n注：如果想用原型给Child拓展方法：\n\n    Child.prototype.childHeight = function () {\n    \t  console.log(this.height)\n    \t}\n一定要写到Child.prototype = new Parent()的下面，要么就被覆盖掉了。\n\n**③：call、apply继承(不能继承原型链，prototype上的)**\n\n----------\n\n\n            function Parent (name, age) {\n        \t  this.name = name;\n        \t  this.age = age;\n        \t  this.ParFunc = function () {\n        \t  \tconsole.log(this.name)\n        \t  }\n        \t}\n        \t\n        \tfunction Child (cname, cage, height) {\n        \t  Parent.call(this,cname,cage); // 继承的参数为当前函数的形参\n        \t  // apply: Parent.call(this,arguments);\n        \t  this.height = height;\n        \t}\n        \tvar child = new Child('测试名字', '测试年龄', '测试身高')\n        \tconsole.log(child)  //  ParFunc: ƒ () age: \"测试年龄\"\n    name: \"测试名字\"\n**④：组合继承：call+原型链继承**\n\n\n----------\n\n\n    function Parent (name, age) {\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () {\n      \tconsole.log(this.height)\n      }\n    }\n    Parent.prototype.sayName = function () {\n      console.log(this)\n    }\n    function Child (cname, cage, height) {\n      Parent.call(this, cname, cage); // 解决传参问题\n      this.height = height;\n    };\n    Child.prototype = new Parent()\n    Child.prototype.constructor = Child; // 把Child指向自己，否则一直指向Parent\n    var child = new Child('测试名字', '测试年龄', '测试身高')\n 比较常用的继承方式，缺点是 两次调用 Parent构造函数\n   \n **⑤：寄生组合继承：**\n\ncal+prototype\n\n----------\n\n    function Parent (name, age) { // 父函数\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () {\n      \tconsole.log(this.height)\n      }\n    }\n    Parent.prototype.sayName = function () {\n      console.log(this)\n    }\n    function Child (cname, cage, height) { // 子函数\n      Parent.call(this, cname, cage)\n      this.height = height;\n    };\n    var createObj = function () { // 中间函数继承 Parent\n      function Trans() {};\n      Trans.prototype = Parent.prototype;\n      return new Trans();\n    };\n    Child.prototype = createObj()\n    Child.prototype.constructor = Child; // 改回指针\n    var child = new Child('名字', '年龄', '身高')\n    console.log(child)\n\n二：如何获取自定义属性，特例data-*如何获取\n=================\n官方定义：\n        data-*是 **html5** 新属性\n        主要用于存储页面的自定义数据\n        不应该包含大写字母（会默认转为小写）\n        注释：用户代理会完全忽略前缀为 \"data-\" 的自定义属性。\n脑海里第一印象就是 getAttribute(),setAttribute()俩属性了，一个获取，一个设置\n而平时又很少用到，但是平时用的框架什么的多数都用 data-* 这个自定义属性，那其实获取 data- 这类自定义属性的时候，还有个更方便的方法dataset\n\n    <div data-a=\"aa\" id=\"div1\" data-b=\"bb\"></div>\n    eg:var div1 = document.getElementById('div1')\n    console.log(div1.dataset) // DOMStringMap {a: \"测试\", b: \"222\"}a: \"测试\"b: \"222\"\n用data-*作为自定义属性：可以一句话就获取到所有属性，获取方式也简便   \n\n三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡\n---------\n先盗个图\n\n![Alt text](/img/image-2.png)\n——冒泡(IE事件流)：从最深的节点向外传播，div -> window,就好比往水里丢一个石子，一层层波浪抵达河边缘\n\n——捕获(网景)：从最外层向目标传递，window -> div,就好比你去一个大企业集团找人，需要提供公司 > 大部门 > 小部门 > 小组 > 目标\n\n——目标：即触发过程event.target\n\n——target、currentTarget的区别：target这个属性指向的是目标过程中的DOM对象，也就是 ***触发事件监听的对象***, currentTarget这个指向的是当前的对象，具体内容跟this一样，当this指向的是目标的时候(事件的目标阶段)，target与currentTarget相同\n\n——现在几乎所有的主流浏览器都支持冒泡；IE早起版本会跳过html直接跳到document，且不支持捕获。\n\n——平时多数用到冒泡多一些，事件代理(委托)也是通过事件冒泡的原理，让DOM节点可追溯，也可以利用冒泡的原理做埋点，避免新增DOM节点，改代码上线\n\n——事件句柄addEventListener('事件名', 'function', false)，默认冒泡\n\n四：判断数据类型，返回数据的具体类型\n------------------\nemm... 那不就直接 `return typeof n` 不就完了，哦不对，再识别一下数组，因为数组的typeof也是对象，Array.isArray(n)...   \n/^12/ 这返回啥？ wc,也是object吧，那咋区分，对，正则有test方法，再判断一下 \n    if (n.test) {\n        return 'RegExp'\n    }\nnull好像也返回obj吧，时间 Date嘞，都返回obj也没毛病，万物皆对象啊。\n\n - 据说instanceof也可以：左侧是否是右侧的实例，也就是说每个类型我们都得判断，于是\n\n \n\n    [] instanceof Array // true\n    [] instanceof Object // true\n不光麻烦，返回的也不精确啊\n\n - 据说constructor也可以：js引擎会为函数添加prototype,并让其指向'该函数'的引用\n/^12/.constructor  // f RexExp(){[native code]}\nnew Date().constructor // ƒ Date() { [native code] }\nnull.constructor // 报错：Cannot read.. \nundefined.constructor // 报错：Cannot read.. \n发现确实能校验一些typeof 不能校验的，但是 null和undefined没有'指针'啊,而且写继承的时候，指针是可以被改的，稍不注意就凉凉了...\n - 把这些都整合到一起基本也都够用了，可是并不优雅\n有请toString登场....\n华丽分割线\n\n----------\ntoString() 是 Object 的原型方法，调用该方法，默认返回当前对象的 [[Class]] 。这是一个内部属性，其格式为 [object Xxx] ，其中 Xxx 就是对象的类型。完美~~\n\n    Object.prototype.toString.call(null) ; // [object Null]\n    Object.prototype.toString.call(new Function()) ; // [object Function]\n    Object.prototype.toString.call(new Date()) ; // [object Date]\n但是我觉得除了obj比较特殊之外，其他类型,typeof都可以判断，不需要再多调用一次toString方法，所以最终封装 =>\n\n    function typeDetection (n) {\n      if (typeof n === 'object') {\n      \treturn Object.prototype.toString.call(n)\n      } else {\n      \treturn typeof n\n      }\n    }\n直接调用typeDetection('')  // string\n\n五：千分位的实现\n--------\n**Q:字符：1234567890.12 转换为：1,234,567,890.12**\n\n**R:**\n个人用了while循环的方式\n    function strFilter (str) {\n      let newStr = String(str).split('.') // 切分原始字符,兼容传入Number类型\n      let transStr = newStr[0],resStr = [] \n      while (transStr/1000 > 1) { // 判断是否大于1000\n      \tlet whildStr = String((transStr/1000).toFixed(3)).split('.') // 这里一定要保留三位小数,否则正数部分末位的0就会丢失,又转为String，因为Number没有split方法\n      \ttransStr = whildStr[0] // 每次都取小数点以前的(正数部分)\n      \tresStr.unshift(whildStr[1]) // 向前插入小数点后的数字()\n      }\n      // 除以1000剩下的数 + 每次除以1000后的数 + 原来小数\n      let res2 = newStr[1]?('.' + newStr[1]):''\n      let resComma = resStr.length?(',' + resStr.join(',')): ''\n      return transStr + resComma + res2\n    }\n虽然实现代码很多，但个人觉得还算易懂\n\n网上看到用正则的，确实简短：\n\n    function strFilter2 (n) {\n      let s = String(n)\n      let re = /\\d{1,3}(?=(\\d{3})+$)/g\n      let n1 = s.replace(/^(\\d+)((\\.\\d+)?)$/, function (s, s1, s2) { return s1.replace(re, '$&,') + s2 })\n      return n1\n    }\n其实正则在好多场景都体现出优势，只是不能被轻易想到\n\n**Q:以下this指向**\n\n    (function () {\n      \"use strict\";\n      console.log(this) // undefined\n    })()\n    (function () {\n      \"use strict\";\n      console.log(this) // window\n    })()\n**R:严格模式下，除构造函数、对象内置函数外，this均指向 undefined**\n\n**Q:script标签的 async、defer啥区别？**\n**R:别说那没用的，上图**\n\n![Alt text](/img/image-1.png)\n啥也不加：script读取和解析脚本阶段都会阻断页面执行，\n加async  : script解析脚本阶段会阻断页面执行\n加defer   : scriptj脚本将在页面完成解析时执行\n\nQ:[1,2,3].map(parseInt)的结果？\nR:之前用到parseInt，只知道是向下取整，翻了下w3c的parseInt定义: Crazy\n\n![Alt text](/img/image-4.png)\n再看map，\n\n![Alt text](/img/image-5.png)\nparseInt就是回调函数,map会传给parseInt三个参数，parseInt只识别前两个，\n那也就是得到了 \n\n    function parseInt1 (item, index) {\n      return parseInt(item,index)\n    }\n得到  `parseInt(1,0) parseInt(2,1) parseInt(3,2)`\n\n    parseInt(1,0)，parseInt定义radix不传或者0,按10进制，也就得到了1\n    parseInt(2,1)，parseInt又定义第二个参数 radix 位于 2-36(除了0)，否则返回NaN,所以得到NaN\n\n    parseInt(3,2),这个据说(网上)是 3不是 2的合法进制数 (只有0和1)，但是个人试了试\n    parseInt(10,2) => 3，parseInt(20, 2) => 6,parseInt(30, 2) => NaN\n\n    ,发现只要是字符首字符小于 radix都是可以的，但是一旦首字符 >= radix，就会返回NaN\n\n参考文章：[判断js数据类型的四种方法][1]\n\n \n\n   \n    \n    \n\n\n  [1]: https://www.cnblogs.com/onepixel/p/5126046.html","slug":"test-my-site","published":1,"updated":"2024-03-19T03:33:54.122Z","_id":"cltxtllmq0002gqcgh8wnbl6q","comments":1,"layout":"post","photos":[],"content":"<p>本文为知识整理，可能工作中用到这些东西不多，可是总有人想让你会</p>\n<hr>\n<h2 id=\"前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\"><a href=\"#前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\" class=\"headerlink\" title=\"  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\"></a>  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。<br>一：js继承</h2><hr>\n<p><strong>①：对象冒充实现继承：(可实现多继承)</strong></p>\n<hr>\n<p>——原理：让父类构造函数成为子类的方法，然后调用子类的方法，通过this关键字给所有属性和方法赋值</p>\n<pre><code>function Parent(name)\n&#123;\n    this.name=name;\n    this.sayName=function () &#123;\n        console.log(this.name);\n    &#125;\n&#125;\nfunction Child (cname) &#123;\n    this.parent=Parent;\n    this.parent(cname);\n    delete this.parent; // 删除无用的parent函数 == f Parent(name)\n&#125;\nvar mychild=new Child(&quot;名字&quot;);\nmychild.sayName();\n</code></pre>\n<p><strong>②：原型链继承 (不能实现多继承)</strong></p>\n<p>prototype</p>\n<hr>\n<pre><code>    function Parent (name, age) &#123;\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () &#123;\n      \tconsole.log(this.height)\n      &#125;\n    &#125;;\n    Parent.prototype.sayName = function () &#123;\n      console.log(this)\n    &#125;;\n    function Child (cname, cage, height) &#123;\n      this.height = height\n    &#125;\n\nChild.prototype = new Parent(); // Child原型指向Parent的一个实例\nChild.prototype.constructor = Child; // 把Child指向自己，不与Parent共享\nvar child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\nconsole.log(child) // 发现打印出来的属性都继承了，就是没值\n</code></pre>\n<p>child.ParFunc()：当访问ParFunc属性时，会先在child的实例属性中寻找，找不到就去child的原型对象上去找。一层一层的寻找构成了<strong>原型链</strong><br><img src=\"/img/image-3.png\" alt=\"Alt text\"><br>因为无法向父类构造函数传参;可以 new Parent(‘名字’, ‘年龄’)这时传参<br>注：如果想用原型给Child拓展方法：</p>\n<pre><code>Child.prototype.childHeight = function () &#123;\n      console.log(this.height)\n    &#125;\n</code></pre>\n<p>一定要写到Child.prototype &#x3D; new Parent()的下面，要么就被覆盖掉了。</p>\n<p><strong>③：call、apply继承(不能继承原型链，prototype上的)</strong></p>\n<hr>\n<pre><code>        function Parent (name, age) &#123;\n          this.name = name;\n          this.age = age;\n          this.ParFunc = function () &#123;\n          \tconsole.log(this.name)\n          &#125;\n        &#125;\n        \n        function Child (cname, cage, height) &#123;\n          Parent.call(this,cname,cage); // 继承的参数为当前函数的形参\n          // apply: Parent.call(this,arguments);\n          this.height = height;\n        &#125;\n        var child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\n        console.log(child)  //  ParFunc: ƒ () age: &quot;测试年龄&quot;\nname: &quot;测试名字&quot;\n</code></pre>\n<p><strong>④：组合继承：call+原型链继承</strong></p>\n<hr>\n<pre><code>function Parent (name, age) &#123;\n  this.name = name;\n  this.age = age;\n  this.ParFunc = function () &#123;\n      console.log(this.height)\n  &#125;\n&#125;\nParent.prototype.sayName = function () &#123;\n  console.log(this)\n&#125;\nfunction Child (cname, cage, height) &#123;\n  Parent.call(this, cname, cage); // 解决传参问题\n  this.height = height;\n&#125;;\nChild.prototype = new Parent()\nChild.prototype.constructor = Child; // 把Child指向自己，否则一直指向Parent\nvar child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\n</code></pre>\n<p> 比较常用的继承方式，缺点是 两次调用 Parent构造函数</p>\n<p> <strong>⑤：寄生组合继承：</strong></p>\n<p>cal+prototype</p>\n<hr>\n<pre><code>function Parent (name, age) &#123; // 父函数\n  this.name = name;\n  this.age = age;\n  this.ParFunc = function () &#123;\n      console.log(this.height)\n  &#125;\n&#125;\nParent.prototype.sayName = function () &#123;\n  console.log(this)\n&#125;\nfunction Child (cname, cage, height) &#123; // 子函数\n  Parent.call(this, cname, cage)\n  this.height = height;\n&#125;;\nvar createObj = function () &#123; // 中间函数继承 Parent\n  function Trans() &#123;&#125;;\n  Trans.prototype = Parent.prototype;\n  return new Trans();\n&#125;;\nChild.prototype = createObj()\nChild.prototype.constructor = Child; // 改回指针\nvar child = new Child(&#39;名字&#39;, &#39;年龄&#39;, &#39;身高&#39;)\nconsole.log(child)\n</code></pre>\n<h1 id=\"二：如何获取自定义属性，特例data-如何获取\"><a href=\"#二：如何获取自定义属性，特例data-如何获取\" class=\"headerlink\" title=\"二：如何获取自定义属性，特例data-*如何获取\"></a>二：如何获取自定义属性，特例data-*如何获取</h1><p>官方定义：<br>        data-<em>是 <strong>html5</strong> 新属性<br>        主要用于存储页面的自定义数据<br>        不应该包含大写字母（会默认转为小写）<br>        注释：用户代理会完全忽略前缀为 “data-“ 的自定义属性。<br>脑海里第一印象就是 getAttribute(),setAttribute()俩属性了，一个获取，一个设置<br>而平时又很少用到，但是平时用的框架什么的多数都用 data-</em> 这个自定义属性，那其实获取 data- 这类自定义属性的时候，还有个更方便的方法dataset</p>\n<pre><code>&lt;div data-a=&quot;aa&quot; id=&quot;div1&quot; data-b=&quot;bb&quot;&gt;&lt;/div&gt;\neg:var div1 = document.getElementById(&#39;div1&#39;)\nconsole.log(div1.dataset) // DOMStringMap &#123;a: &quot;测试&quot;, b: &quot;222&quot;&#125;a: &quot;测试&quot;b: &quot;222&quot;\n</code></pre>\n<p>用data-*作为自定义属性：可以一句话就获取到所有属性，获取方式也简便   </p>\n<h2 id=\"三：事件的几个阶段：捕获、目标-event-target，即触发过程-、冒泡\"><a href=\"#三：事件的几个阶段：捕获、目标-event-target，即触发过程-、冒泡\" class=\"headerlink\" title=\"三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡\"></a>三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡</h2><p>先盗个图</p>\n<p><img src=\"/img/image-2.png\" alt=\"Alt text\"><br>——冒泡(IE事件流)：从最深的节点向外传播，div -&gt; window,就好比往水里丢一个石子，一层层波浪抵达河边缘</p>\n<p>——捕获(网景)：从最外层向目标传递，window -&gt; div,就好比你去一个大企业集团找人，需要提供公司 &gt; 大部门 &gt; 小部门 &gt; 小组 &gt; 目标</p>\n<p>——目标：即触发过程event.target</p>\n<p>——target、currentTarget的区别：target这个属性指向的是目标过程中的DOM对象，也就是 <em><strong>触发事件监听的对象</strong></em>, currentTarget这个指向的是当前的对象，具体内容跟this一样，当this指向的是目标的时候(事件的目标阶段)，target与currentTarget相同</p>\n<p>——现在几乎所有的主流浏览器都支持冒泡；IE早起版本会跳过html直接跳到document，且不支持捕获。</p>\n<p>——平时多数用到冒泡多一些，事件代理(委托)也是通过事件冒泡的原理，让DOM节点可追溯，也可以利用冒泡的原理做埋点，避免新增DOM节点，改代码上线</p>\n<p>——事件句柄addEventListener(‘事件名’, ‘function’, false)，默认冒泡</p>\n<h2 id=\"四：判断数据类型，返回数据的具体类型\"><a href=\"#四：判断数据类型，返回数据的具体类型\" class=\"headerlink\" title=\"四：判断数据类型，返回数据的具体类型\"></a>四：判断数据类型，返回数据的具体类型</h2><p>emm… 那不就直接 <code>return typeof n</code> 不就完了，哦不对，再识别一下数组，因为数组的typeof也是对象，Array.isArray(n)…<br>&#x2F;^12&#x2F; 这返回啥？ wc,也是object吧，那咋区分，对，正则有test方法，再判断一下<br>    if (n.test) {<br>        return ‘RegExp’<br>    }<br>null好像也返回obj吧，时间 Date嘞，都返回obj也没毛病，万物皆对象啊。</p>\n<ul>\n<li><p>据说instanceof也可以：左侧是否是右侧的实例，也就是说每个类型我们都得判断，于是</p>\n<p> [] instanceof Array &#x2F;&#x2F; true<br> [] instanceof Object &#x2F;&#x2F; true</p>\n</li>\n</ul>\n<p>不光麻烦，返回的也不精确啊</p>\n<ul>\n<li>据说constructor也可以：js引擎会为函数添加prototype,并让其指向’该函数’的引用<br>&#x2F;^12&#x2F;.constructor  &#x2F;&#x2F; f RexExp(){[native code]}<br>new Date().constructor &#x2F;&#x2F; ƒ Date() { [native code] }<br>null.constructor &#x2F;&#x2F; 报错：Cannot read..<br>undefined.constructor &#x2F;&#x2F; 报错：Cannot read..<br>发现确实能校验一些typeof 不能校验的，但是 null和undefined没有’指针’啊,而且写继承的时候，指针是可以被改的，稍不注意就凉凉了…</li>\n<li>把这些都整合到一起基本也都够用了，可是并不优雅<br>有请toString登场….<br>华丽分割线</li>\n</ul>\n<hr>\n<p>toString() 是 Object 的原型方法，调用该方法，默认返回当前对象的 [[Class]] 。这是一个内部属性，其格式为 [object Xxx] ，其中 Xxx 就是对象的类型。完美~~</p>\n<pre><code>Object.prototype.toString.call(null) ; // [object Null]\nObject.prototype.toString.call(new Function()) ; // [object Function]\nObject.prototype.toString.call(new Date()) ; // [object Date]\n</code></pre>\n<p>但是我觉得除了obj比较特殊之外，其他类型,typeof都可以判断，不需要再多调用一次toString方法，所以最终封装 &#x3D;&gt;</p>\n<pre><code>function typeDetection (n) &#123;\n  if (typeof n === &#39;object&#39;) &#123;\n      return Object.prototype.toString.call(n)\n  &#125; else &#123;\n      return typeof n\n  &#125;\n&#125;\n</code></pre>\n<p>直接调用typeDetection(‘’)  &#x2F;&#x2F; string</p>\n<h2 id=\"五：千分位的实现\"><a href=\"#五：千分位的实现\" class=\"headerlink\" title=\"五：千分位的实现\"></a>五：千分位的实现</h2><p><strong>Q:字符：1234567890.12 转换为：1,234,567,890.12</strong></p>\n<p><strong>R:</strong><br>个人用了while循环的方式<br>    function strFilter (str) {<br>      let newStr &#x3D; String(str).split(‘.’) &#x2F;&#x2F; 切分原始字符,兼容传入Number类型<br>      let transStr &#x3D; newStr[0],resStr &#x3D; []<br>      while (transStr&#x2F;1000 &gt; 1) { &#x2F;&#x2F; 判断是否大于1000<br>          let whildStr &#x3D; String((transStr&#x2F;1000).toFixed(3)).split(‘.’) &#x2F;&#x2F; 这里一定要保留三位小数,否则正数部分末位的0就会丢失,又转为String，因为Number没有split方法<br>          transStr &#x3D; whildStr[0] &#x2F;&#x2F; 每次都取小数点以前的(正数部分)<br>          resStr.unshift(whildStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>) &#x2F;&#x2F; 向前插入小数点后的数字()<br>      }<br>      &#x2F;&#x2F; 除以1000剩下的数 + 每次除以1000后的数 + 原来小数<br>      let res2 &#x3D; newStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>?(‘.’ + newStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>):’’<br>      let resComma &#x3D; resStr.length?(‘,’ + resStr.join(‘,’)): ‘’<br>      return transStr + resComma + res2<br>    }<br>虽然实现代码很多，但个人觉得还算易懂</p>\n<p>网上看到用正则的，确实简短：</p>\n<pre><code>function strFilter2 (n) &#123;\n  let s = String(n)\n  let re = /\\d&#123;1,3&#125;(?=(\\d&#123;3&#125;)+$)/g\n  let n1 = s.replace(/^(\\d+)((\\.\\d+)?)$/, function (s, s1, s2) &#123; return s1.replace(re, &#39;$&amp;,&#39;) + s2 &#125;)\n  return n1\n&#125;\n</code></pre>\n<p>其实正则在好多场景都体现出优势，只是不能被轻易想到</p>\n<p><strong>Q:以下this指向</strong></p>\n<pre><code>(function () &#123;\n  &quot;use strict&quot;;\n  console.log(this) // undefined\n&#125;)()\n(function () &#123;\n  &quot;use strict&quot;;\n  console.log(this) // window\n&#125;)()\n</code></pre>\n<p><strong>R:严格模式下，除构造函数、对象内置函数外，this均指向 undefined</strong></p>\n<p><strong>Q:script标签的 async、defer啥区别？</strong><br><strong>R:别说那没用的，上图</strong></p>\n<p><img src=\"/img/image-1.png\" alt=\"Alt text\"><br>啥也不加：script读取和解析脚本阶段都会阻断页面执行，<br>加async  : script解析脚本阶段会阻断页面执行<br>加defer   : scriptj脚本将在页面完成解析时执行</p>\n<p>Q:[1,2,3].map(parseInt)的结果？<br>R:之前用到parseInt，只知道是向下取整，翻了下w3c的parseInt定义: Crazy</p>\n<p><img src=\"/img/image-4.png\" alt=\"Alt text\"><br>再看map，</p>\n<p><img src=\"/img/image-5.png\" alt=\"Alt text\"><br>parseInt就是回调函数,map会传给parseInt三个参数，parseInt只识别前两个，<br>那也就是得到了 </p>\n<pre><code>function parseInt1 (item, index) &#123;\n  return parseInt(item,index)\n&#125;\n</code></pre>\n<p>得到  <code>parseInt(1,0) parseInt(2,1) parseInt(3,2)</code></p>\n<pre><code>parseInt(1,0)，parseInt定义radix不传或者0,按10进制，也就得到了1\nparseInt(2,1)，parseInt又定义第二个参数 radix 位于 2-36(除了0)，否则返回NaN,所以得到NaN\n\nparseInt(3,2),这个据说(网上)是 3不是 2的合法进制数 (只有0和1)，但是个人试了试\nparseInt(10,2) =&gt; 3，parseInt(20, 2) =&gt; 6,parseInt(30, 2) =&gt; NaN\n\n,发现只要是字符首字符小于 radix都是可以的，但是一旦首字符 &gt;= radix，就会返回NaN\n</code></pre>\n<p>参考文章：<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">判断js数据类型的四种方法</a></p>\n","excerpt":"","more":"<p>本文为知识整理，可能工作中用到这些东西不多，可是总有人想让你会</p>\n<hr>\n<h2 id=\"前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\"><a href=\"#前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\" class=\"headerlink\" title=\"  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。一：js继承\"></a>  前言：小时候很渴望长大，羡慕大人们的财富自由；长大后又很羡慕小时候，怀念小时候的无忧无虑，守候着那份天真。哦，还有，不是长大就能财富自由。。。<br>一：js继承</h2><hr>\n<p><strong>①：对象冒充实现继承：(可实现多继承)</strong></p>\n<hr>\n<p>——原理：让父类构造函数成为子类的方法，然后调用子类的方法，通过this关键字给所有属性和方法赋值</p>\n<pre><code>function Parent(name)\n&#123;\n    this.name=name;\n    this.sayName=function () &#123;\n        console.log(this.name);\n    &#125;\n&#125;\nfunction Child (cname) &#123;\n    this.parent=Parent;\n    this.parent(cname);\n    delete this.parent; // 删除无用的parent函数 == f Parent(name)\n&#125;\nvar mychild=new Child(&quot;名字&quot;);\nmychild.sayName();\n</code></pre>\n<p><strong>②：原型链继承 (不能实现多继承)</strong></p>\n<p>prototype</p>\n<hr>\n<pre><code>    function Parent (name, age) &#123;\n      this.name = name;\n      this.age = age;\n      this.ParFunc = function () &#123;\n      \tconsole.log(this.height)\n      &#125;\n    &#125;;\n    Parent.prototype.sayName = function () &#123;\n      console.log(this)\n    &#125;;\n    function Child (cname, cage, height) &#123;\n      this.height = height\n    &#125;\n\nChild.prototype = new Parent(); // Child原型指向Parent的一个实例\nChild.prototype.constructor = Child; // 把Child指向自己，不与Parent共享\nvar child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\nconsole.log(child) // 发现打印出来的属性都继承了，就是没值\n</code></pre>\n<p>child.ParFunc()：当访问ParFunc属性时，会先在child的实例属性中寻找，找不到就去child的原型对象上去找。一层一层的寻找构成了<strong>原型链</strong><br><img src=\"/img/image-3.png\" alt=\"Alt text\"><br>因为无法向父类构造函数传参;可以 new Parent(‘名字’, ‘年龄’)这时传参<br>注：如果想用原型给Child拓展方法：</p>\n<pre><code>Child.prototype.childHeight = function () &#123;\n      console.log(this.height)\n    &#125;\n</code></pre>\n<p>一定要写到Child.prototype &#x3D; new Parent()的下面，要么就被覆盖掉了。</p>\n<p><strong>③：call、apply继承(不能继承原型链，prototype上的)</strong></p>\n<hr>\n<pre><code>        function Parent (name, age) &#123;\n          this.name = name;\n          this.age = age;\n          this.ParFunc = function () &#123;\n          \tconsole.log(this.name)\n          &#125;\n        &#125;\n        \n        function Child (cname, cage, height) &#123;\n          Parent.call(this,cname,cage); // 继承的参数为当前函数的形参\n          // apply: Parent.call(this,arguments);\n          this.height = height;\n        &#125;\n        var child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\n        console.log(child)  //  ParFunc: ƒ () age: &quot;测试年龄&quot;\nname: &quot;测试名字&quot;\n</code></pre>\n<p><strong>④：组合继承：call+原型链继承</strong></p>\n<hr>\n<pre><code>function Parent (name, age) &#123;\n  this.name = name;\n  this.age = age;\n  this.ParFunc = function () &#123;\n      console.log(this.height)\n  &#125;\n&#125;\nParent.prototype.sayName = function () &#123;\n  console.log(this)\n&#125;\nfunction Child (cname, cage, height) &#123;\n  Parent.call(this, cname, cage); // 解决传参问题\n  this.height = height;\n&#125;;\nChild.prototype = new Parent()\nChild.prototype.constructor = Child; // 把Child指向自己，否则一直指向Parent\nvar child = new Child(&#39;测试名字&#39;, &#39;测试年龄&#39;, &#39;测试身高&#39;)\n</code></pre>\n<p> 比较常用的继承方式，缺点是 两次调用 Parent构造函数</p>\n<p> <strong>⑤：寄生组合继承：</strong></p>\n<p>cal+prototype</p>\n<hr>\n<pre><code>function Parent (name, age) &#123; // 父函数\n  this.name = name;\n  this.age = age;\n  this.ParFunc = function () &#123;\n      console.log(this.height)\n  &#125;\n&#125;\nParent.prototype.sayName = function () &#123;\n  console.log(this)\n&#125;\nfunction Child (cname, cage, height) &#123; // 子函数\n  Parent.call(this, cname, cage)\n  this.height = height;\n&#125;;\nvar createObj = function () &#123; // 中间函数继承 Parent\n  function Trans() &#123;&#125;;\n  Trans.prototype = Parent.prototype;\n  return new Trans();\n&#125;;\nChild.prototype = createObj()\nChild.prototype.constructor = Child; // 改回指针\nvar child = new Child(&#39;名字&#39;, &#39;年龄&#39;, &#39;身高&#39;)\nconsole.log(child)\n</code></pre>\n<h1 id=\"二：如何获取自定义属性，特例data-如何获取\"><a href=\"#二：如何获取自定义属性，特例data-如何获取\" class=\"headerlink\" title=\"二：如何获取自定义属性，特例data-*如何获取\"></a>二：如何获取自定义属性，特例data-*如何获取</h1><p>官方定义：<br>        data-<em>是 <strong>html5</strong> 新属性<br>        主要用于存储页面的自定义数据<br>        不应该包含大写字母（会默认转为小写）<br>        注释：用户代理会完全忽略前缀为 “data-“ 的自定义属性。<br>脑海里第一印象就是 getAttribute(),setAttribute()俩属性了，一个获取，一个设置<br>而平时又很少用到，但是平时用的框架什么的多数都用 data-</em> 这个自定义属性，那其实获取 data- 这类自定义属性的时候，还有个更方便的方法dataset</p>\n<pre><code>&lt;div data-a=&quot;aa&quot; id=&quot;div1&quot; data-b=&quot;bb&quot;&gt;&lt;/div&gt;\neg:var div1 = document.getElementById(&#39;div1&#39;)\nconsole.log(div1.dataset) // DOMStringMap &#123;a: &quot;测试&quot;, b: &quot;222&quot;&#125;a: &quot;测试&quot;b: &quot;222&quot;\n</code></pre>\n<p>用data-*作为自定义属性：可以一句话就获取到所有属性，获取方式也简便   </p>\n<h2 id=\"三：事件的几个阶段：捕获、目标-event-target，即触发过程-、冒泡\"><a href=\"#三：事件的几个阶段：捕获、目标-event-target，即触发过程-、冒泡\" class=\"headerlink\" title=\"三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡\"></a>三：事件的几个阶段：捕获、目标(event.target，即触发过程)、冒泡</h2><p>先盗个图</p>\n<p><img src=\"/img/image-2.png\" alt=\"Alt text\"><br>——冒泡(IE事件流)：从最深的节点向外传播，div -&gt; window,就好比往水里丢一个石子，一层层波浪抵达河边缘</p>\n<p>——捕获(网景)：从最外层向目标传递，window -&gt; div,就好比你去一个大企业集团找人，需要提供公司 &gt; 大部门 &gt; 小部门 &gt; 小组 &gt; 目标</p>\n<p>——目标：即触发过程event.target</p>\n<p>——target、currentTarget的区别：target这个属性指向的是目标过程中的DOM对象，也就是 <em><strong>触发事件监听的对象</strong></em>, currentTarget这个指向的是当前的对象，具体内容跟this一样，当this指向的是目标的时候(事件的目标阶段)，target与currentTarget相同</p>\n<p>——现在几乎所有的主流浏览器都支持冒泡；IE早起版本会跳过html直接跳到document，且不支持捕获。</p>\n<p>——平时多数用到冒泡多一些，事件代理(委托)也是通过事件冒泡的原理，让DOM节点可追溯，也可以利用冒泡的原理做埋点，避免新增DOM节点，改代码上线</p>\n<p>——事件句柄addEventListener(‘事件名’, ‘function’, false)，默认冒泡</p>\n<h2 id=\"四：判断数据类型，返回数据的具体类型\"><a href=\"#四：判断数据类型，返回数据的具体类型\" class=\"headerlink\" title=\"四：判断数据类型，返回数据的具体类型\"></a>四：判断数据类型，返回数据的具体类型</h2><p>emm… 那不就直接 <code>return typeof n</code> 不就完了，哦不对，再识别一下数组，因为数组的typeof也是对象，Array.isArray(n)…<br>&#x2F;^12&#x2F; 这返回啥？ wc,也是object吧，那咋区分，对，正则有test方法，再判断一下<br>    if (n.test) {<br>        return ‘RegExp’<br>    }<br>null好像也返回obj吧，时间 Date嘞，都返回obj也没毛病，万物皆对象啊。</p>\n<ul>\n<li><p>据说instanceof也可以：左侧是否是右侧的实例，也就是说每个类型我们都得判断，于是</p>\n<p> [] instanceof Array &#x2F;&#x2F; true<br> [] instanceof Object &#x2F;&#x2F; true</p>\n</li>\n</ul>\n<p>不光麻烦，返回的也不精确啊</p>\n<ul>\n<li>据说constructor也可以：js引擎会为函数添加prototype,并让其指向’该函数’的引用<br>&#x2F;^12&#x2F;.constructor  &#x2F;&#x2F; f RexExp(){[native code]}<br>new Date().constructor &#x2F;&#x2F; ƒ Date() { [native code] }<br>null.constructor &#x2F;&#x2F; 报错：Cannot read..<br>undefined.constructor &#x2F;&#x2F; 报错：Cannot read..<br>发现确实能校验一些typeof 不能校验的，但是 null和undefined没有’指针’啊,而且写继承的时候，指针是可以被改的，稍不注意就凉凉了…</li>\n<li>把这些都整合到一起基本也都够用了，可是并不优雅<br>有请toString登场….<br>华丽分割线</li>\n</ul>\n<hr>\n<p>toString() 是 Object 的原型方法，调用该方法，默认返回当前对象的 [[Class]] 。这是一个内部属性，其格式为 [object Xxx] ，其中 Xxx 就是对象的类型。完美~~</p>\n<pre><code>Object.prototype.toString.call(null) ; // [object Null]\nObject.prototype.toString.call(new Function()) ; // [object Function]\nObject.prototype.toString.call(new Date()) ; // [object Date]\n</code></pre>\n<p>但是我觉得除了obj比较特殊之外，其他类型,typeof都可以判断，不需要再多调用一次toString方法，所以最终封装 &#x3D;&gt;</p>\n<pre><code>function typeDetection (n) &#123;\n  if (typeof n === &#39;object&#39;) &#123;\n      return Object.prototype.toString.call(n)\n  &#125; else &#123;\n      return typeof n\n  &#125;\n&#125;\n</code></pre>\n<p>直接调用typeDetection(‘’)  &#x2F;&#x2F; string</p>\n<h2 id=\"五：千分位的实现\"><a href=\"#五：千分位的实现\" class=\"headerlink\" title=\"五：千分位的实现\"></a>五：千分位的实现</h2><p><strong>Q:字符：1234567890.12 转换为：1,234,567,890.12</strong></p>\n<p><strong>R:</strong><br>个人用了while循环的方式<br>    function strFilter (str) {<br>      let newStr &#x3D; String(str).split(‘.’) &#x2F;&#x2F; 切分原始字符,兼容传入Number类型<br>      let transStr &#x3D; newStr[0],resStr &#x3D; []<br>      while (transStr&#x2F;1000 &gt; 1) { &#x2F;&#x2F; 判断是否大于1000<br>          let whildStr &#x3D; String((transStr&#x2F;1000).toFixed(3)).split(‘.’) &#x2F;&#x2F; 这里一定要保留三位小数,否则正数部分末位的0就会丢失,又转为String，因为Number没有split方法<br>          transStr &#x3D; whildStr[0] &#x2F;&#x2F; 每次都取小数点以前的(正数部分)<br>          resStr.unshift(whildStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>) &#x2F;&#x2F; 向前插入小数点后的数字()<br>      }<br>      &#x2F;&#x2F; 除以1000剩下的数 + 每次除以1000后的数 + 原来小数<br>      let res2 &#x3D; newStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>?(‘.’ + newStr<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">1</a>):’’<br>      let resComma &#x3D; resStr.length?(‘,’ + resStr.join(‘,’)): ‘’<br>      return transStr + resComma + res2<br>    }<br>虽然实现代码很多，但个人觉得还算易懂</p>\n<p>网上看到用正则的，确实简短：</p>\n<pre><code>function strFilter2 (n) &#123;\n  let s = String(n)\n  let re = /\\d&#123;1,3&#125;(?=(\\d&#123;3&#125;)+$)/g\n  let n1 = s.replace(/^(\\d+)((\\.\\d+)?)$/, function (s, s1, s2) &#123; return s1.replace(re, &#39;$&amp;,&#39;) + s2 &#125;)\n  return n1\n&#125;\n</code></pre>\n<p>其实正则在好多场景都体现出优势，只是不能被轻易想到</p>\n<p><strong>Q:以下this指向</strong></p>\n<pre><code>(function () &#123;\n  &quot;use strict&quot;;\n  console.log(this) // undefined\n&#125;)()\n(function () &#123;\n  &quot;use strict&quot;;\n  console.log(this) // window\n&#125;)()\n</code></pre>\n<p><strong>R:严格模式下，除构造函数、对象内置函数外，this均指向 undefined</strong></p>\n<p><strong>Q:script标签的 async、defer啥区别？</strong><br><strong>R:别说那没用的，上图</strong></p>\n<p><img src=\"/img/image-1.png\" alt=\"Alt text\"><br>啥也不加：script读取和解析脚本阶段都会阻断页面执行，<br>加async  : script解析脚本阶段会阻断页面执行<br>加defer   : scriptj脚本将在页面完成解析时执行</p>\n<p>Q:[1,2,3].map(parseInt)的结果？<br>R:之前用到parseInt，只知道是向下取整，翻了下w3c的parseInt定义: Crazy</p>\n<p><img src=\"/img/image-4.png\" alt=\"Alt text\"><br>再看map，</p>\n<p><img src=\"/img/image-5.png\" alt=\"Alt text\"><br>parseInt就是回调函数,map会传给parseInt三个参数，parseInt只识别前两个，<br>那也就是得到了 </p>\n<pre><code>function parseInt1 (item, index) &#123;\n  return parseInt(item,index)\n&#125;\n</code></pre>\n<p>得到  <code>parseInt(1,0) parseInt(2,1) parseInt(3,2)</code></p>\n<pre><code>parseInt(1,0)，parseInt定义radix不传或者0,按10进制，也就得到了1\nparseInt(2,1)，parseInt又定义第二个参数 radix 位于 2-36(除了0)，否则返回NaN,所以得到NaN\n\nparseInt(3,2),这个据说(网上)是 3不是 2的合法进制数 (只有0和1)，但是个人试了试\nparseInt(10,2) =&gt; 3，parseInt(20, 2) =&gt; 6,parseInt(30, 2) =&gt; NaN\n\n,发现只要是字符首字符小于 radix都是可以的，但是一旦首字符 &gt;= radix，就会返回NaN\n</code></pre>\n<p>参考文章：<a href=\"https://www.cnblogs.com/onepixel/p/5126046.html\">判断js数据类型的四种方法</a></p>\n"},{"title":"vue-cli升级vite","date":"2024-02-23T02:02:01.000Z","cover":"/img/common/t3.jpg","_content":"# vue升级2.7,关联vite升级\n> https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html\n\nvue-template-compiler@2.6.10 需要升级到2.7.16\nvite-plugin-vue2 替换为 @vitejs/plugin-vue2\nvite.createFilter is not a function\n\n需要升级vite到3.x版本，这个错误是vite与插件不兼容,查看@vitejs/plugin-vue2源码发现，引入了vite3.0\nError in render: \"ReferenceError: React is not defined\"\n需要安装@vitejs/plugin-vue-jsx\n使用vue this, vuex等\nimport { getCurrentInstance } from 'vue'\n\n// 访问vuex\nexport const useStore = () => {\n  const vm = getCurrentInstance()\n  if (!vm) throw new Error('must be called in setup')\n  console.log('vm--', vm);\n  return vm.proxy.$store\n}\n// 访问this\nexport const useCtx = () => {\n  const vm = getCurrentInstance()\n  if (!vm) throw new Error('must be called in setup')\n  return vm.proxy;\n}\n\n--------------------------------------------------------------------------------\n## 增加vite开发环境\nREADME.md\n## 新增vite dev环境\n#### 渐进升级,不影响原使用,目前保留vue-cli-service和vite共存\n#### node v14.8以上(我使用了v16)\n切换版本后需要删除node_module报包重新执行 npm install\n### 本地\nnpm run dev-vite\n#### 其他说明\ncss尽量别使用 module 这个名称,会报这么个错误,待排查\n\n```\n[vite] Internal server error: Unexpected token (1:0)\n  Plugin: vite-plugin-commonjs\n```\nbabel.config.js\n\n```\nvar npmEvent = process.env.npm_lifecycle_event;\nconsole.log('babel p', npmEvent);\nmodule.exports = {\n  presets: [\n    // https://github.com/vuejs/vue-cli/tree/master/packages/@vue/babel-preset-app\n    npmEvent === 'dev-vite' ? '@babel/preset-env' : '@vue/cli-plugin-babel/preset',\n    // '@babel/preset-env', // vite版需要安装这个\n  ],\n  'env': {\n    'development': {\n      // babel-plugin-dynamic-import-node plugin only does one thing by converting all import() to require().\n      // This plugin can significantly increase the speed of hot updates, when you have a large number of pages.\n      'plugins': ['dynamic-import-node']\n    }\n  }\n}\n```\n\npackage.json 增加脚本\n```\n\"dev-vite\": \"vite\",\n\"build-vite\": \"vite build\",\n\"preview-vite\": \"vite preview\"\n```\n\nmain.js\n```\n if (process.env.VITE) {\n   import('virtual:svg-icons-register')\n }\n ```\n // vite显示svg需要引入这个,但是在vue-cli里面引入报错,待TODO\nindex.html\n修改main.js为 type=\"module\"\n\n\nvite.config.js\n```\nimport { defineConfig } from \"vite\";\nimport commonjs from \"vite-plugin-commonjs\";\nimport ViteRequireContext from \"@originjs/vite-plugin-require-context\";\n// import viteComponents, { VuetifyResolver } from \"vite-plugin-components\";\nimport envCompatible from \"vite-plugin-env-compatible\";\n// import OptimizationPersist from \"vite-plugin-optimize-persist\";\n// import PkgConfig from \"vite-plugin-package-config\";\nimport { createSvgIconsPlugin } from \"vite-plugin-svg-icons\";\n// import { createVuePlugin } from \"vite-plugin-vue2\";\nimport vue from '@vitejs/plugin-vue2';\nimport vueJsx from '@vitejs/plugin-vue2-jsx'\n// import { viteExternalsPlugin } from 'vite-plugin-externals'\n\nimport path from \"path\";\nimport requireTransform from 'vite-plugin-require-transform';\nimport legacy from '@vitejs/plugin-legacy'\n\n// const { createVuePlugin } = require('vite-plugin-vue2')\n// const path = require('path')\nconst REPLACEMENT = `${path.resolve(__dirname, \"./src\")}/`;\nconst REPLACEMENT2 = `${path.resolve(__dirname, \"./static\")}/`;\nexport default defineConfig({\n  server: {\n    host: \"0.0.0.0\",\n    https: false,\n    port: 8080,\n    proxy: {\n    },\n    // open: true\n  },\n  resolve: {\n    alias: [\n      {\n        find: \"@/\",\n        replacement: REPLACEMENT,\n      },\n      {\n        find: \"src/\",\n        replacement: REPLACEMENT,\n      },\n      {\n        find: /^~@\\//,\n        replacement: REPLACEMENT,\n      },\n      {\n        find: '~static/',\n        replacement: REPLACEMENT2\n      },\n      {\n        find: /^~/,\n        replacement: '',\n      },\n    ],\n    extensions: [\n      \".vue\",\n      \".js\",\n      \".jsx\",\n      \".mjs\",\n      \".ts\",\n      \".tsx\",\n      \".json\",\n      \".css\",\n      \".scss\",\n    ],\n  },\n  plugins: [\n    legacy({\n      targets: ['defaults', 'ie >= 11', 'chrome 52'],\n      additionalLegacyPolyfills: ['regenerator-runtime/runtime'],\n    }),\n    // viteExternalsPlugin({\n    //   vue: 'Vue',\n    //   'vuex': 'Vuex',\n    //   'vue-router': 'VueRouter',\n    //   'element-ui':'ELEMENT'\n    // }),\n    // createVuePlugin({ jsx: true }),\n    vue(),\n    vueJsx({\n      // options are passed on to @vue/babel-preset-jsx\n    }),\n    // viteComponents({\n    //   customComponentResolvers: [VuetifyResolver()],\n    // }),\n    requireTransform({\n      fileRegex: /.js$|.vue$/\n    }),\n    createSvgIconsPlugin({\n      iconDirs: [path.resolve(__dirname, \"./src/icons/svg\")],\n      symbolId: \"icon-[dir]-[name]\",\n    }),\n    commonjs(/* options */),\n    ViteRequireContext(/* options */),\n    envCompatible(),\n    // PkgConfig(),\n    // OptimizationPersist()\n  ],\n  build: {\n    target: \"es2015\"\n  }\n});\n```\n\n","source":"_posts/vite.md","raw":"---\ntitle: vue-cli升级vite\ndate: 2024-02-23 10:02:01\ncover: /img/common/t3.jpg\ncategories: 脚手架\ntags:\n---\n# vue升级2.7,关联vite升级\n> https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html\n\nvue-template-compiler@2.6.10 需要升级到2.7.16\nvite-plugin-vue2 替换为 @vitejs/plugin-vue2\nvite.createFilter is not a function\n\n需要升级vite到3.x版本，这个错误是vite与插件不兼容,查看@vitejs/plugin-vue2源码发现，引入了vite3.0\nError in render: \"ReferenceError: React is not defined\"\n需要安装@vitejs/plugin-vue-jsx\n使用vue this, vuex等\nimport { getCurrentInstance } from 'vue'\n\n// 访问vuex\nexport const useStore = () => {\n  const vm = getCurrentInstance()\n  if (!vm) throw new Error('must be called in setup')\n  console.log('vm--', vm);\n  return vm.proxy.$store\n}\n// 访问this\nexport const useCtx = () => {\n  const vm = getCurrentInstance()\n  if (!vm) throw new Error('must be called in setup')\n  return vm.proxy;\n}\n\n--------------------------------------------------------------------------------\n## 增加vite开发环境\nREADME.md\n## 新增vite dev环境\n#### 渐进升级,不影响原使用,目前保留vue-cli-service和vite共存\n#### node v14.8以上(我使用了v16)\n切换版本后需要删除node_module报包重新执行 npm install\n### 本地\nnpm run dev-vite\n#### 其他说明\ncss尽量别使用 module 这个名称,会报这么个错误,待排查\n\n```\n[vite] Internal server error: Unexpected token (1:0)\n  Plugin: vite-plugin-commonjs\n```\nbabel.config.js\n\n```\nvar npmEvent = process.env.npm_lifecycle_event;\nconsole.log('babel p', npmEvent);\nmodule.exports = {\n  presets: [\n    // https://github.com/vuejs/vue-cli/tree/master/packages/@vue/babel-preset-app\n    npmEvent === 'dev-vite' ? '@babel/preset-env' : '@vue/cli-plugin-babel/preset',\n    // '@babel/preset-env', // vite版需要安装这个\n  ],\n  'env': {\n    'development': {\n      // babel-plugin-dynamic-import-node plugin only does one thing by converting all import() to require().\n      // This plugin can significantly increase the speed of hot updates, when you have a large number of pages.\n      'plugins': ['dynamic-import-node']\n    }\n  }\n}\n```\n\npackage.json 增加脚本\n```\n\"dev-vite\": \"vite\",\n\"build-vite\": \"vite build\",\n\"preview-vite\": \"vite preview\"\n```\n\nmain.js\n```\n if (process.env.VITE) {\n   import('virtual:svg-icons-register')\n }\n ```\n // vite显示svg需要引入这个,但是在vue-cli里面引入报错,待TODO\nindex.html\n修改main.js为 type=\"module\"\n\n\nvite.config.js\n```\nimport { defineConfig } from \"vite\";\nimport commonjs from \"vite-plugin-commonjs\";\nimport ViteRequireContext from \"@originjs/vite-plugin-require-context\";\n// import viteComponents, { VuetifyResolver } from \"vite-plugin-components\";\nimport envCompatible from \"vite-plugin-env-compatible\";\n// import OptimizationPersist from \"vite-plugin-optimize-persist\";\n// import PkgConfig from \"vite-plugin-package-config\";\nimport { createSvgIconsPlugin } from \"vite-plugin-svg-icons\";\n// import { createVuePlugin } from \"vite-plugin-vue2\";\nimport vue from '@vitejs/plugin-vue2';\nimport vueJsx from '@vitejs/plugin-vue2-jsx'\n// import { viteExternalsPlugin } from 'vite-plugin-externals'\n\nimport path from \"path\";\nimport requireTransform from 'vite-plugin-require-transform';\nimport legacy from '@vitejs/plugin-legacy'\n\n// const { createVuePlugin } = require('vite-plugin-vue2')\n// const path = require('path')\nconst REPLACEMENT = `${path.resolve(__dirname, \"./src\")}/`;\nconst REPLACEMENT2 = `${path.resolve(__dirname, \"./static\")}/`;\nexport default defineConfig({\n  server: {\n    host: \"0.0.0.0\",\n    https: false,\n    port: 8080,\n    proxy: {\n    },\n    // open: true\n  },\n  resolve: {\n    alias: [\n      {\n        find: \"@/\",\n        replacement: REPLACEMENT,\n      },\n      {\n        find: \"src/\",\n        replacement: REPLACEMENT,\n      },\n      {\n        find: /^~@\\//,\n        replacement: REPLACEMENT,\n      },\n      {\n        find: '~static/',\n        replacement: REPLACEMENT2\n      },\n      {\n        find: /^~/,\n        replacement: '',\n      },\n    ],\n    extensions: [\n      \".vue\",\n      \".js\",\n      \".jsx\",\n      \".mjs\",\n      \".ts\",\n      \".tsx\",\n      \".json\",\n      \".css\",\n      \".scss\",\n    ],\n  },\n  plugins: [\n    legacy({\n      targets: ['defaults', 'ie >= 11', 'chrome 52'],\n      additionalLegacyPolyfills: ['regenerator-runtime/runtime'],\n    }),\n    // viteExternalsPlugin({\n    //   vue: 'Vue',\n    //   'vuex': 'Vuex',\n    //   'vue-router': 'VueRouter',\n    //   'element-ui':'ELEMENT'\n    // }),\n    // createVuePlugin({ jsx: true }),\n    vue(),\n    vueJsx({\n      // options are passed on to @vue/babel-preset-jsx\n    }),\n    // viteComponents({\n    //   customComponentResolvers: [VuetifyResolver()],\n    // }),\n    requireTransform({\n      fileRegex: /.js$|.vue$/\n    }),\n    createSvgIconsPlugin({\n      iconDirs: [path.resolve(__dirname, \"./src/icons/svg\")],\n      symbolId: \"icon-[dir]-[name]\",\n    }),\n    commonjs(/* options */),\n    ViteRequireContext(/* options */),\n    envCompatible(),\n    // PkgConfig(),\n    // OptimizationPersist()\n  ],\n  build: {\n    target: \"es2015\"\n  }\n});\n```\n\n","slug":"vite","published":1,"updated":"2024-03-19T03:33:54.122Z","_id":"cltxtllmr0003gqcg3c1q9z23","comments":1,"layout":"post","photos":[],"content":"<h1 id=\"vue升级2-7-关联vite升级\"><a href=\"#vue升级2-7-关联vite升级\" class=\"headerlink\" title=\"vue升级2.7,关联vite升级\"></a>vue升级2.7,关联vite升级</h1><blockquote>\n<p><a href=\"https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html\">https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html</a></p>\n</blockquote>\n<p><a href=\"mailto:&#x76;&#x75;&#101;&#x2d;&#116;&#x65;&#x6d;&#112;&#x6c;&#x61;&#x74;&#101;&#45;&#99;&#x6f;&#x6d;&#112;&#x69;&#x6c;&#101;&#114;&#64;&#x32;&#46;&#x36;&#46;&#49;&#48;\">&#x76;&#x75;&#101;&#x2d;&#116;&#x65;&#x6d;&#112;&#x6c;&#x61;&#x74;&#101;&#45;&#99;&#x6f;&#x6d;&#112;&#x69;&#x6c;&#101;&#114;&#64;&#x32;&#46;&#x36;&#46;&#49;&#48;</a> 需要升级到2.7.16<br>vite-plugin-vue2 替换为 @vitejs&#x2F;plugin-vue2<br>vite.createFilter is not a function</p>\n<p>需要升级vite到3.x版本，这个错误是vite与插件不兼容,查看@vitejs&#x2F;plugin-vue2源码发现，引入了vite3.0<br>Error in render: “ReferenceError: React is not defined”<br>需要安装@vitejs&#x2F;plugin-vue-jsx<br>使用vue this, vuex等<br>import { getCurrentInstance } from ‘vue’</p>\n<p>&#x2F;&#x2F; 访问vuex<br>export const useStore &#x3D; () &#x3D;&gt; {<br>  const vm &#x3D; getCurrentInstance()<br>  if (!vm) throw new Error(‘must be called in setup’)<br>  console.log(‘vm–’, vm);<br>  return vm.proxy.$store<br>}<br>&#x2F;&#x2F; 访问this<br>export const useCtx &#x3D; () &#x3D;&gt; {<br>  const vm &#x3D; getCurrentInstance()<br>  if (!vm) throw new Error(‘must be called in setup’)<br>  return vm.proxy;<br>}</p>\n<hr>\n<h2 id=\"增加vite开发环境\"><a href=\"#增加vite开发环境\" class=\"headerlink\" title=\"增加vite开发环境\"></a>增加vite开发环境</h2><p>README.md</p>\n<h2 id=\"新增vite-dev环境\"><a href=\"#新增vite-dev环境\" class=\"headerlink\" title=\"新增vite dev环境\"></a>新增vite dev环境</h2><h4 id=\"渐进升级-不影响原使用-目前保留vue-cli-service和vite共存\"><a href=\"#渐进升级-不影响原使用-目前保留vue-cli-service和vite共存\" class=\"headerlink\" title=\"渐进升级,不影响原使用,目前保留vue-cli-service和vite共存\"></a>渐进升级,不影响原使用,目前保留vue-cli-service和vite共存</h4><h4 id=\"node-v14-8以上-我使用了v16\"><a href=\"#node-v14-8以上-我使用了v16\" class=\"headerlink\" title=\"node v14.8以上(我使用了v16)\"></a>node v14.8以上(我使用了v16)</h4><p>切换版本后需要删除node_module报包重新执行 npm install</p>\n<h3 id=\"本地\"><a href=\"#本地\" class=\"headerlink\" title=\"本地\"></a>本地</h3><p>npm run dev-vite</p>\n<h4 id=\"其他说明\"><a href=\"#其他说明\" class=\"headerlink\" title=\"其他说明\"></a>其他说明</h4><p>css尽量别使用 module 这个名称,会报这么个错误,待排查</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[vite] Internal server error: Unexpected token (1:0)</span><br><span class=\"line\">  Plugin: vite-plugin-commonjs</span><br></pre></td></tr></table></figure>\n<p>babel.config.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var npmEvent = process.env.npm_lifecycle_event;</span><br><span class=\"line\">console.log(&#x27;babel p&#x27;, npmEvent);</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  presets: [</span><br><span class=\"line\">    // https://github.com/vuejs/vue-cli/tree/master/packages/@vue/babel-preset-app</span><br><span class=\"line\">    npmEvent === &#x27;dev-vite&#x27; ? &#x27;@babel/preset-env&#x27; : &#x27;@vue/cli-plugin-babel/preset&#x27;,</span><br><span class=\"line\">    // &#x27;@babel/preset-env&#x27;, // vite版需要安装这个</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &#x27;env&#x27;: &#123;</span><br><span class=\"line\">    &#x27;development&#x27;: &#123;</span><br><span class=\"line\">      // babel-plugin-dynamic-import-node plugin only does one thing by converting all import() to require().</span><br><span class=\"line\">      // This plugin can significantly increase the speed of hot updates, when you have a large number of pages.</span><br><span class=\"line\">      &#x27;plugins&#x27;: [&#x27;dynamic-import-node&#x27;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>package.json 增加脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;dev-vite&quot;: &quot;vite&quot;,</span><br><span class=\"line\">&quot;build-vite&quot;: &quot;vite build&quot;,</span><br><span class=\"line\">&quot;preview-vite&quot;: &quot;vite preview&quot;</span><br></pre></td></tr></table></figure>\n\n<p>main.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (process.env.VITE) &#123;</span><br><span class=\"line\">  import(&#x27;virtual:svg-icons-register&#x27;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> &#x2F;&#x2F; vite显示svg需要引入这个,但是在vue-cli里面引入报错,待TODO<br>index.html<br>修改main.js为 type&#x3D;”module”</p>\n<p>vite.config.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; defineConfig &#125; from &quot;vite&quot;;</span><br><span class=\"line\">import commonjs from &quot;vite-plugin-commonjs&quot;;</span><br><span class=\"line\">import ViteRequireContext from &quot;@originjs/vite-plugin-require-context&quot;;</span><br><span class=\"line\">// import viteComponents, &#123; VuetifyResolver &#125; from &quot;vite-plugin-components&quot;;</span><br><span class=\"line\">import envCompatible from &quot;vite-plugin-env-compatible&quot;;</span><br><span class=\"line\">// import OptimizationPersist from &quot;vite-plugin-optimize-persist&quot;;</span><br><span class=\"line\">// import PkgConfig from &quot;vite-plugin-package-config&quot;;</span><br><span class=\"line\">import &#123; createSvgIconsPlugin &#125; from &quot;vite-plugin-svg-icons&quot;;</span><br><span class=\"line\">// import &#123; createVuePlugin &#125; from &quot;vite-plugin-vue2&quot;;</span><br><span class=\"line\">import vue from &#x27;@vitejs/plugin-vue2&#x27;;</span><br><span class=\"line\">import vueJsx from &#x27;@vitejs/plugin-vue2-jsx&#x27;</span><br><span class=\"line\">// import &#123; viteExternalsPlugin &#125; from &#x27;vite-plugin-externals&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import path from &quot;path&quot;;</span><br><span class=\"line\">import requireTransform from &#x27;vite-plugin-require-transform&#x27;;</span><br><span class=\"line\">import legacy from &#x27;@vitejs/plugin-legacy&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// const &#123; createVuePlugin &#125; = require(&#x27;vite-plugin-vue2&#x27;)</span><br><span class=\"line\">// const path = require(&#x27;path&#x27;)</span><br><span class=\"line\">const REPLACEMENT = `$&#123;path.resolve(__dirname, &quot;./src&quot;)&#125;/`;</span><br><span class=\"line\">const REPLACEMENT2 = `$&#123;path.resolve(__dirname, &quot;./static&quot;)&#125;/`;</span><br><span class=\"line\">export default defineConfig(&#123;</span><br><span class=\"line\">  server: &#123;</span><br><span class=\"line\">    host: &quot;0.0.0.0&quot;,</span><br><span class=\"line\">    https: false,</span><br><span class=\"line\">    port: 8080,</span><br><span class=\"line\">    proxy: &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // open: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  resolve: &#123;</span><br><span class=\"line\">    alias: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &quot;@/&quot;,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &quot;src/&quot;,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: /^~@\\//,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &#x27;~static/&#x27;,</span><br><span class=\"line\">        replacement: REPLACEMENT2</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: /^~/,</span><br><span class=\"line\">        replacement: &#x27;&#x27;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    extensions: [</span><br><span class=\"line\">      &quot;.vue&quot;,</span><br><span class=\"line\">      &quot;.js&quot;,</span><br><span class=\"line\">      &quot;.jsx&quot;,</span><br><span class=\"line\">      &quot;.mjs&quot;,</span><br><span class=\"line\">      &quot;.ts&quot;,</span><br><span class=\"line\">      &quot;.tsx&quot;,</span><br><span class=\"line\">      &quot;.json&quot;,</span><br><span class=\"line\">      &quot;.css&quot;,</span><br><span class=\"line\">      &quot;.scss&quot;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    legacy(&#123;</span><br><span class=\"line\">      targets: [&#x27;defaults&#x27;, &#x27;ie &gt;= 11&#x27;, &#x27;chrome 52&#x27;],</span><br><span class=\"line\">      additionalLegacyPolyfills: [&#x27;regenerator-runtime/runtime&#x27;],</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // viteExternalsPlugin(&#123;</span><br><span class=\"line\">    //   vue: &#x27;Vue&#x27;,</span><br><span class=\"line\">    //   &#x27;vuex&#x27;: &#x27;Vuex&#x27;,</span><br><span class=\"line\">    //   &#x27;vue-router&#x27;: &#x27;VueRouter&#x27;,</span><br><span class=\"line\">    //   &#x27;element-ui&#x27;:&#x27;ELEMENT&#x27;</span><br><span class=\"line\">    // &#125;),</span><br><span class=\"line\">    // createVuePlugin(&#123; jsx: true &#125;),</span><br><span class=\"line\">    vue(),</span><br><span class=\"line\">    vueJsx(&#123;</span><br><span class=\"line\">      // options are passed on to @vue/babel-preset-jsx</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // viteComponents(&#123;</span><br><span class=\"line\">    //   customComponentResolvers: [VuetifyResolver()],</span><br><span class=\"line\">    // &#125;),</span><br><span class=\"line\">    requireTransform(&#123;</span><br><span class=\"line\">      fileRegex: /.js$|.vue$/</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    createSvgIconsPlugin(&#123;</span><br><span class=\"line\">      iconDirs: [path.resolve(__dirname, &quot;./src/icons/svg&quot;)],</span><br><span class=\"line\">      symbolId: &quot;icon-[dir]-[name]&quot;,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    commonjs(/* options */),</span><br><span class=\"line\">    ViteRequireContext(/* options */),</span><br><span class=\"line\">    envCompatible(),</span><br><span class=\"line\">    // PkgConfig(),</span><br><span class=\"line\">    // OptimizationPersist()</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">    target: &quot;es2015&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h1 id=\"vue升级2-7-关联vite升级\"><a href=\"#vue升级2-7-关联vite升级\" class=\"headerlink\" title=\"vue升级2.7,关联vite升级\"></a>vue升级2.7,关联vite升级</h1><blockquote>\n<p><a href=\"https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html\">https://v2.cn.vuejs.org/v2/guide/migration-vue-2-7.html</a></p>\n</blockquote>\n<p><a href=\"mailto:&#x76;&#x75;&#101;&#x2d;&#116;&#x65;&#x6d;&#112;&#x6c;&#x61;&#x74;&#101;&#45;&#99;&#x6f;&#x6d;&#112;&#x69;&#x6c;&#101;&#114;&#64;&#x32;&#46;&#x36;&#46;&#49;&#48;\">&#x76;&#x75;&#101;&#x2d;&#116;&#x65;&#x6d;&#112;&#x6c;&#x61;&#x74;&#101;&#45;&#99;&#x6f;&#x6d;&#112;&#x69;&#x6c;&#101;&#114;&#64;&#x32;&#46;&#x36;&#46;&#49;&#48;</a> 需要升级到2.7.16<br>vite-plugin-vue2 替换为 @vitejs&#x2F;plugin-vue2<br>vite.createFilter is not a function</p>\n<p>需要升级vite到3.x版本，这个错误是vite与插件不兼容,查看@vitejs&#x2F;plugin-vue2源码发现，引入了vite3.0<br>Error in render: “ReferenceError: React is not defined”<br>需要安装@vitejs&#x2F;plugin-vue-jsx<br>使用vue this, vuex等<br>import { getCurrentInstance } from ‘vue’</p>\n<p>&#x2F;&#x2F; 访问vuex<br>export const useStore &#x3D; () &#x3D;&gt; {<br>  const vm &#x3D; getCurrentInstance()<br>  if (!vm) throw new Error(‘must be called in setup’)<br>  console.log(‘vm–’, vm);<br>  return vm.proxy.$store<br>}<br>&#x2F;&#x2F; 访问this<br>export const useCtx &#x3D; () &#x3D;&gt; {<br>  const vm &#x3D; getCurrentInstance()<br>  if (!vm) throw new Error(‘must be called in setup’)<br>  return vm.proxy;<br>}</p>\n<hr>\n<h2 id=\"增加vite开发环境\"><a href=\"#增加vite开发环境\" class=\"headerlink\" title=\"增加vite开发环境\"></a>增加vite开发环境</h2><p>README.md</p>\n<h2 id=\"新增vite-dev环境\"><a href=\"#新增vite-dev环境\" class=\"headerlink\" title=\"新增vite dev环境\"></a>新增vite dev环境</h2><h4 id=\"渐进升级-不影响原使用-目前保留vue-cli-service和vite共存\"><a href=\"#渐进升级-不影响原使用-目前保留vue-cli-service和vite共存\" class=\"headerlink\" title=\"渐进升级,不影响原使用,目前保留vue-cli-service和vite共存\"></a>渐进升级,不影响原使用,目前保留vue-cli-service和vite共存</h4><h4 id=\"node-v14-8以上-我使用了v16\"><a href=\"#node-v14-8以上-我使用了v16\" class=\"headerlink\" title=\"node v14.8以上(我使用了v16)\"></a>node v14.8以上(我使用了v16)</h4><p>切换版本后需要删除node_module报包重新执行 npm install</p>\n<h3 id=\"本地\"><a href=\"#本地\" class=\"headerlink\" title=\"本地\"></a>本地</h3><p>npm run dev-vite</p>\n<h4 id=\"其他说明\"><a href=\"#其他说明\" class=\"headerlink\" title=\"其他说明\"></a>其他说明</h4><p>css尽量别使用 module 这个名称,会报这么个错误,待排查</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[vite] Internal server error: Unexpected token (1:0)</span><br><span class=\"line\">  Plugin: vite-plugin-commonjs</span><br></pre></td></tr></table></figure>\n<p>babel.config.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var npmEvent = process.env.npm_lifecycle_event;</span><br><span class=\"line\">console.log(&#x27;babel p&#x27;, npmEvent);</span><br><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">  presets: [</span><br><span class=\"line\">    // https://github.com/vuejs/vue-cli/tree/master/packages/@vue/babel-preset-app</span><br><span class=\"line\">    npmEvent === &#x27;dev-vite&#x27; ? &#x27;@babel/preset-env&#x27; : &#x27;@vue/cli-plugin-babel/preset&#x27;,</span><br><span class=\"line\">    // &#x27;@babel/preset-env&#x27;, // vite版需要安装这个</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &#x27;env&#x27;: &#123;</span><br><span class=\"line\">    &#x27;development&#x27;: &#123;</span><br><span class=\"line\">      // babel-plugin-dynamic-import-node plugin only does one thing by converting all import() to require().</span><br><span class=\"line\">      // This plugin can significantly increase the speed of hot updates, when you have a large number of pages.</span><br><span class=\"line\">      &#x27;plugins&#x27;: [&#x27;dynamic-import-node&#x27;]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>package.json 增加脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;dev-vite&quot;: &quot;vite&quot;,</span><br><span class=\"line\">&quot;build-vite&quot;: &quot;vite build&quot;,</span><br><span class=\"line\">&quot;preview-vite&quot;: &quot;vite preview&quot;</span><br></pre></td></tr></table></figure>\n\n<p>main.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if (process.env.VITE) &#123;</span><br><span class=\"line\">  import(&#x27;virtual:svg-icons-register&#x27;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> &#x2F;&#x2F; vite显示svg需要引入这个,但是在vue-cli里面引入报错,待TODO<br>index.html<br>修改main.js为 type&#x3D;”module”</p>\n<p>vite.config.js</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; defineConfig &#125; from &quot;vite&quot;;</span><br><span class=\"line\">import commonjs from &quot;vite-plugin-commonjs&quot;;</span><br><span class=\"line\">import ViteRequireContext from &quot;@originjs/vite-plugin-require-context&quot;;</span><br><span class=\"line\">// import viteComponents, &#123; VuetifyResolver &#125; from &quot;vite-plugin-components&quot;;</span><br><span class=\"line\">import envCompatible from &quot;vite-plugin-env-compatible&quot;;</span><br><span class=\"line\">// import OptimizationPersist from &quot;vite-plugin-optimize-persist&quot;;</span><br><span class=\"line\">// import PkgConfig from &quot;vite-plugin-package-config&quot;;</span><br><span class=\"line\">import &#123; createSvgIconsPlugin &#125; from &quot;vite-plugin-svg-icons&quot;;</span><br><span class=\"line\">// import &#123; createVuePlugin &#125; from &quot;vite-plugin-vue2&quot;;</span><br><span class=\"line\">import vue from &#x27;@vitejs/plugin-vue2&#x27;;</span><br><span class=\"line\">import vueJsx from &#x27;@vitejs/plugin-vue2-jsx&#x27;</span><br><span class=\"line\">// import &#123; viteExternalsPlugin &#125; from &#x27;vite-plugin-externals&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">import path from &quot;path&quot;;</span><br><span class=\"line\">import requireTransform from &#x27;vite-plugin-require-transform&#x27;;</span><br><span class=\"line\">import legacy from &#x27;@vitejs/plugin-legacy&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">// const &#123; createVuePlugin &#125; = require(&#x27;vite-plugin-vue2&#x27;)</span><br><span class=\"line\">// const path = require(&#x27;path&#x27;)</span><br><span class=\"line\">const REPLACEMENT = `$&#123;path.resolve(__dirname, &quot;./src&quot;)&#125;/`;</span><br><span class=\"line\">const REPLACEMENT2 = `$&#123;path.resolve(__dirname, &quot;./static&quot;)&#125;/`;</span><br><span class=\"line\">export default defineConfig(&#123;</span><br><span class=\"line\">  server: &#123;</span><br><span class=\"line\">    host: &quot;0.0.0.0&quot;,</span><br><span class=\"line\">    https: false,</span><br><span class=\"line\">    port: 8080,</span><br><span class=\"line\">    proxy: &#123;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // open: true</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  resolve: &#123;</span><br><span class=\"line\">    alias: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &quot;@/&quot;,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &quot;src/&quot;,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: /^~@\\//,</span><br><span class=\"line\">        replacement: REPLACEMENT,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: &#x27;~static/&#x27;,</span><br><span class=\"line\">        replacement: REPLACEMENT2</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        find: /^~/,</span><br><span class=\"line\">        replacement: &#x27;&#x27;,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    extensions: [</span><br><span class=\"line\">      &quot;.vue&quot;,</span><br><span class=\"line\">      &quot;.js&quot;,</span><br><span class=\"line\">      &quot;.jsx&quot;,</span><br><span class=\"line\">      &quot;.mjs&quot;,</span><br><span class=\"line\">      &quot;.ts&quot;,</span><br><span class=\"line\">      &quot;.tsx&quot;,</span><br><span class=\"line\">      &quot;.json&quot;,</span><br><span class=\"line\">      &quot;.css&quot;,</span><br><span class=\"line\">      &quot;.scss&quot;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  plugins: [</span><br><span class=\"line\">    legacy(&#123;</span><br><span class=\"line\">      targets: [&#x27;defaults&#x27;, &#x27;ie &gt;= 11&#x27;, &#x27;chrome 52&#x27;],</span><br><span class=\"line\">      additionalLegacyPolyfills: [&#x27;regenerator-runtime/runtime&#x27;],</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // viteExternalsPlugin(&#123;</span><br><span class=\"line\">    //   vue: &#x27;Vue&#x27;,</span><br><span class=\"line\">    //   &#x27;vuex&#x27;: &#x27;Vuex&#x27;,</span><br><span class=\"line\">    //   &#x27;vue-router&#x27;: &#x27;VueRouter&#x27;,</span><br><span class=\"line\">    //   &#x27;element-ui&#x27;:&#x27;ELEMENT&#x27;</span><br><span class=\"line\">    // &#125;),</span><br><span class=\"line\">    // createVuePlugin(&#123; jsx: true &#125;),</span><br><span class=\"line\">    vue(),</span><br><span class=\"line\">    vueJsx(&#123;</span><br><span class=\"line\">      // options are passed on to @vue/babel-preset-jsx</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    // viteComponents(&#123;</span><br><span class=\"line\">    //   customComponentResolvers: [VuetifyResolver()],</span><br><span class=\"line\">    // &#125;),</span><br><span class=\"line\">    requireTransform(&#123;</span><br><span class=\"line\">      fileRegex: /.js$|.vue$/</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    createSvgIconsPlugin(&#123;</span><br><span class=\"line\">      iconDirs: [path.resolve(__dirname, &quot;./src/icons/svg&quot;)],</span><br><span class=\"line\">      symbolId: &quot;icon-[dir]-[name]&quot;,</span><br><span class=\"line\">    &#125;),</span><br><span class=\"line\">    commonjs(/* options */),</span><br><span class=\"line\">    ViteRequireContext(/* options */),</span><br><span class=\"line\">    envCompatible(),</span><br><span class=\"line\">    // PkgConfig(),</span><br><span class=\"line\">    // OptimizationPersist()</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  build: &#123;</span><br><span class=\"line\">    target: &quot;es2015&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cltxtllmq0002gqcgh8wnbl6q","category_id":"cltxtao620003dycgcewu98pk","_id":"cltxtllms0004gqcg39dv7vnl"},{"post_id":"cltxtllmr0003gqcg3c1q9z23","category_id":"cltxtao630006dycgfr1ugb9u","_id":"cltxtllms0005gqcgc59lhtti"}],"PostTag":[],"Tag":[]}}